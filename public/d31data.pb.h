// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: d31data.proto

#ifndef PROTOBUF_d31data_2eproto__INCLUDED
#define PROTOBUF_d31data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_d31data_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsD31ItemImpl();
void InitDefaultsD31Item();
inline void InitDefaults() {
  InitDefaultsD31Item();
}
}  // namespace protobuf_d31data_2eproto
class D31Item;
class D31ItemDefaultTypeInternal;
extern D31ItemDefaultTypeInternal _D31Item_default_instance_;

// ===================================================================

class D31Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:D31Item) */ {
 public:
  D31Item();
  virtual ~D31Item();

  D31Item(const D31Item& from);

  inline D31Item& operator=(const D31Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  D31Item(D31Item&& from) noexcept
    : D31Item() {
    *this = ::std::move(from);
  }

  inline D31Item& operator=(D31Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const D31Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const D31Item* internal_default_instance() {
    return reinterpret_cast<const D31Item*>(
               &_D31Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(D31Item* other);
  friend void swap(D31Item& a, D31Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline D31Item* New() const PROTOBUF_FINAL { return New(NULL); }

  D31Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const D31Item& from);
  void MergeFrom(const D31Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(D31Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float afZbBidAmount = 3;
  int afzbbidamount_size() const;
  void clear_afzbbidamount();
  static const int kAfZbBidAmountFieldNumber = 3;
  float afzbbidamount(int index) const;
  void set_afzbbidamount(int index, float value);
  void add_afzbbidamount(float value);
  const ::google::protobuf::RepeatedField< float >&
      afzbbidamount() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afzbbidamount();

  // repeated float afZbBidVolume = 4;
  int afzbbidvolume_size() const;
  void clear_afzbbidvolume();
  static const int kAfZbBidVolumeFieldNumber = 4;
  float afzbbidvolume(int index) const;
  void set_afzbbidvolume(int index, float value);
  void add_afzbbidvolume(float value);
  const ::google::protobuf::RepeatedField< float >&
      afzbbidvolume() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afzbbidvolume();

  // repeated uint32 anZbBidOrderNum = 5;
  int anzbbidordernum_size() const;
  void clear_anzbbidordernum();
  static const int kAnZbBidOrderNumFieldNumber = 5;
  ::google::protobuf::uint32 anzbbidordernum(int index) const;
  void set_anzbbidordernum(int index, ::google::protobuf::uint32 value);
  void add_anzbbidordernum(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      anzbbidordernum() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_anzbbidordernum();

  // repeated float afZbAskAmount = 6;
  int afzbaskamount_size() const;
  void clear_afzbaskamount();
  static const int kAfZbAskAmountFieldNumber = 6;
  float afzbaskamount(int index) const;
  void set_afzbaskamount(int index, float value);
  void add_afzbaskamount(float value);
  const ::google::protobuf::RepeatedField< float >&
      afzbaskamount() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afzbaskamount();

  // repeated float afZbAskVolume = 7;
  int afzbaskvolume_size() const;
  void clear_afzbaskvolume();
  static const int kAfZbAskVolumeFieldNumber = 7;
  float afzbaskvolume(int index) const;
  void set_afzbaskvolume(int index, float value);
  void add_afzbaskvolume(float value);
  const ::google::protobuf::RepeatedField< float >&
      afzbaskvolume() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afzbaskvolume();

  // repeated uint32 anZbAskOrderNum = 8;
  int anzbaskordernum_size() const;
  void clear_anzbaskordernum();
  static const int kAnZbAskOrderNumFieldNumber = 8;
  ::google::protobuf::uint32 anzbaskordernum(int index) const;
  void set_anzbaskordernum(int index, ::google::protobuf::uint32 value);
  void add_anzbaskordernum(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      anzbaskordernum() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_anzbaskordernum();

  // repeated float afZdBidAmount = 9;
  int afzdbidamount_size() const;
  void clear_afzdbidamount();
  static const int kAfZdBidAmountFieldNumber = 9;
  float afzdbidamount(int index) const;
  void set_afzdbidamount(int index, float value);
  void add_afzdbidamount(float value);
  const ::google::protobuf::RepeatedField< float >&
      afzdbidamount() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afzdbidamount();

  // repeated float afZdBidVolume = 10;
  int afzdbidvolume_size() const;
  void clear_afzdbidvolume();
  static const int kAfZdBidVolumeFieldNumber = 10;
  float afzdbidvolume(int index) const;
  void set_afzdbidvolume(int index, float value);
  void add_afzdbidvolume(float value);
  const ::google::protobuf::RepeatedField< float >&
      afzdbidvolume() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afzdbidvolume();

  // repeated uint32 anZdBidOrderNum = 11;
  int anzdbidordernum_size() const;
  void clear_anzdbidordernum();
  static const int kAnZdBidOrderNumFieldNumber = 11;
  ::google::protobuf::uint32 anzdbidordernum(int index) const;
  void set_anzdbidordernum(int index, ::google::protobuf::uint32 value);
  void add_anzdbidordernum(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      anzdbidordernum() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_anzdbidordernum();

  // repeated float afZdAskAmount = 12;
  int afzdaskamount_size() const;
  void clear_afzdaskamount();
  static const int kAfZdAskAmountFieldNumber = 12;
  float afzdaskamount(int index) const;
  void set_afzdaskamount(int index, float value);
  void add_afzdaskamount(float value);
  const ::google::protobuf::RepeatedField< float >&
      afzdaskamount() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afzdaskamount();

  // repeated float afZdAskVolume = 13;
  int afzdaskvolume_size() const;
  void clear_afzdaskvolume();
  static const int kAfZdAskVolumeFieldNumber = 13;
  float afzdaskvolume(int index) const;
  void set_afzdaskvolume(int index, float value);
  void add_afzdaskvolume(float value);
  const ::google::protobuf::RepeatedField< float >&
      afzdaskvolume() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afzdaskvolume();

  // repeated uint32 anZdAskOrderNum = 14;
  int anzdaskordernum_size() const;
  void clear_anzdaskordernum();
  static const int kAnZdAskOrderNumFieldNumber = 14;
  ::google::protobuf::uint32 anzdaskordernum(int index) const;
  void set_anzdaskordernum(int index, ::google::protobuf::uint32 value);
  void add_anzdaskordernum(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      anzdaskordernum() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_anzdaskordernum();

  // repeated float afReserve = 35;
  int afreserve_size() const;
  void clear_afreserve();
  static const int kAfReserveFieldNumber = 35;
  float afreserve(int index) const;
  void set_afreserve(int index, float value);
  void add_afreserve(float value);
  const ::google::protobuf::RepeatedField< float >&
      afreserve() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_afreserve();

  // uint32 nStockCode = 1;
  void clear_nstockcode();
  static const int kNStockCodeFieldNumber = 1;
  ::google::protobuf::uint32 nstockcode() const;
  void set_nstockcode(::google::protobuf::uint32 value);

  // uint32 nTradeTime = 2;
  void clear_ntradetime();
  static const int kNTradeTimeFieldNumber = 2;
  ::google::protobuf::uint32 ntradetime() const;
  void set_ntradetime(::google::protobuf::uint32 value);

  // float fTenBidVolume = 15;
  void clear_ftenbidvolume();
  static const int kFTenBidVolumeFieldNumber = 15;
  float ftenbidvolume() const;
  void set_ftenbidvolume(float value);

  // float fTenAskVolume = 16;
  void clear_ftenaskvolume();
  static const int kFTenAskVolumeFieldNumber = 16;
  float ftenaskvolume() const;
  void set_ftenaskvolume(float value);

  // float fTenBidAmnt = 17;
  void clear_ftenbidamnt();
  static const int kFTenBidAmntFieldNumber = 17;
  float ftenbidamnt() const;
  void set_ftenbidamnt(float value);

  // float fTenAskAmnt = 18;
  void clear_ftenaskamnt();
  static const int kFTenAskAmntFieldNumber = 18;
  float ftenaskamnt() const;
  void set_ftenaskamnt(float value);

  // float fTotalBidVolume = 19;
  void clear_ftotalbidvolume();
  static const int kFTotalBidVolumeFieldNumber = 19;
  float ftotalbidvolume() const;
  void set_ftotalbidvolume(float value);

  // float fTotalAskVolume = 20;
  void clear_ftotalaskvolume();
  static const int kFTotalAskVolumeFieldNumber = 20;
  float ftotalaskvolume() const;
  void set_ftotalaskvolume(float value);

  // float fTotalBidAmnt = 21;
  void clear_ftotalbidamnt();
  static const int kFTotalBidAmntFieldNumber = 21;
  float ftotalbidamnt() const;
  void set_ftotalbidamnt(float value);

  // float fTotalAskAmnt = 22;
  void clear_ftotalaskamnt();
  static const int kFTotalAskAmntFieldNumber = 22;
  float ftotalaskamnt() const;
  void set_ftotalaskamnt(float value);

  // float fWtAvgBidPrice = 23;
  void clear_fwtavgbidprice();
  static const int kFWtAvgBidPriceFieldNumber = 23;
  float fwtavgbidprice() const;
  void set_fwtavgbidprice(float value);

  // float fWtAvgAskPrice = 24;
  void clear_fwtavgaskprice();
  static const int kFWtAvgAskPriceFieldNumber = 24;
  float fwtavgaskprice() const;
  void set_fwtavgaskprice(float value);

  // float fLastClose = 25;
  void clear_flastclose();
  static const int kFLastCloseFieldNumber = 25;
  float flastclose() const;
  void set_flastclose(float value);

  // float fCurPrice = 26;
  void clear_fcurprice();
  static const int kFCurPriceFieldNumber = 26;
  float fcurprice() const;
  void set_fcurprice(float value);

  // float fAvgTotalBidAmnt = 27;
  void clear_favgtotalbidamnt();
  static const int kFAvgTotalBidAmntFieldNumber = 27;
  float favgtotalbidamnt() const;
  void set_favgtotalbidamnt(float value);

  // float fAvgTotalAskAmnt = 28;
  void clear_favgtotalaskamnt();
  static const int kFAvgTotalAskAmntFieldNumber = 28;
  float favgtotalaskamnt() const;
  void set_favgtotalaskamnt(float value);

  // float fBidAmount20 = 29;
  void clear_fbidamount20();
  static const int kFBidAmount20FieldNumber = 29;
  float fbidamount20() const;
  void set_fbidamount20(float value);

  // float fAskAmount20 = 30;
  void clear_faskamount20();
  static const int kFAskAmount20FieldNumber = 30;
  float faskamount20() const;
  void set_faskamount20(float value);

  // float fBidAmount50 = 31;
  void clear_fbidamount50();
  static const int kFBidAmount50FieldNumber = 31;
  float fbidamount50() const;
  void set_fbidamount50(float value);

  // float fAskAmount50 = 32;
  void clear_faskamount50();
  static const int kFAskAmount50FieldNumber = 32;
  float faskamount50() const;
  void set_faskamount50(float value);

  // float fBidAmount100 = 33;
  void clear_fbidamount100();
  static const int kFBidAmount100FieldNumber = 33;
  float fbidamount100() const;
  void set_fbidamount100(float value);

  // float fAskAmount100 = 34;
  void clear_faskamount100();
  static const int kFAskAmount100FieldNumber = 34;
  float faskamount100() const;
  void set_faskamount100(float value);

  // @@protoc_insertion_point(class_scope:D31Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > afzbbidamount_;
  mutable int _afzbbidamount_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > afzbbidvolume_;
  mutable int _afzbbidvolume_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > anzbbidordernum_;
  mutable int _anzbbidordernum_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > afzbaskamount_;
  mutable int _afzbaskamount_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > afzbaskvolume_;
  mutable int _afzbaskvolume_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > anzbaskordernum_;
  mutable int _anzbaskordernum_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > afzdbidamount_;
  mutable int _afzdbidamount_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > afzdbidvolume_;
  mutable int _afzdbidvolume_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > anzdbidordernum_;
  mutable int _anzdbidordernum_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > afzdaskamount_;
  mutable int _afzdaskamount_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > afzdaskvolume_;
  mutable int _afzdaskvolume_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > anzdaskordernum_;
  mutable int _anzdaskordernum_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > afreserve_;
  mutable int _afreserve_cached_byte_size_;
  ::google::protobuf::uint32 nstockcode_;
  ::google::protobuf::uint32 ntradetime_;
  float ftenbidvolume_;
  float ftenaskvolume_;
  float ftenbidamnt_;
  float ftenaskamnt_;
  float ftotalbidvolume_;
  float ftotalaskvolume_;
  float ftotalbidamnt_;
  float ftotalaskamnt_;
  float fwtavgbidprice_;
  float fwtavgaskprice_;
  float flastclose_;
  float fcurprice_;
  float favgtotalbidamnt_;
  float favgtotalaskamnt_;
  float fbidamount20_;
  float faskamount20_;
  float fbidamount50_;
  float faskamount50_;
  float fbidamount100_;
  float faskamount100_;
  mutable int _cached_size_;
  friend struct ::protobuf_d31data_2eproto::TableStruct;
  friend void ::protobuf_d31data_2eproto::InitDefaultsD31ItemImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// D31Item

// uint32 nStockCode = 1;
inline void D31Item::clear_nstockcode() {
  nstockcode_ = 0u;
}
inline ::google::protobuf::uint32 D31Item::nstockcode() const {
  // @@protoc_insertion_point(field_get:D31Item.nStockCode)
  return nstockcode_;
}
inline void D31Item::set_nstockcode(::google::protobuf::uint32 value) {
  
  nstockcode_ = value;
  // @@protoc_insertion_point(field_set:D31Item.nStockCode)
}

// uint32 nTradeTime = 2;
inline void D31Item::clear_ntradetime() {
  ntradetime_ = 0u;
}
inline ::google::protobuf::uint32 D31Item::ntradetime() const {
  // @@protoc_insertion_point(field_get:D31Item.nTradeTime)
  return ntradetime_;
}
inline void D31Item::set_ntradetime(::google::protobuf::uint32 value) {
  
  ntradetime_ = value;
  // @@protoc_insertion_point(field_set:D31Item.nTradeTime)
}

// repeated float afZbBidAmount = 3;
inline int D31Item::afzbbidamount_size() const {
  return afzbbidamount_.size();
}
inline void D31Item::clear_afzbbidamount() {
  afzbbidamount_.Clear();
}
inline float D31Item::afzbbidamount(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afZbBidAmount)
  return afzbbidamount_.Get(index);
}
inline void D31Item::set_afzbbidamount(int index, float value) {
  afzbbidamount_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afZbBidAmount)
}
inline void D31Item::add_afzbbidamount(float value) {
  afzbbidamount_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afZbBidAmount)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afzbbidamount() const {
  // @@protoc_insertion_point(field_list:D31Item.afZbBidAmount)
  return afzbbidamount_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afzbbidamount() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afZbBidAmount)
  return &afzbbidamount_;
}

// repeated float afZbBidVolume = 4;
inline int D31Item::afzbbidvolume_size() const {
  return afzbbidvolume_.size();
}
inline void D31Item::clear_afzbbidvolume() {
  afzbbidvolume_.Clear();
}
inline float D31Item::afzbbidvolume(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afZbBidVolume)
  return afzbbidvolume_.Get(index);
}
inline void D31Item::set_afzbbidvolume(int index, float value) {
  afzbbidvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afZbBidVolume)
}
inline void D31Item::add_afzbbidvolume(float value) {
  afzbbidvolume_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afZbBidVolume)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afzbbidvolume() const {
  // @@protoc_insertion_point(field_list:D31Item.afZbBidVolume)
  return afzbbidvolume_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afzbbidvolume() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afZbBidVolume)
  return &afzbbidvolume_;
}

// repeated uint32 anZbBidOrderNum = 5;
inline int D31Item::anzbbidordernum_size() const {
  return anzbbidordernum_.size();
}
inline void D31Item::clear_anzbbidordernum() {
  anzbbidordernum_.Clear();
}
inline ::google::protobuf::uint32 D31Item::anzbbidordernum(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.anZbBidOrderNum)
  return anzbbidordernum_.Get(index);
}
inline void D31Item::set_anzbbidordernum(int index, ::google::protobuf::uint32 value) {
  anzbbidordernum_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.anZbBidOrderNum)
}
inline void D31Item::add_anzbbidordernum(::google::protobuf::uint32 value) {
  anzbbidordernum_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.anZbBidOrderNum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
D31Item::anzbbidordernum() const {
  // @@protoc_insertion_point(field_list:D31Item.anZbBidOrderNum)
  return anzbbidordernum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
D31Item::mutable_anzbbidordernum() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.anZbBidOrderNum)
  return &anzbbidordernum_;
}

// repeated float afZbAskAmount = 6;
inline int D31Item::afzbaskamount_size() const {
  return afzbaskamount_.size();
}
inline void D31Item::clear_afzbaskamount() {
  afzbaskamount_.Clear();
}
inline float D31Item::afzbaskamount(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afZbAskAmount)
  return afzbaskamount_.Get(index);
}
inline void D31Item::set_afzbaskamount(int index, float value) {
  afzbaskamount_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afZbAskAmount)
}
inline void D31Item::add_afzbaskamount(float value) {
  afzbaskamount_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afZbAskAmount)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afzbaskamount() const {
  // @@protoc_insertion_point(field_list:D31Item.afZbAskAmount)
  return afzbaskamount_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afzbaskamount() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afZbAskAmount)
  return &afzbaskamount_;
}

// repeated float afZbAskVolume = 7;
inline int D31Item::afzbaskvolume_size() const {
  return afzbaskvolume_.size();
}
inline void D31Item::clear_afzbaskvolume() {
  afzbaskvolume_.Clear();
}
inline float D31Item::afzbaskvolume(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afZbAskVolume)
  return afzbaskvolume_.Get(index);
}
inline void D31Item::set_afzbaskvolume(int index, float value) {
  afzbaskvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afZbAskVolume)
}
inline void D31Item::add_afzbaskvolume(float value) {
  afzbaskvolume_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afZbAskVolume)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afzbaskvolume() const {
  // @@protoc_insertion_point(field_list:D31Item.afZbAskVolume)
  return afzbaskvolume_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afzbaskvolume() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afZbAskVolume)
  return &afzbaskvolume_;
}

// repeated uint32 anZbAskOrderNum = 8;
inline int D31Item::anzbaskordernum_size() const {
  return anzbaskordernum_.size();
}
inline void D31Item::clear_anzbaskordernum() {
  anzbaskordernum_.Clear();
}
inline ::google::protobuf::uint32 D31Item::anzbaskordernum(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.anZbAskOrderNum)
  return anzbaskordernum_.Get(index);
}
inline void D31Item::set_anzbaskordernum(int index, ::google::protobuf::uint32 value) {
  anzbaskordernum_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.anZbAskOrderNum)
}
inline void D31Item::add_anzbaskordernum(::google::protobuf::uint32 value) {
  anzbaskordernum_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.anZbAskOrderNum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
D31Item::anzbaskordernum() const {
  // @@protoc_insertion_point(field_list:D31Item.anZbAskOrderNum)
  return anzbaskordernum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
D31Item::mutable_anzbaskordernum() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.anZbAskOrderNum)
  return &anzbaskordernum_;
}

// repeated float afZdBidAmount = 9;
inline int D31Item::afzdbidamount_size() const {
  return afzdbidamount_.size();
}
inline void D31Item::clear_afzdbidamount() {
  afzdbidamount_.Clear();
}
inline float D31Item::afzdbidamount(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afZdBidAmount)
  return afzdbidamount_.Get(index);
}
inline void D31Item::set_afzdbidamount(int index, float value) {
  afzdbidamount_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afZdBidAmount)
}
inline void D31Item::add_afzdbidamount(float value) {
  afzdbidamount_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afZdBidAmount)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afzdbidamount() const {
  // @@protoc_insertion_point(field_list:D31Item.afZdBidAmount)
  return afzdbidamount_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afzdbidamount() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afZdBidAmount)
  return &afzdbidamount_;
}

// repeated float afZdBidVolume = 10;
inline int D31Item::afzdbidvolume_size() const {
  return afzdbidvolume_.size();
}
inline void D31Item::clear_afzdbidvolume() {
  afzdbidvolume_.Clear();
}
inline float D31Item::afzdbidvolume(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afZdBidVolume)
  return afzdbidvolume_.Get(index);
}
inline void D31Item::set_afzdbidvolume(int index, float value) {
  afzdbidvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afZdBidVolume)
}
inline void D31Item::add_afzdbidvolume(float value) {
  afzdbidvolume_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afZdBidVolume)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afzdbidvolume() const {
  // @@protoc_insertion_point(field_list:D31Item.afZdBidVolume)
  return afzdbidvolume_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afzdbidvolume() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afZdBidVolume)
  return &afzdbidvolume_;
}

// repeated uint32 anZdBidOrderNum = 11;
inline int D31Item::anzdbidordernum_size() const {
  return anzdbidordernum_.size();
}
inline void D31Item::clear_anzdbidordernum() {
  anzdbidordernum_.Clear();
}
inline ::google::protobuf::uint32 D31Item::anzdbidordernum(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.anZdBidOrderNum)
  return anzdbidordernum_.Get(index);
}
inline void D31Item::set_anzdbidordernum(int index, ::google::protobuf::uint32 value) {
  anzdbidordernum_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.anZdBidOrderNum)
}
inline void D31Item::add_anzdbidordernum(::google::protobuf::uint32 value) {
  anzdbidordernum_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.anZdBidOrderNum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
D31Item::anzdbidordernum() const {
  // @@protoc_insertion_point(field_list:D31Item.anZdBidOrderNum)
  return anzdbidordernum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
D31Item::mutable_anzdbidordernum() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.anZdBidOrderNum)
  return &anzdbidordernum_;
}

// repeated float afZdAskAmount = 12;
inline int D31Item::afzdaskamount_size() const {
  return afzdaskamount_.size();
}
inline void D31Item::clear_afzdaskamount() {
  afzdaskamount_.Clear();
}
inline float D31Item::afzdaskamount(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afZdAskAmount)
  return afzdaskamount_.Get(index);
}
inline void D31Item::set_afzdaskamount(int index, float value) {
  afzdaskamount_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afZdAskAmount)
}
inline void D31Item::add_afzdaskamount(float value) {
  afzdaskamount_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afZdAskAmount)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afzdaskamount() const {
  // @@protoc_insertion_point(field_list:D31Item.afZdAskAmount)
  return afzdaskamount_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afzdaskamount() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afZdAskAmount)
  return &afzdaskamount_;
}

// repeated float afZdAskVolume = 13;
inline int D31Item::afzdaskvolume_size() const {
  return afzdaskvolume_.size();
}
inline void D31Item::clear_afzdaskvolume() {
  afzdaskvolume_.Clear();
}
inline float D31Item::afzdaskvolume(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afZdAskVolume)
  return afzdaskvolume_.Get(index);
}
inline void D31Item::set_afzdaskvolume(int index, float value) {
  afzdaskvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afZdAskVolume)
}
inline void D31Item::add_afzdaskvolume(float value) {
  afzdaskvolume_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afZdAskVolume)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afzdaskvolume() const {
  // @@protoc_insertion_point(field_list:D31Item.afZdAskVolume)
  return afzdaskvolume_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afzdaskvolume() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afZdAskVolume)
  return &afzdaskvolume_;
}

// repeated uint32 anZdAskOrderNum = 14;
inline int D31Item::anzdaskordernum_size() const {
  return anzdaskordernum_.size();
}
inline void D31Item::clear_anzdaskordernum() {
  anzdaskordernum_.Clear();
}
inline ::google::protobuf::uint32 D31Item::anzdaskordernum(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.anZdAskOrderNum)
  return anzdaskordernum_.Get(index);
}
inline void D31Item::set_anzdaskordernum(int index, ::google::protobuf::uint32 value) {
  anzdaskordernum_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.anZdAskOrderNum)
}
inline void D31Item::add_anzdaskordernum(::google::protobuf::uint32 value) {
  anzdaskordernum_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.anZdAskOrderNum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
D31Item::anzdaskordernum() const {
  // @@protoc_insertion_point(field_list:D31Item.anZdAskOrderNum)
  return anzdaskordernum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
D31Item::mutable_anzdaskordernum() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.anZdAskOrderNum)
  return &anzdaskordernum_;
}

// float fTenBidVolume = 15;
inline void D31Item::clear_ftenbidvolume() {
  ftenbidvolume_ = 0;
}
inline float D31Item::ftenbidvolume() const {
  // @@protoc_insertion_point(field_get:D31Item.fTenBidVolume)
  return ftenbidvolume_;
}
inline void D31Item::set_ftenbidvolume(float value) {
  
  ftenbidvolume_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fTenBidVolume)
}

// float fTenAskVolume = 16;
inline void D31Item::clear_ftenaskvolume() {
  ftenaskvolume_ = 0;
}
inline float D31Item::ftenaskvolume() const {
  // @@protoc_insertion_point(field_get:D31Item.fTenAskVolume)
  return ftenaskvolume_;
}
inline void D31Item::set_ftenaskvolume(float value) {
  
  ftenaskvolume_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fTenAskVolume)
}

// float fTenBidAmnt = 17;
inline void D31Item::clear_ftenbidamnt() {
  ftenbidamnt_ = 0;
}
inline float D31Item::ftenbidamnt() const {
  // @@protoc_insertion_point(field_get:D31Item.fTenBidAmnt)
  return ftenbidamnt_;
}
inline void D31Item::set_ftenbidamnt(float value) {
  
  ftenbidamnt_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fTenBidAmnt)
}

// float fTenAskAmnt = 18;
inline void D31Item::clear_ftenaskamnt() {
  ftenaskamnt_ = 0;
}
inline float D31Item::ftenaskamnt() const {
  // @@protoc_insertion_point(field_get:D31Item.fTenAskAmnt)
  return ftenaskamnt_;
}
inline void D31Item::set_ftenaskamnt(float value) {
  
  ftenaskamnt_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fTenAskAmnt)
}

// float fTotalBidVolume = 19;
inline void D31Item::clear_ftotalbidvolume() {
  ftotalbidvolume_ = 0;
}
inline float D31Item::ftotalbidvolume() const {
  // @@protoc_insertion_point(field_get:D31Item.fTotalBidVolume)
  return ftotalbidvolume_;
}
inline void D31Item::set_ftotalbidvolume(float value) {
  
  ftotalbidvolume_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fTotalBidVolume)
}

// float fTotalAskVolume = 20;
inline void D31Item::clear_ftotalaskvolume() {
  ftotalaskvolume_ = 0;
}
inline float D31Item::ftotalaskvolume() const {
  // @@protoc_insertion_point(field_get:D31Item.fTotalAskVolume)
  return ftotalaskvolume_;
}
inline void D31Item::set_ftotalaskvolume(float value) {
  
  ftotalaskvolume_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fTotalAskVolume)
}

// float fTotalBidAmnt = 21;
inline void D31Item::clear_ftotalbidamnt() {
  ftotalbidamnt_ = 0;
}
inline float D31Item::ftotalbidamnt() const {
  // @@protoc_insertion_point(field_get:D31Item.fTotalBidAmnt)
  return ftotalbidamnt_;
}
inline void D31Item::set_ftotalbidamnt(float value) {
  
  ftotalbidamnt_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fTotalBidAmnt)
}

// float fTotalAskAmnt = 22;
inline void D31Item::clear_ftotalaskamnt() {
  ftotalaskamnt_ = 0;
}
inline float D31Item::ftotalaskamnt() const {
  // @@protoc_insertion_point(field_get:D31Item.fTotalAskAmnt)
  return ftotalaskamnt_;
}
inline void D31Item::set_ftotalaskamnt(float value) {
  
  ftotalaskamnt_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fTotalAskAmnt)
}

// float fWtAvgBidPrice = 23;
inline void D31Item::clear_fwtavgbidprice() {
  fwtavgbidprice_ = 0;
}
inline float D31Item::fwtavgbidprice() const {
  // @@protoc_insertion_point(field_get:D31Item.fWtAvgBidPrice)
  return fwtavgbidprice_;
}
inline void D31Item::set_fwtavgbidprice(float value) {
  
  fwtavgbidprice_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fWtAvgBidPrice)
}

// float fWtAvgAskPrice = 24;
inline void D31Item::clear_fwtavgaskprice() {
  fwtavgaskprice_ = 0;
}
inline float D31Item::fwtavgaskprice() const {
  // @@protoc_insertion_point(field_get:D31Item.fWtAvgAskPrice)
  return fwtavgaskprice_;
}
inline void D31Item::set_fwtavgaskprice(float value) {
  
  fwtavgaskprice_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fWtAvgAskPrice)
}

// float fLastClose = 25;
inline void D31Item::clear_flastclose() {
  flastclose_ = 0;
}
inline float D31Item::flastclose() const {
  // @@protoc_insertion_point(field_get:D31Item.fLastClose)
  return flastclose_;
}
inline void D31Item::set_flastclose(float value) {
  
  flastclose_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fLastClose)
}

// float fCurPrice = 26;
inline void D31Item::clear_fcurprice() {
  fcurprice_ = 0;
}
inline float D31Item::fcurprice() const {
  // @@protoc_insertion_point(field_get:D31Item.fCurPrice)
  return fcurprice_;
}
inline void D31Item::set_fcurprice(float value) {
  
  fcurprice_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fCurPrice)
}

// float fAvgTotalBidAmnt = 27;
inline void D31Item::clear_favgtotalbidamnt() {
  favgtotalbidamnt_ = 0;
}
inline float D31Item::favgtotalbidamnt() const {
  // @@protoc_insertion_point(field_get:D31Item.fAvgTotalBidAmnt)
  return favgtotalbidamnt_;
}
inline void D31Item::set_favgtotalbidamnt(float value) {
  
  favgtotalbidamnt_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fAvgTotalBidAmnt)
}

// float fAvgTotalAskAmnt = 28;
inline void D31Item::clear_favgtotalaskamnt() {
  favgtotalaskamnt_ = 0;
}
inline float D31Item::favgtotalaskamnt() const {
  // @@protoc_insertion_point(field_get:D31Item.fAvgTotalAskAmnt)
  return favgtotalaskamnt_;
}
inline void D31Item::set_favgtotalaskamnt(float value) {
  
  favgtotalaskamnt_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fAvgTotalAskAmnt)
}

// float fBidAmount20 = 29;
inline void D31Item::clear_fbidamount20() {
  fbidamount20_ = 0;
}
inline float D31Item::fbidamount20() const {
  // @@protoc_insertion_point(field_get:D31Item.fBidAmount20)
  return fbidamount20_;
}
inline void D31Item::set_fbidamount20(float value) {
  
  fbidamount20_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fBidAmount20)
}

// float fAskAmount20 = 30;
inline void D31Item::clear_faskamount20() {
  faskamount20_ = 0;
}
inline float D31Item::faskamount20() const {
  // @@protoc_insertion_point(field_get:D31Item.fAskAmount20)
  return faskamount20_;
}
inline void D31Item::set_faskamount20(float value) {
  
  faskamount20_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fAskAmount20)
}

// float fBidAmount50 = 31;
inline void D31Item::clear_fbidamount50() {
  fbidamount50_ = 0;
}
inline float D31Item::fbidamount50() const {
  // @@protoc_insertion_point(field_get:D31Item.fBidAmount50)
  return fbidamount50_;
}
inline void D31Item::set_fbidamount50(float value) {
  
  fbidamount50_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fBidAmount50)
}

// float fAskAmount50 = 32;
inline void D31Item::clear_faskamount50() {
  faskamount50_ = 0;
}
inline float D31Item::faskamount50() const {
  // @@protoc_insertion_point(field_get:D31Item.fAskAmount50)
  return faskamount50_;
}
inline void D31Item::set_faskamount50(float value) {
  
  faskamount50_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fAskAmount50)
}

// float fBidAmount100 = 33;
inline void D31Item::clear_fbidamount100() {
  fbidamount100_ = 0;
}
inline float D31Item::fbidamount100() const {
  // @@protoc_insertion_point(field_get:D31Item.fBidAmount100)
  return fbidamount100_;
}
inline void D31Item::set_fbidamount100(float value) {
  
  fbidamount100_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fBidAmount100)
}

// float fAskAmount100 = 34;
inline void D31Item::clear_faskamount100() {
  faskamount100_ = 0;
}
inline float D31Item::faskamount100() const {
  // @@protoc_insertion_point(field_get:D31Item.fAskAmount100)
  return faskamount100_;
}
inline void D31Item::set_faskamount100(float value) {
  
  faskamount100_ = value;
  // @@protoc_insertion_point(field_set:D31Item.fAskAmount100)
}

// repeated float afReserve = 35;
inline int D31Item::afreserve_size() const {
  return afreserve_.size();
}
inline void D31Item::clear_afreserve() {
  afreserve_.Clear();
}
inline float D31Item::afreserve(int index) const {
  // @@protoc_insertion_point(field_get:D31Item.afReserve)
  return afreserve_.Get(index);
}
inline void D31Item::set_afreserve(int index, float value) {
  afreserve_.Set(index, value);
  // @@protoc_insertion_point(field_set:D31Item.afReserve)
}
inline void D31Item::add_afreserve(float value) {
  afreserve_.Add(value);
  // @@protoc_insertion_point(field_add:D31Item.afReserve)
}
inline const ::google::protobuf::RepeatedField< float >&
D31Item::afreserve() const {
  // @@protoc_insertion_point(field_list:D31Item.afReserve)
  return afreserve_;
}
inline ::google::protobuf::RepeatedField< float >*
D31Item::mutable_afreserve() {
  // @@protoc_insertion_point(field_mutable_list:D31Item.afReserve)
  return &afreserve_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_d31data_2eproto__INCLUDED
