// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mktdata.proto

#include "mktdata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest>
      _instance;
} _LoginRequest_default_instance_;
class ReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reply>
      _instance;
} _Reply_default_instance_;
class SubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRequest>
      _instance;
} _SubscribeRequest_default_instance_;
class PbCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbCode>
      _instance;
} _PbCode_default_instance_;
class MktDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MktData>
      _instance;
} _MktData_default_instance_;
class TransactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transaction>
      _instance;
} _Transaction_default_instance_;
class OrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Order>
      _instance;
} _Order_default_instance_;
class Order_queueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Order_queue>
      _instance;
} _Order_queue_default_instance_;
class PbTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbTest>
      _instance;
} _PbTest_default_instance_;
class PbHeartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbHeartbeat>
      _instance;
} _PbHeartbeat_default_instance_;
class PbIndexShDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbIndexSh>
      _instance;
} _PbIndexSh_default_instance_;
class PbIndexSzDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbIndexSz>
      _instance;
} _PbIndexSz_default_instance_;
class PbCodesSubDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbCodesSub>
      _instance;
} _PbCodesSub_default_instance_;
class PbCodesBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbCodesBroadcast>
      _instance;
} _PbCodesBroadcast_default_instance_;
namespace protobuf_mktdata_2eproto {
void InitDefaultsLoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginRequest_default_instance_;
    new (ptr) ::LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginRequest::InitAsDefaultInstance();
}

void InitDefaultsLoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginRequestImpl);
}

void InitDefaultsReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Reply_default_instance_;
    new (ptr) ::Reply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Reply::InitAsDefaultInstance();
}

void InitDefaultsReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReplyImpl);
}

void InitDefaultsSubscribeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SubscribeRequest_default_instance_;
    new (ptr) ::SubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SubscribeRequest::InitAsDefaultInstance();
}

void InitDefaultsSubscribeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubscribeRequestImpl);
}

void InitDefaultsPbCodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PbCode_default_instance_;
    new (ptr) ::PbCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbCode::InitAsDefaultInstance();
}

void InitDefaultsPbCode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbCodeImpl);
}

void InitDefaultsMktDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MktData_default_instance_;
    new (ptr) ::MktData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MktData::InitAsDefaultInstance();
}

void InitDefaultsMktData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMktDataImpl);
}

void InitDefaultsTransactionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Transaction_default_instance_;
    new (ptr) ::Transaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Transaction::InitAsDefaultInstance();
}

void InitDefaultsTransaction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionImpl);
}

void InitDefaultsOrderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Order_default_instance_;
    new (ptr) ::Order();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Order::InitAsDefaultInstance();
}

void InitDefaultsOrder() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderImpl);
}

void InitDefaultsOrder_queueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Order_queue_default_instance_;
    new (ptr) ::Order_queue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Order_queue::InitAsDefaultInstance();
}

void InitDefaultsOrder_queue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrder_queueImpl);
}

void InitDefaultsPbTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PbTest_default_instance_;
    new (ptr) ::PbTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbTest::InitAsDefaultInstance();
}

void InitDefaultsPbTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbTestImpl);
}

void InitDefaultsPbHeartbeatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PbHeartbeat_default_instance_;
    new (ptr) ::PbHeartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbHeartbeat::InitAsDefaultInstance();
}

void InitDefaultsPbHeartbeat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbHeartbeatImpl);
}

void InitDefaultsPbIndexShImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PbIndexSh_default_instance_;
    new (ptr) ::PbIndexSh();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbIndexSh::InitAsDefaultInstance();
}

void InitDefaultsPbIndexSh() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbIndexShImpl);
}

void InitDefaultsPbIndexSzImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PbIndexSz_default_instance_;
    new (ptr) ::PbIndexSz();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbIndexSz::InitAsDefaultInstance();
}

void InitDefaultsPbIndexSz() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbIndexSzImpl);
}

void InitDefaultsPbCodesSubImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PbCodesSub_default_instance_;
    new (ptr) ::PbCodesSub();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbCodesSub::InitAsDefaultInstance();
}

void InitDefaultsPbCodesSub() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbCodesSubImpl);
}

void InitDefaultsPbCodesBroadcastImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PbCodesBroadcast_default_instance_;
    new (ptr) ::PbCodesBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbCodesBroadcast::InitAsDefaultInstance();
}

void InitDefaultsPbCodesBroadcast() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbCodesBroadcastImpl);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginRequest, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Reply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Reply, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Reply, desc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, sub_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, replay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, codes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, timebegin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, timeend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, szwindcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, szmarket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, szcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, szenname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, szcnname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, ntype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, szwindtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, nrecord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCode, nlotsize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, szcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, ntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, npreclose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nopen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nhigh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nlow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nmatch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, naskprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, naskvol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nbidprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nbidvol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nnumtrades_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, ivolume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, iturnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, ntotalbidvol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, ntotalaskvol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nweightedavgbidprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nweightedavgaskprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, niopv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nyieldtomaturity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nhighlimited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nlowlimited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nsyl1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nsyl2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MktData, nsd2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, szcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, ntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, nindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, nprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, nvolume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, nturnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, nbsflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, chorderkind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, chfunctioncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, naskorder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transaction, nbidorder_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, szcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, ntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, norder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, nprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, nvolume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, chorderkind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, chfunctioncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, nbroker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, chstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order, chflag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order_queue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order_queue, szcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order_queue, ntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order_queue, nside_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order_queue, nprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order_queue, norders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order_queue, nabitems_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Order_queue, nabvolume_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbTest, nothing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbHeartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbHeartbeat, nothing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSh, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSh, tradetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSh, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSh, totalamount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSh, highprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSh, lowprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSh, lastprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSh, totalvolume_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, highprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, lowprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, lastprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, totalamount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, totalno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbIndexSz, totalvolume_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCodesSub, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCodesSub, add_red_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCodesSub, codes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCodesBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbCodesBroadcast, codes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LoginRequest)},
  { 7, -1, sizeof(::Reply)},
  { 14, -1, sizeof(::SubscribeRequest)},
  { 25, -1, sizeof(::PbCode)},
  { 39, -1, sizeof(::MktData)},
  { 70, -1, sizeof(::Transaction)},
  { 86, -1, sizeof(::Order)},
  { 101, -1, sizeof(::Order_queue)},
  { 113, -1, sizeof(::PbTest)},
  { 119, -1, sizeof(::PbHeartbeat)},
  { 125, -1, sizeof(::PbIndexSh)},
  { 137, -1, sizeof(::PbIndexSz)},
  { 150, -1, sizeof(::PbCodesSub)},
  { 157, -1, sizeof(::PbCodesBroadcast)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Reply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MktData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Transaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Order_queue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbHeartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbIndexSh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbIndexSz_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbCodesSub_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbCodesBroadcast_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mktdata.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmktdata.proto\".\n\014LoginRequest\022\014\n\004name\030"
      "\001 \001(\t\022\020\n\010password\030\002 \001(\t\",\n\005Reply\022\025\n\003err\030"
      "\001 \001(\0162\010.ErrCode\022\014\n\004desc\030\002 \001(\t\"\200\001\n\020Subscr"
      "ibeRequest\022\033\n\003sub\030\001 \003(\0162\016.SubscribeType\022"
      "\016\n\006replay\030\002 \001(\010\022\r\n\005codes\030\003 \003(\t\022\014\n\004date\030\004"
      " \001(\r\022\021\n\ttimebegin\030\005 \001(\r\022\017\n\007timeend\030\006 \001(\r"
      "\"\250\001\n\006PbCode\022\022\n\nszWindCode\030\001 \001(\t\022\020\n\010szMar"
      "ket\030\002 \001(\t\022\016\n\006szCode\030\003 \001(\t\022\020\n\010szENName\030\004 "
      "\001(\t\022\020\n\010szCNName\030\005 \001(\t\022\r\n\005nType\030\006 \001(\005\022\022\n\n"
      "szWindType\030\007 \001(\t\022\017\n\007nRecord\030\010 \001(\005\022\020\n\010nLo"
      "tSize\030\t \001(\005\"\360\003\n\007MktData\022\016\n\006szCode\030\001 \001(\r\022"
      "\r\n\005nTime\030\002 \001(\r\022\017\n\007nStatus\030\003 \001(\005\022\021\n\tnPreC"
      "lose\030\004 \001(\r\022\r\n\005nOpen\030\005 \001(\r\022\r\n\005nHigh\030\006 \001(\r"
      "\022\014\n\004nLow\030\007 \001(\r\022\016\n\006nMatch\030\010 \001(\r\022\021\n\tnAskPr"
      "ice\030\t \003(\r\022\017\n\007nAskVol\030\n \003(\004\022\021\n\tnBidPrice\030"
      "\013 \003(\004\022\017\n\007nBidVol\030\014 \003(\004\022\022\n\nnNumTrades\030\r \001"
      "(\r\022\017\n\007iVolume\030\016 \001(\004\022\021\n\tiTurnover\030\017 \001(\004\022\024"
      "\n\014nTotalBidVol\030\020 \001(\004\022\024\n\014nTotalAskVol\030\021 \001"
      "(\004\022\034\n\024nWeightedAvgBidPrice\030\022 \001(\r\022\034\n\024nWei"
      "ghtedAvgAskPrice\030\023 \001(\r\022\r\n\005nIOPV\030\024 \001(\005\022\030\n"
      "\020nYieldToMaturity\030\025 \001(\005\022\024\n\014nHighLimited\030"
      "\026 \001(\r\022\023\n\013nLowLimited\030\027 \001(\r\022\r\n\005nSyl1\030\030 \001("
      "\005\022\r\n\005nSyl2\030\031 \001(\005\022\014\n\004nSD2\030\032 \001(\005\"\324\001\n\013Trans"
      "action\022\016\n\006szCode\030\001 \001(\r\022\r\n\005nTime\030\002 \001(\r\022\016\n"
      "\006nIndex\030\003 \001(\r\022\016\n\006nPrice\030\004 \001(\r\022\017\n\007nVolume"
      "\030\005 \001(\r\022\021\n\tnTurnover\030\006 \001(\004\022\017\n\007nBSFlag\030\007 \001"
      "(\r\022\023\n\013chOrderKind\030\010 \001(\r\022\026\n\016chFunctionCod"
      "e\030\t \001(\r\022\021\n\tnAskOrder\030\n \001(\005\022\021\n\tnBidOrder\030"
      "\013 \001(\005\"\267\001\n\005Order\022\016\n\006szCode\030\001 \001(\r\022\r\n\005nTime"
      "\030\002 \001(\r\022\016\n\006nOrder\030\003 \001(\005\022\016\n\006nPrice\030\004 \001(\r\022\017"
      "\n\007nVolume\030\005 \001(\r\022\023\n\013chOrderKind\030\006 \001(\r\022\026\n\016"
      "chFunctionCode\030\007 \001(\r\022\017\n\007nBroker\030\010 \001(\005\022\020\n"
      "\010chStatus\030\t \001(\005\022\016\n\006chFlag\030\n \001(\005\"\201\001\n\013Orde"
      "r_queue\022\016\n\006szCode\030\001 \001(\r\022\r\n\005nTime\030\002 \001(\r\022\r"
      "\n\005nSide\030\003 \001(\010\022\016\n\006nPrice\030\004 \001(\r\022\017\n\007nOrders"
      "\030\005 \001(\r\022\020\n\010nABItems\030\006 \001(\r\022\021\n\tnABVolume\030\007 "
      "\003(\005\"\031\n\006PbTest\022\017\n\007nothing\030\001 \001(\010\"\036\n\013PbHear"
      "tbeat\022\017\n\007nothing\030\001 \001(\010\"\220\001\n\tPbIndexSh\022\021\n\t"
      "TradeTime\030\001 \001(\r\022\016\n\006Symbol\030\002 \001(\r\022\023\n\013Total"
      "Amount\030\003 \001(\001\022\021\n\tHighPrice\030\004 \001(\001\022\020\n\010LowPr"
      "ice\030\005 \001(\001\022\021\n\tLastPrice\030\006 \001(\001\022\023\n\013TotalVol"
      "ume\030\007 \001(\004\"\234\001\n\tPbIndexSz\022\014\n\004Time\030\001 \001(\004\022\016\n"
      "\006Symbol\030\002 \001(\r\022\021\n\tHighPrice\030\003 \001(\001\022\020\n\010LowP"
      "rice\030\004 \001(\001\022\021\n\tLastPrice\030\005 \001(\001\022\023\n\013TotalAm"
      "ount\030\006 \001(\001\022\017\n\007TotalNo\030\007 \001(\004\022\023\n\013TotalVolu"
      "me\030\010 \001(\001\",\n\nPbCodesSub\022\017\n\007add_red\030\001 \001(\010\022"
      "\r\n\005codes\030\002 \003(\r\"!\n\020PbCodesBroadcast\022\r\n\005co"
      "des\030\001 \003(\r*!\n\007ErrCode\022\013\n\007SUCCESS\020\000\022\t\n\005OTH"
      "ER\020\001*\276\001\n\rSubscribeType\022\021\n\rproto_DEFAULT\020"
      "\000\022\021\n\rproto_sub_LV1\020\013\022\021\n\rproto_sub_LV2\020\014\022"
      "\022\n\016proto_sub_DEAL\020\r\022\030\n\024proto_sub_ORDERQU"
      "EUE\020\016\022\026\n\022proto_sub_SZ_ORDER\020\017\022\026\n\022proto_s"
      "ub_INDEX_SH\020\020\022\026\n\022proto_sub_INDEX_SZ\020\021*\212\002"
      "\n\007BizCode\022\023\n\017BizCode_DEFAULT\020\000\022\r\n\tLOGIN_"
      "REQ\020\001\022\r\n\tLOGIN_REP\020\002\022\016\n\nSUBSCRIBLE\020\003\022\r\n\t"
      "CODES_SUB\020\004\022\023\n\017CODES_BROADCAST\020\005\022\020\n\014MKT_"
      "DATA_LV1\020\013\022\020\n\014MKT_DATA_LV2\020\014\022\021\n\rMKT_DATA"
      "_DEAL\020\r\022\027\n\023MKT_DATA_ORDERQUEUE\020\016\022\014\n\010SZ_O"
      "RDER\020\017\022\014\n\010INDEX_SH\020\020\022\014\n\010INDEX_SZ\020\021\022\017\n\nHE"
      "ART_BEAT\020\376\001\022\r\n\010FOR_TEST\020\377\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2394);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mktdata.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mktdata_2eproto
const ::google::protobuf::EnumDescriptor* ErrCode_descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_enum_descriptors[0];
}
bool ErrCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SubscribeType_descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_enum_descriptors[1];
}
bool SubscribeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BizCode_descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_enum_descriptors[2];
}
bool BizCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 254:
    case 255:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kNameFieldNumber;
const int LoginRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsLoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:LoginRequest)
}

void LoginRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsLoginRequest();
  return *internal_default_instance();
}

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reply::kErrFieldNumber;
const int Reply::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reply::Reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Reply)
}
Reply::Reply(const Reply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:Reply)
}

void Reply::SharedCtor() {
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
  _cached_size_ = 0;
}

Reply::~Reply() {
  // @@protoc_insertion_point(destructor:Reply)
  SharedDtor();
}

void Reply::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reply::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reply& Reply::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsReply();
  return *internal_default_instance();
}

Reply* Reply::New(::google::protobuf::Arena* arena) const {
  Reply* n = new Reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reply::Clear() {
// @@protoc_insertion_point(message_clear_start:Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
  _internal_metadata_.Clear();
}

bool Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ErrCode err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_err(static_cast< ::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Reply.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Reply)
  return false;
#undef DO_
}

void Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ErrCode err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  // string desc = 2;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Reply.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->desc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Reply)
}

::google::protobuf::uint8* Reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ErrCode err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  // string desc = 2;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Reply.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->desc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Reply)
  return target;
}

size_t Reply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Reply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string desc = 2;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // .ErrCode err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Reply)
  GOOGLE_DCHECK_NE(&from, this);
  const Reply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Reply)
    MergeFrom(*source);
  }
}

void Reply::MergeFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Reply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void Reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply::CopyFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply::IsInitialized() const {
  return true;
}

void Reply::Swap(Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reply::InternalSwap(Reply* other) {
  using std::swap;
  desc_.Swap(&other->desc_);
  swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRequest::kSubFieldNumber;
const int SubscribeRequest::kReplayFieldNumber;
const int SubscribeRequest::kCodesFieldNumber;
const int SubscribeRequest::kDateFieldNumber;
const int SubscribeRequest::kTimebeginFieldNumber;
const int SubscribeRequest::kTimeendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsSubscribeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sub_(from.sub_),
      codes_(from.codes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&replay_, &from.replay_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeend_) -
    reinterpret_cast<char*>(&replay_)) + sizeof(timeend_));
  // @@protoc_insertion_point(copy_constructor:SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  ::memset(&replay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeend_) -
      reinterpret_cast<char*>(&replay_)) + sizeof(timeend_));
  _cached_size_ = 0;
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsSubscribeRequest();
  return *internal_default_instance();
}

SubscribeRequest* SubscribeRequest::New(::google::protobuf::Arena* arena) const {
  SubscribeRequest* n = new SubscribeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sub_.Clear();
  codes_.Clear();
  ::memset(&replay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeend_) -
      reinterpret_cast<char*>(&replay_)) + sizeof(timeend_));
  _internal_metadata_.Clear();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SubscribeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SubscribeType sub = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_sub(static_cast< ::SubscribeType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_sub(static_cast< ::SubscribeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool replay = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &replay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string codes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_codes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->codes(this->codes_size() - 1).data(),
            static_cast<int>(this->codes(this->codes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SubscribeRequest.codes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timebegin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timebegin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timeend = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SubscribeType sub = 1;
  if (this->sub_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_sub_cached_byte_size_));
  }
  for (int i = 0, n = this->sub_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->sub(i), output);
  }

  // bool replay = 2;
  if (this->replay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->replay(), output);
  }

  // repeated string codes = 3;
  for (int i = 0, n = this->codes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codes(i).data(), static_cast<int>(this->codes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SubscribeRequest.codes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->codes(i), output);
  }

  // uint32 date = 4;
  if (this->date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->date(), output);
  }

  // uint32 timebegin = 5;
  if (this->timebegin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->timebegin(), output);
  }

  // uint32 timeend = 6;
  if (this->timeend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->timeend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SubscribeType sub = 1;
  if (this->sub_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _sub_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->sub_, target);
  }

  // bool replay = 2;
  if (this->replay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->replay(), target);
  }

  // repeated string codes = 3;
  for (int i = 0, n = this->codes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codes(i).data(), static_cast<int>(this->codes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SubscribeRequest.codes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->codes(i), target);
  }

  // uint32 date = 4;
  if (this->date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->date(), target);
  }

  // uint32 timebegin = 5;
  if (this->timebegin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->timebegin(), target);
  }

  // uint32 timeend = 6;
  if (this->timeend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->timeend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SubscribeRequest)
  return target;
}

size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SubscribeType sub = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->sub_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->sub(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sub_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string codes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->codes_size());
  for (int i = 0, n = this->codes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->codes(i));
  }

  // bool replay = 2;
  if (this->replay() != 0) {
    total_size += 1 + 1;
  }

  // uint32 date = 4;
  if (this->date() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->date());
  }

  // uint32 timebegin = 5;
  if (this->timebegin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timebegin());
  }

  // uint32 timeend = 6;
  if (this->timeend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SubscribeRequest)
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sub_.MergeFrom(from.sub_);
  codes_.MergeFrom(from.codes_);
  if (from.replay() != 0) {
    set_replay(from.replay());
  }
  if (from.date() != 0) {
    set_date(from.date());
  }
  if (from.timebegin() != 0) {
    set_timebegin(from.timebegin());
  }
  if (from.timeend() != 0) {
    set_timeend(from.timeend());
  }
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  using std::swap;
  sub_.InternalSwap(&other->sub_);
  codes_.InternalSwap(&other->codes_);
  swap(replay_, other->replay_);
  swap(date_, other->date_);
  swap(timebegin_, other->timebegin_);
  swap(timeend_, other->timeend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PbCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbCode::kSzWindCodeFieldNumber;
const int PbCode::kSzMarketFieldNumber;
const int PbCode::kSzCodeFieldNumber;
const int PbCode::kSzENNameFieldNumber;
const int PbCode::kSzCNNameFieldNumber;
const int PbCode::kNTypeFieldNumber;
const int PbCode::kSzWindTypeFieldNumber;
const int PbCode::kNRecordFieldNumber;
const int PbCode::kNLotSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbCode::PbCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsPbCode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbCode)
}
PbCode::PbCode(const PbCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szwindcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szwindcode().size() > 0) {
    szwindcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szwindcode_);
  }
  szmarket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szmarket().size() > 0) {
    szmarket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmarket_);
  }
  szcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szcode().size() > 0) {
    szcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcode_);
  }
  szenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szenname().size() > 0) {
    szenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szenname_);
  }
  szcnname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szcnname().size() > 0) {
    szcnname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcnname_);
  }
  szwindtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szwindtype().size() > 0) {
    szwindtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szwindtype_);
  }
  ::memcpy(&ntype_, &from.ntype_,
    static_cast<size_t>(reinterpret_cast<char*>(&nlotsize_) -
    reinterpret_cast<char*>(&ntype_)) + sizeof(nlotsize_));
  // @@protoc_insertion_point(copy_constructor:PbCode)
}

void PbCode::SharedCtor() {
  szwindcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmarket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcnname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szwindtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ntype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nlotsize_) -
      reinterpret_cast<char*>(&ntype_)) + sizeof(nlotsize_));
  _cached_size_ = 0;
}

PbCode::~PbCode() {
  // @@protoc_insertion_point(destructor:PbCode)
  SharedDtor();
}

void PbCode::SharedDtor() {
  szwindcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmarket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szenname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcnname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szwindtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PbCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbCode::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbCode& PbCode::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsPbCode();
  return *internal_default_instance();
}

PbCode* PbCode::New(::google::protobuf::Arena* arena) const {
  PbCode* n = new PbCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbCode::Clear() {
// @@protoc_insertion_point(message_clear_start:PbCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  szwindcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmarket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcnname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szwindtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ntype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nlotsize_) -
      reinterpret_cast<char*>(&ntype_)) + sizeof(nlotsize_));
  _internal_metadata_.Clear();
}

bool PbCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string szWindCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szwindcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szwindcode().data(), static_cast<int>(this->szwindcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbCode.szWindCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szMarket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szmarket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szmarket().data(), static_cast<int>(this->szmarket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbCode.szMarket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szcode().data(), static_cast<int>(this->szcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbCode.szCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szENName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szenname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szenname().data(), static_cast<int>(this->szenname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbCode.szENName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szCNName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szcnname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szcnname().data(), static_cast<int>(this->szcnname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbCode.szCNName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szWindType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szwindtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szwindtype().data(), static_cast<int>(this->szwindtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbCode.szWindType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nRecord = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nrecord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nLotSize = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlotsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbCode)
  return false;
#undef DO_
}

void PbCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szWindCode = 1;
  if (this->szwindcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szwindcode().data(), static_cast<int>(this->szwindcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szWindCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->szwindcode(), output);
  }

  // string szMarket = 2;
  if (this->szmarket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmarket().data(), static_cast<int>(this->szmarket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szMarket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szmarket(), output);
  }

  // string szCode = 3;
  if (this->szcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcode().data(), static_cast<int>(this->szcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->szcode(), output);
  }

  // string szENName = 4;
  if (this->szenname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szenname().data(), static_cast<int>(this->szenname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szENName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->szenname(), output);
  }

  // string szCNName = 5;
  if (this->szcnname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcnname().data(), static_cast<int>(this->szcnname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szCNName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->szcnname(), output);
  }

  // int32 nType = 6;
  if (this->ntype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ntype(), output);
  }

  // string szWindType = 7;
  if (this->szwindtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szwindtype().data(), static_cast<int>(this->szwindtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szWindType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->szwindtype(), output);
  }

  // int32 nRecord = 8;
  if (this->nrecord() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->nrecord(), output);
  }

  // int32 nLotSize = 9;
  if (this->nlotsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->nlotsize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbCode)
}

::google::protobuf::uint8* PbCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szWindCode = 1;
  if (this->szwindcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szwindcode().data(), static_cast<int>(this->szwindcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szWindCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->szwindcode(), target);
  }

  // string szMarket = 2;
  if (this->szmarket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmarket().data(), static_cast<int>(this->szmarket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szMarket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szmarket(), target);
  }

  // string szCode = 3;
  if (this->szcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcode().data(), static_cast<int>(this->szcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->szcode(), target);
  }

  // string szENName = 4;
  if (this->szenname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szenname().data(), static_cast<int>(this->szenname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szENName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->szenname(), target);
  }

  // string szCNName = 5;
  if (this->szcnname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcnname().data(), static_cast<int>(this->szcnname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szCNName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->szcnname(), target);
  }

  // int32 nType = 6;
  if (this->ntype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ntype(), target);
  }

  // string szWindType = 7;
  if (this->szwindtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szwindtype().data(), static_cast<int>(this->szwindtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbCode.szWindType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->szwindtype(), target);
  }

  // int32 nRecord = 8;
  if (this->nrecord() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->nrecord(), target);
  }

  // int32 nLotSize = 9;
  if (this->nlotsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->nlotsize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbCode)
  return target;
}

size_t PbCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string szWindCode = 1;
  if (this->szwindcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szwindcode());
  }

  // string szMarket = 2;
  if (this->szmarket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szmarket());
  }

  // string szCode = 3;
  if (this->szcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szcode());
  }

  // string szENName = 4;
  if (this->szenname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szenname());
  }

  // string szCNName = 5;
  if (this->szcnname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szcnname());
  }

  // string szWindType = 7;
  if (this->szwindtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szwindtype());
  }

  // int32 nType = 6;
  if (this->ntype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ntype());
  }

  // int32 nRecord = 8;
  if (this->nrecord() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nrecord());
  }

  // int32 nLotSize = 9;
  if (this->nlotsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlotsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbCode)
  GOOGLE_DCHECK_NE(&from, this);
  const PbCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbCode)
    MergeFrom(*source);
  }
}

void PbCode::MergeFrom(const PbCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.szwindcode().size() > 0) {

    szwindcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szwindcode_);
  }
  if (from.szmarket().size() > 0) {

    szmarket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmarket_);
  }
  if (from.szcode().size() > 0) {

    szcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcode_);
  }
  if (from.szenname().size() > 0) {

    szenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szenname_);
  }
  if (from.szcnname().size() > 0) {

    szcnname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcnname_);
  }
  if (from.szwindtype().size() > 0) {

    szwindtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szwindtype_);
  }
  if (from.ntype() != 0) {
    set_ntype(from.ntype());
  }
  if (from.nrecord() != 0) {
    set_nrecord(from.nrecord());
  }
  if (from.nlotsize() != 0) {
    set_nlotsize(from.nlotsize());
  }
}

void PbCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbCode::CopyFrom(const PbCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbCode::IsInitialized() const {
  return true;
}

void PbCode::Swap(PbCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbCode::InternalSwap(PbCode* other) {
  using std::swap;
  szwindcode_.Swap(&other->szwindcode_);
  szmarket_.Swap(&other->szmarket_);
  szcode_.Swap(&other->szcode_);
  szenname_.Swap(&other->szenname_);
  szcnname_.Swap(&other->szcnname_);
  szwindtype_.Swap(&other->szwindtype_);
  swap(ntype_, other->ntype_);
  swap(nrecord_, other->nrecord_);
  swap(nlotsize_, other->nlotsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbCode::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MktData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MktData::kSzCodeFieldNumber;
const int MktData::kNTimeFieldNumber;
const int MktData::kNStatusFieldNumber;
const int MktData::kNPreCloseFieldNumber;
const int MktData::kNOpenFieldNumber;
const int MktData::kNHighFieldNumber;
const int MktData::kNLowFieldNumber;
const int MktData::kNMatchFieldNumber;
const int MktData::kNAskPriceFieldNumber;
const int MktData::kNAskVolFieldNumber;
const int MktData::kNBidPriceFieldNumber;
const int MktData::kNBidVolFieldNumber;
const int MktData::kNNumTradesFieldNumber;
const int MktData::kIVolumeFieldNumber;
const int MktData::kITurnoverFieldNumber;
const int MktData::kNTotalBidVolFieldNumber;
const int MktData::kNTotalAskVolFieldNumber;
const int MktData::kNWeightedAvgBidPriceFieldNumber;
const int MktData::kNWeightedAvgAskPriceFieldNumber;
const int MktData::kNIOPVFieldNumber;
const int MktData::kNYieldToMaturityFieldNumber;
const int MktData::kNHighLimitedFieldNumber;
const int MktData::kNLowLimitedFieldNumber;
const int MktData::kNSyl1FieldNumber;
const int MktData::kNSyl2FieldNumber;
const int MktData::kNSD2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MktData::MktData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsMktData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MktData)
}
MktData::MktData(const MktData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      naskprice_(from.naskprice_),
      naskvol_(from.naskvol_),
      nbidprice_(from.nbidprice_),
      nbidvol_(from.nbidvol_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&szcode_, &from.szcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nsd2_) -
    reinterpret_cast<char*>(&szcode_)) + sizeof(nsd2_));
  // @@protoc_insertion_point(copy_constructor:MktData)
}

void MktData::SharedCtor() {
  ::memset(&szcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsd2_) -
      reinterpret_cast<char*>(&szcode_)) + sizeof(nsd2_));
  _cached_size_ = 0;
}

MktData::~MktData() {
  // @@protoc_insertion_point(destructor:MktData)
  SharedDtor();
}

void MktData::SharedDtor() {
}

void MktData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MktData::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MktData& MktData::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsMktData();
  return *internal_default_instance();
}

MktData* MktData::New(::google::protobuf::Arena* arena) const {
  MktData* n = new MktData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MktData::Clear() {
// @@protoc_insertion_point(message_clear_start:MktData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  naskprice_.Clear();
  naskvol_.Clear();
  nbidprice_.Clear();
  nbidvol_.Clear();
  ::memset(&szcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsd2_) -
      reinterpret_cast<char*>(&szcode_)) + sizeof(nsd2_));
  _internal_metadata_.Clear();
}

bool MktData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MktData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 szCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &szcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPreClose = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npreclose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nOpen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nopen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nHigh = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nhigh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nLow = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nlow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nMatch = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nmatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 nAskPrice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_naskprice())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_naskprice())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 nAskVol = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_naskvol())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 82u, input, this->mutable_naskvol())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 nBidPrice = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_nbidprice())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 90u, input, this->mutable_nbidprice())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 nBidVol = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_nbidvol())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 98u, input, this->mutable_nbidvol())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nNumTrades = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nnumtrades_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 iVolume = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ivolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 iTurnover = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &iturnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nTotalBidVol = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ntotalbidvol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nTotalAskVol = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ntotalaskvol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nWeightedAvgBidPrice = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nweightedavgbidprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nWeightedAvgAskPrice = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nweightedavgaskprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nIOPV = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &niopv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nYieldToMaturity = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nyieldtomaturity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nHighLimited = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nhighlimited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nLowLimited = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nlowlimited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nSyl1 = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsyl1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nSyl2 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsyl2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nSD2 = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsd2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MktData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MktData)
  return false;
#undef DO_
}

void MktData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MktData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->szcode(), output);
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ntime(), output);
  }

  // int32 nStatus = 3;
  if (this->nstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nstatus(), output);
  }

  // uint32 nPreClose = 4;
  if (this->npreclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->npreclose(), output);
  }

  // uint32 nOpen = 5;
  if (this->nopen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->nopen(), output);
  }

  // uint32 nHigh = 6;
  if (this->nhigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->nhigh(), output);
  }

  // uint32 nLow = 7;
  if (this->nlow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nlow(), output);
  }

  // uint32 nMatch = 8;
  if (this->nmatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->nmatch(), output);
  }

  // repeated uint32 nAskPrice = 9;
  if (this->naskprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _naskprice_cached_byte_size_));
  }
  for (int i = 0, n = this->naskprice_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->naskprice(i), output);
  }

  // repeated uint64 nAskVol = 10;
  if (this->naskvol_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _naskvol_cached_byte_size_));
  }
  for (int i = 0, n = this->naskvol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->naskvol(i), output);
  }

  // repeated uint64 nBidPrice = 11;
  if (this->nbidprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nbidprice_cached_byte_size_));
  }
  for (int i = 0, n = this->nbidprice_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->nbidprice(i), output);
  }

  // repeated uint64 nBidVol = 12;
  if (this->nbidvol_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nbidvol_cached_byte_size_));
  }
  for (int i = 0, n = this->nbidvol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->nbidvol(i), output);
  }

  // uint32 nNumTrades = 13;
  if (this->nnumtrades() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->nnumtrades(), output);
  }

  // uint64 iVolume = 14;
  if (this->ivolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->ivolume(), output);
  }

  // uint64 iTurnover = 15;
  if (this->iturnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->iturnover(), output);
  }

  // uint64 nTotalBidVol = 16;
  if (this->ntotalbidvol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->ntotalbidvol(), output);
  }

  // uint64 nTotalAskVol = 17;
  if (this->ntotalaskvol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->ntotalaskvol(), output);
  }

  // uint32 nWeightedAvgBidPrice = 18;
  if (this->nweightedavgbidprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->nweightedavgbidprice(), output);
  }

  // uint32 nWeightedAvgAskPrice = 19;
  if (this->nweightedavgaskprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->nweightedavgaskprice(), output);
  }

  // int32 nIOPV = 20;
  if (this->niopv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->niopv(), output);
  }

  // int32 nYieldToMaturity = 21;
  if (this->nyieldtomaturity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->nyieldtomaturity(), output);
  }

  // uint32 nHighLimited = 22;
  if (this->nhighlimited() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->nhighlimited(), output);
  }

  // uint32 nLowLimited = 23;
  if (this->nlowlimited() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->nlowlimited(), output);
  }

  // int32 nSyl1 = 24;
  if (this->nsyl1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->nsyl1(), output);
  }

  // int32 nSyl2 = 25;
  if (this->nsyl2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->nsyl2(), output);
  }

  // int32 nSD2 = 26;
  if (this->nsd2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->nsd2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MktData)
}

::google::protobuf::uint8* MktData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MktData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->szcode(), target);
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ntime(), target);
  }

  // int32 nStatus = 3;
  if (this->nstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nstatus(), target);
  }

  // uint32 nPreClose = 4;
  if (this->npreclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->npreclose(), target);
  }

  // uint32 nOpen = 5;
  if (this->nopen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->nopen(), target);
  }

  // uint32 nHigh = 6;
  if (this->nhigh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->nhigh(), target);
  }

  // uint32 nLow = 7;
  if (this->nlow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->nlow(), target);
  }

  // uint32 nMatch = 8;
  if (this->nmatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->nmatch(), target);
  }

  // repeated uint32 nAskPrice = 9;
  if (this->naskprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _naskprice_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->naskprice_, target);
  }

  // repeated uint64 nAskVol = 10;
  if (this->naskvol_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _naskvol_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->naskvol_, target);
  }

  // repeated uint64 nBidPrice = 11;
  if (this->nbidprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nbidprice_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->nbidprice_, target);
  }

  // repeated uint64 nBidVol = 12;
  if (this->nbidvol_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nbidvol_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->nbidvol_, target);
  }

  // uint32 nNumTrades = 13;
  if (this->nnumtrades() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->nnumtrades(), target);
  }

  // uint64 iVolume = 14;
  if (this->ivolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->ivolume(), target);
  }

  // uint64 iTurnover = 15;
  if (this->iturnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->iturnover(), target);
  }

  // uint64 nTotalBidVol = 16;
  if (this->ntotalbidvol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->ntotalbidvol(), target);
  }

  // uint64 nTotalAskVol = 17;
  if (this->ntotalaskvol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->ntotalaskvol(), target);
  }

  // uint32 nWeightedAvgBidPrice = 18;
  if (this->nweightedavgbidprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->nweightedavgbidprice(), target);
  }

  // uint32 nWeightedAvgAskPrice = 19;
  if (this->nweightedavgaskprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->nweightedavgaskprice(), target);
  }

  // int32 nIOPV = 20;
  if (this->niopv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->niopv(), target);
  }

  // int32 nYieldToMaturity = 21;
  if (this->nyieldtomaturity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->nyieldtomaturity(), target);
  }

  // uint32 nHighLimited = 22;
  if (this->nhighlimited() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->nhighlimited(), target);
  }

  // uint32 nLowLimited = 23;
  if (this->nlowlimited() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->nlowlimited(), target);
  }

  // int32 nSyl1 = 24;
  if (this->nsyl1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->nsyl1(), target);
  }

  // int32 nSyl2 = 25;
  if (this->nsyl2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->nsyl2(), target);
  }

  // int32 nSD2 = 26;
  if (this->nsd2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->nsd2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MktData)
  return target;
}

size_t MktData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MktData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 nAskPrice = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->naskprice_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _naskprice_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 nAskVol = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->naskvol_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _naskvol_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 nBidPrice = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->nbidprice_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nbidprice_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 nBidVol = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->nbidvol_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nbidvol_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->szcode());
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntime());
  }

  // int32 nStatus = 3;
  if (this->nstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nstatus());
  }

  // uint32 nPreClose = 4;
  if (this->npreclose() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npreclose());
  }

  // uint32 nOpen = 5;
  if (this->nopen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nopen());
  }

  // uint32 nHigh = 6;
  if (this->nhigh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nhigh());
  }

  // uint32 nLow = 7;
  if (this->nlow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nlow());
  }

  // uint32 nMatch = 8;
  if (this->nmatch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nmatch());
  }

  // uint64 iVolume = 14;
  if (this->ivolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ivolume());
  }

  // uint64 iTurnover = 15;
  if (this->iturnover() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->iturnover());
  }

  // uint32 nNumTrades = 13;
  if (this->nnumtrades() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nnumtrades());
  }

  // uint32 nWeightedAvgBidPrice = 18;
  if (this->nweightedavgbidprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nweightedavgbidprice());
  }

  // uint64 nTotalBidVol = 16;
  if (this->ntotalbidvol() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ntotalbidvol());
  }

  // uint64 nTotalAskVol = 17;
  if (this->ntotalaskvol() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ntotalaskvol());
  }

  // uint32 nWeightedAvgAskPrice = 19;
  if (this->nweightedavgaskprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nweightedavgaskprice());
  }

  // int32 nIOPV = 20;
  if (this->niopv() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->niopv());
  }

  // int32 nYieldToMaturity = 21;
  if (this->nyieldtomaturity() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nyieldtomaturity());
  }

  // uint32 nHighLimited = 22;
  if (this->nhighlimited() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nhighlimited());
  }

  // uint32 nLowLimited = 23;
  if (this->nlowlimited() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nlowlimited());
  }

  // int32 nSyl1 = 24;
  if (this->nsyl1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nsyl1());
  }

  // int32 nSyl2 = 25;
  if (this->nsyl2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nsyl2());
  }

  // int32 nSD2 = 26;
  if (this->nsd2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nsd2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MktData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MktData)
  GOOGLE_DCHECK_NE(&from, this);
  const MktData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MktData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MktData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MktData)
    MergeFrom(*source);
  }
}

void MktData::MergeFrom(const MktData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MktData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  naskprice_.MergeFrom(from.naskprice_);
  naskvol_.MergeFrom(from.naskvol_);
  nbidprice_.MergeFrom(from.nbidprice_);
  nbidvol_.MergeFrom(from.nbidvol_);
  if (from.szcode() != 0) {
    set_szcode(from.szcode());
  }
  if (from.ntime() != 0) {
    set_ntime(from.ntime());
  }
  if (from.nstatus() != 0) {
    set_nstatus(from.nstatus());
  }
  if (from.npreclose() != 0) {
    set_npreclose(from.npreclose());
  }
  if (from.nopen() != 0) {
    set_nopen(from.nopen());
  }
  if (from.nhigh() != 0) {
    set_nhigh(from.nhigh());
  }
  if (from.nlow() != 0) {
    set_nlow(from.nlow());
  }
  if (from.nmatch() != 0) {
    set_nmatch(from.nmatch());
  }
  if (from.ivolume() != 0) {
    set_ivolume(from.ivolume());
  }
  if (from.iturnover() != 0) {
    set_iturnover(from.iturnover());
  }
  if (from.nnumtrades() != 0) {
    set_nnumtrades(from.nnumtrades());
  }
  if (from.nweightedavgbidprice() != 0) {
    set_nweightedavgbidprice(from.nweightedavgbidprice());
  }
  if (from.ntotalbidvol() != 0) {
    set_ntotalbidvol(from.ntotalbidvol());
  }
  if (from.ntotalaskvol() != 0) {
    set_ntotalaskvol(from.ntotalaskvol());
  }
  if (from.nweightedavgaskprice() != 0) {
    set_nweightedavgaskprice(from.nweightedavgaskprice());
  }
  if (from.niopv() != 0) {
    set_niopv(from.niopv());
  }
  if (from.nyieldtomaturity() != 0) {
    set_nyieldtomaturity(from.nyieldtomaturity());
  }
  if (from.nhighlimited() != 0) {
    set_nhighlimited(from.nhighlimited());
  }
  if (from.nlowlimited() != 0) {
    set_nlowlimited(from.nlowlimited());
  }
  if (from.nsyl1() != 0) {
    set_nsyl1(from.nsyl1());
  }
  if (from.nsyl2() != 0) {
    set_nsyl2(from.nsyl2());
  }
  if (from.nsd2() != 0) {
    set_nsd2(from.nsd2());
  }
}

void MktData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MktData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MktData::CopyFrom(const MktData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MktData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MktData::IsInitialized() const {
  return true;
}

void MktData::Swap(MktData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MktData::InternalSwap(MktData* other) {
  using std::swap;
  naskprice_.InternalSwap(&other->naskprice_);
  naskvol_.InternalSwap(&other->naskvol_);
  nbidprice_.InternalSwap(&other->nbidprice_);
  nbidvol_.InternalSwap(&other->nbidvol_);
  swap(szcode_, other->szcode_);
  swap(ntime_, other->ntime_);
  swap(nstatus_, other->nstatus_);
  swap(npreclose_, other->npreclose_);
  swap(nopen_, other->nopen_);
  swap(nhigh_, other->nhigh_);
  swap(nlow_, other->nlow_);
  swap(nmatch_, other->nmatch_);
  swap(ivolume_, other->ivolume_);
  swap(iturnover_, other->iturnover_);
  swap(nnumtrades_, other->nnumtrades_);
  swap(nweightedavgbidprice_, other->nweightedavgbidprice_);
  swap(ntotalbidvol_, other->ntotalbidvol_);
  swap(ntotalaskvol_, other->ntotalaskvol_);
  swap(nweightedavgaskprice_, other->nweightedavgaskprice_);
  swap(niopv_, other->niopv_);
  swap(nyieldtomaturity_, other->nyieldtomaturity_);
  swap(nhighlimited_, other->nhighlimited_);
  swap(nlowlimited_, other->nlowlimited_);
  swap(nsyl1_, other->nsyl1_);
  swap(nsyl2_, other->nsyl2_);
  swap(nsd2_, other->nsd2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MktData::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Transaction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction::kSzCodeFieldNumber;
const int Transaction::kNTimeFieldNumber;
const int Transaction::kNIndexFieldNumber;
const int Transaction::kNPriceFieldNumber;
const int Transaction::kNVolumeFieldNumber;
const int Transaction::kNTurnoverFieldNumber;
const int Transaction::kNBSFlagFieldNumber;
const int Transaction::kChOrderKindFieldNumber;
const int Transaction::kChFunctionCodeFieldNumber;
const int Transaction::kNAskOrderFieldNumber;
const int Transaction::kNBidOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction::Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsTransaction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Transaction)
}
Transaction::Transaction(const Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&szcode_, &from.szcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nbidorder_) -
    reinterpret_cast<char*>(&szcode_)) + sizeof(nbidorder_));
  // @@protoc_insertion_point(copy_constructor:Transaction)
}

void Transaction::SharedCtor() {
  ::memset(&szcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbidorder_) -
      reinterpret_cast<char*>(&szcode_)) + sizeof(nbidorder_));
  _cached_size_ = 0;
}

Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:Transaction)
  SharedDtor();
}

void Transaction::SharedDtor() {
}

void Transaction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Transaction::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction& Transaction::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsTransaction();
  return *internal_default_instance();
}

Transaction* Transaction::New(::google::protobuf::Arena* arena) const {
  Transaction* n = new Transaction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&szcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbidorder_) -
      reinterpret_cast<char*>(&szcode_)) + sizeof(nbidorder_));
  _internal_metadata_.Clear();
}

bool Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Transaction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 szCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &szcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nIndex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPrice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nVolume = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nTurnover = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nturnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nBSFlag = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbsflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chOrderKind = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chorderkind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chFunctionCode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chfunctioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nAskOrder = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &naskorder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nBidOrder = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbidorder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Transaction)
  return false;
#undef DO_
}

void Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->szcode(), output);
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ntime(), output);
  }

  // uint32 nIndex = 3;
  if (this->nindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nindex(), output);
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nprice(), output);
  }

  // uint32 nVolume = 5;
  if (this->nvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->nvolume(), output);
  }

  // uint64 nTurnover = 6;
  if (this->nturnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->nturnover(), output);
  }

  // uint32 nBSFlag = 7;
  if (this->nbsflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nbsflag(), output);
  }

  // uint32 chOrderKind = 8;
  if (this->chorderkind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->chorderkind(), output);
  }

  // uint32 chFunctionCode = 9;
  if (this->chfunctioncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->chfunctioncode(), output);
  }

  // int32 nAskOrder = 10;
  if (this->naskorder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->naskorder(), output);
  }

  // int32 nBidOrder = 11;
  if (this->nbidorder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->nbidorder(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Transaction)
}

::google::protobuf::uint8* Transaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->szcode(), target);
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ntime(), target);
  }

  // uint32 nIndex = 3;
  if (this->nindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nindex(), target);
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nprice(), target);
  }

  // uint32 nVolume = 5;
  if (this->nvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->nvolume(), target);
  }

  // uint64 nTurnover = 6;
  if (this->nturnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->nturnover(), target);
  }

  // uint32 nBSFlag = 7;
  if (this->nbsflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->nbsflag(), target);
  }

  // uint32 chOrderKind = 8;
  if (this->chorderkind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->chorderkind(), target);
  }

  // uint32 chFunctionCode = 9;
  if (this->chfunctioncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->chfunctioncode(), target);
  }

  // int32 nAskOrder = 10;
  if (this->naskorder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->naskorder(), target);
  }

  // int32 nBidOrder = 11;
  if (this->nbidorder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->nbidorder(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transaction)
  return target;
}

size_t Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->szcode());
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntime());
  }

  // uint32 nIndex = 3;
  if (this->nindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nindex());
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nprice());
  }

  // uint64 nTurnover = 6;
  if (this->nturnover() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nturnover());
  }

  // uint32 nVolume = 5;
  if (this->nvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nvolume());
  }

  // uint32 nBSFlag = 7;
  if (this->nbsflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nbsflag());
  }

  // uint32 chOrderKind = 8;
  if (this->chorderkind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chorderkind());
  }

  // uint32 chFunctionCode = 9;
  if (this->chfunctioncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chfunctioncode());
  }

  // int32 nAskOrder = 10;
  if (this->naskorder() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->naskorder());
  }

  // int32 nBidOrder = 11;
  if (this->nbidorder() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nbidorder());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Transaction)
    MergeFrom(*source);
  }
}

void Transaction::MergeFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.szcode() != 0) {
    set_szcode(from.szcode());
  }
  if (from.ntime() != 0) {
    set_ntime(from.ntime());
  }
  if (from.nindex() != 0) {
    set_nindex(from.nindex());
  }
  if (from.nprice() != 0) {
    set_nprice(from.nprice());
  }
  if (from.nturnover() != 0) {
    set_nturnover(from.nturnover());
  }
  if (from.nvolume() != 0) {
    set_nvolume(from.nvolume());
  }
  if (from.nbsflag() != 0) {
    set_nbsflag(from.nbsflag());
  }
  if (from.chorderkind() != 0) {
    set_chorderkind(from.chorderkind());
  }
  if (from.chfunctioncode() != 0) {
    set_chfunctioncode(from.chfunctioncode());
  }
  if (from.naskorder() != 0) {
    set_naskorder(from.naskorder());
  }
  if (from.nbidorder() != 0) {
    set_nbidorder(from.nbidorder());
  }
}

void Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction::IsInitialized() const {
  return true;
}

void Transaction::Swap(Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction::InternalSwap(Transaction* other) {
  using std::swap;
  swap(szcode_, other->szcode_);
  swap(ntime_, other->ntime_);
  swap(nindex_, other->nindex_);
  swap(nprice_, other->nprice_);
  swap(nturnover_, other->nturnover_);
  swap(nvolume_, other->nvolume_);
  swap(nbsflag_, other->nbsflag_);
  swap(chorderkind_, other->chorderkind_);
  swap(chfunctioncode_, other->chfunctioncode_);
  swap(naskorder_, other->naskorder_);
  swap(nbidorder_, other->nbidorder_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Order::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kSzCodeFieldNumber;
const int Order::kNTimeFieldNumber;
const int Order::kNOrderFieldNumber;
const int Order::kNPriceFieldNumber;
const int Order::kNVolumeFieldNumber;
const int Order::kChOrderKindFieldNumber;
const int Order::kChFunctionCodeFieldNumber;
const int Order::kNBrokerFieldNumber;
const int Order::kChStatusFieldNumber;
const int Order::kChFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsOrder();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Order)
}
Order::Order(const Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&szcode_, &from.szcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&chflag_) -
    reinterpret_cast<char*>(&szcode_)) + sizeof(chflag_));
  // @@protoc_insertion_point(copy_constructor:Order)
}

void Order::SharedCtor() {
  ::memset(&szcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chflag_) -
      reinterpret_cast<char*>(&szcode_)) + sizeof(chflag_));
  _cached_size_ = 0;
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:Order)
  SharedDtor();
}

void Order::SharedDtor() {
}

void Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Order& Order::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsOrder();
  return *internal_default_instance();
}

Order* Order::New(::google::protobuf::Arena* arena) const {
  Order* n = new Order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&szcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chflag_) -
      reinterpret_cast<char*>(&szcode_)) + sizeof(chflag_));
  _internal_metadata_.Clear();
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 szCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &szcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nOrder = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &norder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPrice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nVolume = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chOrderKind = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chorderkind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chFunctionCode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chfunctioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nBroker = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbroker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 chStatus = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 chFlag = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Order)
  return false;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->szcode(), output);
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ntime(), output);
  }

  // int32 nOrder = 3;
  if (this->norder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->norder(), output);
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nprice(), output);
  }

  // uint32 nVolume = 5;
  if (this->nvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->nvolume(), output);
  }

  // uint32 chOrderKind = 6;
  if (this->chorderkind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->chorderkind(), output);
  }

  // uint32 chFunctionCode = 7;
  if (this->chfunctioncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->chfunctioncode(), output);
  }

  // int32 nBroker = 8;
  if (this->nbroker() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->nbroker(), output);
  }

  // int32 chStatus = 9;
  if (this->chstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->chstatus(), output);
  }

  // int32 chFlag = 10;
  if (this->chflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->chflag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->szcode(), target);
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ntime(), target);
  }

  // int32 nOrder = 3;
  if (this->norder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->norder(), target);
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nprice(), target);
  }

  // uint32 nVolume = 5;
  if (this->nvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->nvolume(), target);
  }

  // uint32 chOrderKind = 6;
  if (this->chorderkind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->chorderkind(), target);
  }

  // uint32 chFunctionCode = 7;
  if (this->chfunctioncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->chfunctioncode(), target);
  }

  // int32 nBroker = 8;
  if (this->nbroker() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->nbroker(), target);
  }

  // int32 chStatus = 9;
  if (this->chstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->chstatus(), target);
  }

  // int32 chFlag = 10;
  if (this->chflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->chflag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Order)
  return target;
}

size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Order)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->szcode());
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntime());
  }

  // int32 nOrder = 3;
  if (this->norder() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->norder());
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nprice());
  }

  // uint32 nVolume = 5;
  if (this->nvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nvolume());
  }

  // uint32 chOrderKind = 6;
  if (this->chorderkind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chorderkind());
  }

  // uint32 chFunctionCode = 7;
  if (this->chfunctioncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chfunctioncode());
  }

  // int32 nBroker = 8;
  if (this->nbroker() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nbroker());
  }

  // int32 chStatus = 9;
  if (this->chstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chstatus());
  }

  // int32 chFlag = 10;
  if (this->chflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chflag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.szcode() != 0) {
    set_szcode(from.szcode());
  }
  if (from.ntime() != 0) {
    set_ntime(from.ntime());
  }
  if (from.norder() != 0) {
    set_norder(from.norder());
  }
  if (from.nprice() != 0) {
    set_nprice(from.nprice());
  }
  if (from.nvolume() != 0) {
    set_nvolume(from.nvolume());
  }
  if (from.chorderkind() != 0) {
    set_chorderkind(from.chorderkind());
  }
  if (from.chfunctioncode() != 0) {
    set_chfunctioncode(from.chfunctioncode());
  }
  if (from.nbroker() != 0) {
    set_nbroker(from.nbroker());
  }
  if (from.chstatus() != 0) {
    set_chstatus(from.chstatus());
  }
  if (from.chflag() != 0) {
    set_chflag(from.chflag());
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  using std::swap;
  swap(szcode_, other->szcode_);
  swap(ntime_, other->ntime_);
  swap(norder_, other->norder_);
  swap(nprice_, other->nprice_);
  swap(nvolume_, other->nvolume_);
  swap(chorderkind_, other->chorderkind_);
  swap(chfunctioncode_, other->chfunctioncode_);
  swap(nbroker_, other->nbroker_);
  swap(chstatus_, other->chstatus_);
  swap(chflag_, other->chflag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Order_queue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order_queue::kSzCodeFieldNumber;
const int Order_queue::kNTimeFieldNumber;
const int Order_queue::kNSideFieldNumber;
const int Order_queue::kNPriceFieldNumber;
const int Order_queue::kNOrdersFieldNumber;
const int Order_queue::kNABItemsFieldNumber;
const int Order_queue::kNABVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order_queue::Order_queue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsOrder_queue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Order_queue)
}
Order_queue::Order_queue(const Order_queue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nabvolume_(from.nabvolume_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&szcode_, &from.szcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nabitems_) -
    reinterpret_cast<char*>(&szcode_)) + sizeof(nabitems_));
  // @@protoc_insertion_point(copy_constructor:Order_queue)
}

void Order_queue::SharedCtor() {
  ::memset(&szcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nabitems_) -
      reinterpret_cast<char*>(&szcode_)) + sizeof(nabitems_));
  _cached_size_ = 0;
}

Order_queue::~Order_queue() {
  // @@protoc_insertion_point(destructor:Order_queue)
  SharedDtor();
}

void Order_queue::SharedDtor() {
}

void Order_queue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Order_queue::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Order_queue& Order_queue::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsOrder_queue();
  return *internal_default_instance();
}

Order_queue* Order_queue::New(::google::protobuf::Arena* arena) const {
  Order_queue* n = new Order_queue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Order_queue::Clear() {
// @@protoc_insertion_point(message_clear_start:Order_queue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nabvolume_.Clear();
  ::memset(&szcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nabitems_) -
      reinterpret_cast<char*>(&szcode_)) + sizeof(nabitems_));
  _internal_metadata_.Clear();
}

bool Order_queue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Order_queue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 szCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &szcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool nSide = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nside_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPrice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nOrders = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &norders_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nABItems = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nabitems_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 nABVolume = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nabvolume())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_nabvolume())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Order_queue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Order_queue)
  return false;
#undef DO_
}

void Order_queue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Order_queue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->szcode(), output);
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ntime(), output);
  }

  // bool nSide = 3;
  if (this->nside() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->nside(), output);
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nprice(), output);
  }

  // uint32 nOrders = 5;
  if (this->norders() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->norders(), output);
  }

  // uint32 nABItems = 6;
  if (this->nabitems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->nabitems(), output);
  }

  // repeated int32 nABVolume = 7;
  if (this->nabvolume_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nabvolume_cached_byte_size_));
  }
  for (int i = 0, n = this->nabvolume_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->nabvolume(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Order_queue)
}

::google::protobuf::uint8* Order_queue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Order_queue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->szcode(), target);
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ntime(), target);
  }

  // bool nSide = 3;
  if (this->nside() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->nside(), target);
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nprice(), target);
  }

  // uint32 nOrders = 5;
  if (this->norders() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->norders(), target);
  }

  // uint32 nABItems = 6;
  if (this->nabitems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->nabitems(), target);
  }

  // repeated int32 nABVolume = 7;
  if (this->nabvolume_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nabvolume_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->nabvolume_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Order_queue)
  return target;
}

size_t Order_queue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Order_queue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 nABVolume = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->nabvolume_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nabvolume_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 szCode = 1;
  if (this->szcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->szcode());
  }

  // uint32 nTime = 2;
  if (this->ntime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntime());
  }

  // bool nSide = 3;
  if (this->nside() != 0) {
    total_size += 1 + 1;
  }

  // uint32 nPrice = 4;
  if (this->nprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nprice());
  }

  // uint32 nOrders = 5;
  if (this->norders() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->norders());
  }

  // uint32 nABItems = 6;
  if (this->nabitems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nabitems());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Order_queue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Order_queue)
  GOOGLE_DCHECK_NE(&from, this);
  const Order_queue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Order_queue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Order_queue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Order_queue)
    MergeFrom(*source);
  }
}

void Order_queue::MergeFrom(const Order_queue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Order_queue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nabvolume_.MergeFrom(from.nabvolume_);
  if (from.szcode() != 0) {
    set_szcode(from.szcode());
  }
  if (from.ntime() != 0) {
    set_ntime(from.ntime());
  }
  if (from.nside() != 0) {
    set_nside(from.nside());
  }
  if (from.nprice() != 0) {
    set_nprice(from.nprice());
  }
  if (from.norders() != 0) {
    set_norders(from.norders());
  }
  if (from.nabitems() != 0) {
    set_nabitems(from.nabitems());
  }
}

void Order_queue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Order_queue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order_queue::CopyFrom(const Order_queue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Order_queue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order_queue::IsInitialized() const {
  return true;
}

void Order_queue::Swap(Order_queue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order_queue::InternalSwap(Order_queue* other) {
  using std::swap;
  nabvolume_.InternalSwap(&other->nabvolume_);
  swap(szcode_, other->szcode_);
  swap(ntime_, other->ntime_);
  swap(nside_, other->nside_);
  swap(nprice_, other->nprice_);
  swap(norders_, other->norders_);
  swap(nabitems_, other->nabitems_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Order_queue::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PbTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbTest::kNothingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbTest::PbTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsPbTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbTest)
}
PbTest::PbTest(const PbTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nothing_ = from.nothing_;
  // @@protoc_insertion_point(copy_constructor:PbTest)
}

void PbTest::SharedCtor() {
  nothing_ = false;
  _cached_size_ = 0;
}

PbTest::~PbTest() {
  // @@protoc_insertion_point(destructor:PbTest)
  SharedDtor();
}

void PbTest::SharedDtor() {
}

void PbTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbTest::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbTest& PbTest::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsPbTest();
  return *internal_default_instance();
}

PbTest* PbTest::New(::google::protobuf::Arena* arena) const {
  PbTest* n = new PbTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbTest::Clear() {
// @@protoc_insertion_point(message_clear_start:PbTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nothing_ = false;
  _internal_metadata_.Clear();
}

bool PbTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool nothing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nothing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbTest)
  return false;
#undef DO_
}

void PbTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nothing = 1;
  if (this->nothing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->nothing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbTest)
}

::google::protobuf::uint8* PbTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nothing = 1;
  if (this->nothing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->nothing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbTest)
  return target;
}

size_t PbTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool nothing = 1;
  if (this->nothing() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbTest)
  GOOGLE_DCHECK_NE(&from, this);
  const PbTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbTest)
    MergeFrom(*source);
  }
}

void PbTest::MergeFrom(const PbTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nothing() != 0) {
    set_nothing(from.nothing());
  }
}

void PbTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbTest::CopyFrom(const PbTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbTest::IsInitialized() const {
  return true;
}

void PbTest::Swap(PbTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbTest::InternalSwap(PbTest* other) {
  using std::swap;
  swap(nothing_, other->nothing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbTest::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PbHeartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbHeartbeat::kNothingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbHeartbeat::PbHeartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsPbHeartbeat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbHeartbeat)
}
PbHeartbeat::PbHeartbeat(const PbHeartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nothing_ = from.nothing_;
  // @@protoc_insertion_point(copy_constructor:PbHeartbeat)
}

void PbHeartbeat::SharedCtor() {
  nothing_ = false;
  _cached_size_ = 0;
}

PbHeartbeat::~PbHeartbeat() {
  // @@protoc_insertion_point(destructor:PbHeartbeat)
  SharedDtor();
}

void PbHeartbeat::SharedDtor() {
}

void PbHeartbeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbHeartbeat::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbHeartbeat& PbHeartbeat::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsPbHeartbeat();
  return *internal_default_instance();
}

PbHeartbeat* PbHeartbeat::New(::google::protobuf::Arena* arena) const {
  PbHeartbeat* n = new PbHeartbeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbHeartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:PbHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nothing_ = false;
  _internal_metadata_.Clear();
}

bool PbHeartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbHeartbeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool nothing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nothing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbHeartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbHeartbeat)
  return false;
#undef DO_
}

void PbHeartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nothing = 1;
  if (this->nothing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->nothing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbHeartbeat)
}

::google::protobuf::uint8* PbHeartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nothing = 1;
  if (this->nothing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->nothing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbHeartbeat)
  return target;
}

size_t PbHeartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbHeartbeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool nothing = 1;
  if (this->nothing() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbHeartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbHeartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const PbHeartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbHeartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbHeartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbHeartbeat)
    MergeFrom(*source);
  }
}

void PbHeartbeat::MergeFrom(const PbHeartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbHeartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nothing() != 0) {
    set_nothing(from.nothing());
  }
}

void PbHeartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbHeartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbHeartbeat::CopyFrom(const PbHeartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbHeartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbHeartbeat::IsInitialized() const {
  return true;
}

void PbHeartbeat::Swap(PbHeartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbHeartbeat::InternalSwap(PbHeartbeat* other) {
  using std::swap;
  swap(nothing_, other->nothing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbHeartbeat::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PbIndexSh::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbIndexSh::kTradeTimeFieldNumber;
const int PbIndexSh::kSymbolFieldNumber;
const int PbIndexSh::kTotalAmountFieldNumber;
const int PbIndexSh::kHighPriceFieldNumber;
const int PbIndexSh::kLowPriceFieldNumber;
const int PbIndexSh::kLastPriceFieldNumber;
const int PbIndexSh::kTotalVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbIndexSh::PbIndexSh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsPbIndexSh();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbIndexSh)
}
PbIndexSh::PbIndexSh(const PbIndexSh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tradetime_, &from.tradetime_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalvolume_) -
    reinterpret_cast<char*>(&tradetime_)) + sizeof(totalvolume_));
  // @@protoc_insertion_point(copy_constructor:PbIndexSh)
}

void PbIndexSh::SharedCtor() {
  ::memset(&tradetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalvolume_) -
      reinterpret_cast<char*>(&tradetime_)) + sizeof(totalvolume_));
  _cached_size_ = 0;
}

PbIndexSh::~PbIndexSh() {
  // @@protoc_insertion_point(destructor:PbIndexSh)
  SharedDtor();
}

void PbIndexSh::SharedDtor() {
}

void PbIndexSh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbIndexSh::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbIndexSh& PbIndexSh::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsPbIndexSh();
  return *internal_default_instance();
}

PbIndexSh* PbIndexSh::New(::google::protobuf::Arena* arena) const {
  PbIndexSh* n = new PbIndexSh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbIndexSh::Clear() {
// @@protoc_insertion_point(message_clear_start:PbIndexSh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tradetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalvolume_) -
      reinterpret_cast<char*>(&tradetime_)) + sizeof(totalvolume_));
  _internal_metadata_.Clear();
}

bool PbIndexSh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbIndexSh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 TradeTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tradetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &symbol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double TotalAmount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &totalamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double HighPrice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LowPrice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LastPrice = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 TotalVolume = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbIndexSh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbIndexSh)
  return false;
#undef DO_
}

void PbIndexSh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbIndexSh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TradeTime = 1;
  if (this->tradetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tradetime(), output);
  }

  // uint32 Symbol = 2;
  if (this->symbol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->symbol(), output);
  }

  // double TotalAmount = 3;
  if (this->totalamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->totalamount(), output);
  }

  // double HighPrice = 4;
  if (this->highprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->highprice(), output);
  }

  // double LowPrice = 5;
  if (this->lowprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lowprice(), output);
  }

  // double LastPrice = 6;
  if (this->lastprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->lastprice(), output);
  }

  // uint64 TotalVolume = 7;
  if (this->totalvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->totalvolume(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbIndexSh)
}

::google::protobuf::uint8* PbIndexSh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbIndexSh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TradeTime = 1;
  if (this->tradetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tradetime(), target);
  }

  // uint32 Symbol = 2;
  if (this->symbol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->symbol(), target);
  }

  // double TotalAmount = 3;
  if (this->totalamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->totalamount(), target);
  }

  // double HighPrice = 4;
  if (this->highprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->highprice(), target);
  }

  // double LowPrice = 5;
  if (this->lowprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lowprice(), target);
  }

  // double LastPrice = 6;
  if (this->lastprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->lastprice(), target);
  }

  // uint64 TotalVolume = 7;
  if (this->totalvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->totalvolume(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbIndexSh)
  return target;
}

size_t PbIndexSh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbIndexSh)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 TradeTime = 1;
  if (this->tradetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tradetime());
  }

  // uint32 Symbol = 2;
  if (this->symbol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->symbol());
  }

  // double TotalAmount = 3;
  if (this->totalamount() != 0) {
    total_size += 1 + 8;
  }

  // double HighPrice = 4;
  if (this->highprice() != 0) {
    total_size += 1 + 8;
  }

  // double LowPrice = 5;
  if (this->lowprice() != 0) {
    total_size += 1 + 8;
  }

  // double LastPrice = 6;
  if (this->lastprice() != 0) {
    total_size += 1 + 8;
  }

  // uint64 TotalVolume = 7;
  if (this->totalvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalvolume());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbIndexSh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbIndexSh)
  GOOGLE_DCHECK_NE(&from, this);
  const PbIndexSh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbIndexSh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbIndexSh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbIndexSh)
    MergeFrom(*source);
  }
}

void PbIndexSh::MergeFrom(const PbIndexSh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbIndexSh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tradetime() != 0) {
    set_tradetime(from.tradetime());
  }
  if (from.symbol() != 0) {
    set_symbol(from.symbol());
  }
  if (from.totalamount() != 0) {
    set_totalamount(from.totalamount());
  }
  if (from.highprice() != 0) {
    set_highprice(from.highprice());
  }
  if (from.lowprice() != 0) {
    set_lowprice(from.lowprice());
  }
  if (from.lastprice() != 0) {
    set_lastprice(from.lastprice());
  }
  if (from.totalvolume() != 0) {
    set_totalvolume(from.totalvolume());
  }
}

void PbIndexSh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbIndexSh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbIndexSh::CopyFrom(const PbIndexSh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbIndexSh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbIndexSh::IsInitialized() const {
  return true;
}

void PbIndexSh::Swap(PbIndexSh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbIndexSh::InternalSwap(PbIndexSh* other) {
  using std::swap;
  swap(tradetime_, other->tradetime_);
  swap(symbol_, other->symbol_);
  swap(totalamount_, other->totalamount_);
  swap(highprice_, other->highprice_);
  swap(lowprice_, other->lowprice_);
  swap(lastprice_, other->lastprice_);
  swap(totalvolume_, other->totalvolume_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbIndexSh::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PbIndexSz::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbIndexSz::kTimeFieldNumber;
const int PbIndexSz::kSymbolFieldNumber;
const int PbIndexSz::kHighPriceFieldNumber;
const int PbIndexSz::kLowPriceFieldNumber;
const int PbIndexSz::kLastPriceFieldNumber;
const int PbIndexSz::kTotalAmountFieldNumber;
const int PbIndexSz::kTotalNoFieldNumber;
const int PbIndexSz::kTotalVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbIndexSz::PbIndexSz()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsPbIndexSz();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbIndexSz)
}
PbIndexSz::PbIndexSz(const PbIndexSz& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&symbol_) -
    reinterpret_cast<char*>(&time_)) + sizeof(symbol_));
  // @@protoc_insertion_point(copy_constructor:PbIndexSz)
}

void PbIndexSz::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&symbol_) -
      reinterpret_cast<char*>(&time_)) + sizeof(symbol_));
  _cached_size_ = 0;
}

PbIndexSz::~PbIndexSz() {
  // @@protoc_insertion_point(destructor:PbIndexSz)
  SharedDtor();
}

void PbIndexSz::SharedDtor() {
}

void PbIndexSz::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbIndexSz::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbIndexSz& PbIndexSz::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsPbIndexSz();
  return *internal_default_instance();
}

PbIndexSz* PbIndexSz::New(::google::protobuf::Arena* arena) const {
  PbIndexSz* n = new PbIndexSz;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbIndexSz::Clear() {
// @@protoc_insertion_point(message_clear_start:PbIndexSz)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&symbol_) -
      reinterpret_cast<char*>(&time_)) + sizeof(symbol_));
  _internal_metadata_.Clear();
}

bool PbIndexSz::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbIndexSz)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &symbol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double HighPrice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LowPrice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LastPrice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double TotalAmount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &totalamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 TotalNo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double TotalVolume = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &totalvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbIndexSz)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbIndexSz)
  return false;
#undef DO_
}

void PbIndexSz::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbIndexSz)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time(), output);
  }

  // uint32 Symbol = 2;
  if (this->symbol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->symbol(), output);
  }

  // double HighPrice = 3;
  if (this->highprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->highprice(), output);
  }

  // double LowPrice = 4;
  if (this->lowprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lowprice(), output);
  }

  // double LastPrice = 5;
  if (this->lastprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lastprice(), output);
  }

  // double TotalAmount = 6;
  if (this->totalamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->totalamount(), output);
  }

  // uint64 TotalNo = 7;
  if (this->totalno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->totalno(), output);
  }

  // double TotalVolume = 8;
  if (this->totalvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->totalvolume(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbIndexSz)
}

::google::protobuf::uint8* PbIndexSz::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbIndexSz)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->time(), target);
  }

  // uint32 Symbol = 2;
  if (this->symbol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->symbol(), target);
  }

  // double HighPrice = 3;
  if (this->highprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->highprice(), target);
  }

  // double LowPrice = 4;
  if (this->lowprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lowprice(), target);
  }

  // double LastPrice = 5;
  if (this->lastprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lastprice(), target);
  }

  // double TotalAmount = 6;
  if (this->totalamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->totalamount(), target);
  }

  // uint64 TotalNo = 7;
  if (this->totalno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->totalno(), target);
  }

  // double TotalVolume = 8;
  if (this->totalvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->totalvolume(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbIndexSz)
  return target;
}

size_t PbIndexSz::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbIndexSz)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  // double HighPrice = 3;
  if (this->highprice() != 0) {
    total_size += 1 + 8;
  }

  // double LowPrice = 4;
  if (this->lowprice() != 0) {
    total_size += 1 + 8;
  }

  // double LastPrice = 5;
  if (this->lastprice() != 0) {
    total_size += 1 + 8;
  }

  // double TotalAmount = 6;
  if (this->totalamount() != 0) {
    total_size += 1 + 8;
  }

  // uint64 TotalNo = 7;
  if (this->totalno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalno());
  }

  // double TotalVolume = 8;
  if (this->totalvolume() != 0) {
    total_size += 1 + 8;
  }

  // uint32 Symbol = 2;
  if (this->symbol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->symbol());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbIndexSz::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbIndexSz)
  GOOGLE_DCHECK_NE(&from, this);
  const PbIndexSz* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbIndexSz>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbIndexSz)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbIndexSz)
    MergeFrom(*source);
  }
}

void PbIndexSz::MergeFrom(const PbIndexSz& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbIndexSz)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.highprice() != 0) {
    set_highprice(from.highprice());
  }
  if (from.lowprice() != 0) {
    set_lowprice(from.lowprice());
  }
  if (from.lastprice() != 0) {
    set_lastprice(from.lastprice());
  }
  if (from.totalamount() != 0) {
    set_totalamount(from.totalamount());
  }
  if (from.totalno() != 0) {
    set_totalno(from.totalno());
  }
  if (from.totalvolume() != 0) {
    set_totalvolume(from.totalvolume());
  }
  if (from.symbol() != 0) {
    set_symbol(from.symbol());
  }
}

void PbIndexSz::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbIndexSz)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbIndexSz::CopyFrom(const PbIndexSz& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbIndexSz)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbIndexSz::IsInitialized() const {
  return true;
}

void PbIndexSz::Swap(PbIndexSz* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbIndexSz::InternalSwap(PbIndexSz* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(highprice_, other->highprice_);
  swap(lowprice_, other->lowprice_);
  swap(lastprice_, other->lastprice_);
  swap(totalamount_, other->totalamount_);
  swap(totalno_, other->totalno_);
  swap(totalvolume_, other->totalvolume_);
  swap(symbol_, other->symbol_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbIndexSz::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PbCodesSub::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbCodesSub::kAddRedFieldNumber;
const int PbCodesSub::kCodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbCodesSub::PbCodesSub()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsPbCodesSub();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbCodesSub)
}
PbCodesSub::PbCodesSub(const PbCodesSub& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      codes_(from.codes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  add_red_ = from.add_red_;
  // @@protoc_insertion_point(copy_constructor:PbCodesSub)
}

void PbCodesSub::SharedCtor() {
  add_red_ = false;
  _cached_size_ = 0;
}

PbCodesSub::~PbCodesSub() {
  // @@protoc_insertion_point(destructor:PbCodesSub)
  SharedDtor();
}

void PbCodesSub::SharedDtor() {
}

void PbCodesSub::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbCodesSub::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbCodesSub& PbCodesSub::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsPbCodesSub();
  return *internal_default_instance();
}

PbCodesSub* PbCodesSub::New(::google::protobuf::Arena* arena) const {
  PbCodesSub* n = new PbCodesSub;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbCodesSub::Clear() {
// @@protoc_insertion_point(message_clear_start:PbCodesSub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  codes_.Clear();
  add_red_ = false;
  _internal_metadata_.Clear();
}

bool PbCodesSub::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbCodesSub)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool add_red = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &add_red_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 codes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_codes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_codes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbCodesSub)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbCodesSub)
  return false;
#undef DO_
}

void PbCodesSub::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbCodesSub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool add_red = 1;
  if (this->add_red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->add_red(), output);
  }

  // repeated uint32 codes = 2;
  if (this->codes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _codes_cached_byte_size_));
  }
  for (int i = 0, n = this->codes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->codes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbCodesSub)
}

::google::protobuf::uint8* PbCodesSub::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbCodesSub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool add_red = 1;
  if (this->add_red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->add_red(), target);
  }

  // repeated uint32 codes = 2;
  if (this->codes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _codes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->codes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbCodesSub)
  return target;
}

size_t PbCodesSub::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbCodesSub)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 codes = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->codes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _codes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool add_red = 1;
  if (this->add_red() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbCodesSub::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbCodesSub)
  GOOGLE_DCHECK_NE(&from, this);
  const PbCodesSub* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbCodesSub>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbCodesSub)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbCodesSub)
    MergeFrom(*source);
  }
}

void PbCodesSub::MergeFrom(const PbCodesSub& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbCodesSub)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  codes_.MergeFrom(from.codes_);
  if (from.add_red() != 0) {
    set_add_red(from.add_red());
  }
}

void PbCodesSub::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbCodesSub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbCodesSub::CopyFrom(const PbCodesSub& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbCodesSub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbCodesSub::IsInitialized() const {
  return true;
}

void PbCodesSub::Swap(PbCodesSub* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbCodesSub::InternalSwap(PbCodesSub* other) {
  using std::swap;
  codes_.InternalSwap(&other->codes_);
  swap(add_red_, other->add_red_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbCodesSub::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PbCodesBroadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbCodesBroadcast::kCodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbCodesBroadcast::PbCodesBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mktdata_2eproto::InitDefaultsPbCodesBroadcast();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbCodesBroadcast)
}
PbCodesBroadcast::PbCodesBroadcast(const PbCodesBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      codes_(from.codes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PbCodesBroadcast)
}

void PbCodesBroadcast::SharedCtor() {
  _cached_size_ = 0;
}

PbCodesBroadcast::~PbCodesBroadcast() {
  // @@protoc_insertion_point(destructor:PbCodesBroadcast)
  SharedDtor();
}

void PbCodesBroadcast::SharedDtor() {
}

void PbCodesBroadcast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbCodesBroadcast::descriptor() {
  ::protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbCodesBroadcast& PbCodesBroadcast::default_instance() {
  ::protobuf_mktdata_2eproto::InitDefaultsPbCodesBroadcast();
  return *internal_default_instance();
}

PbCodesBroadcast* PbCodesBroadcast::New(::google::protobuf::Arena* arena) const {
  PbCodesBroadcast* n = new PbCodesBroadcast;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbCodesBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:PbCodesBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  codes_.Clear();
  _internal_metadata_.Clear();
}

bool PbCodesBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbCodesBroadcast)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 codes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_codes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_codes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbCodesBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbCodesBroadcast)
  return false;
#undef DO_
}

void PbCodesBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbCodesBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 codes = 1;
  if (this->codes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _codes_cached_byte_size_));
  }
  for (int i = 0, n = this->codes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->codes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbCodesBroadcast)
}

::google::protobuf::uint8* PbCodesBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbCodesBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 codes = 1;
  if (this->codes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _codes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->codes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbCodesBroadcast)
  return target;
}

size_t PbCodesBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbCodesBroadcast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 codes = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->codes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _codes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbCodesBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbCodesBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const PbCodesBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbCodesBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbCodesBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbCodesBroadcast)
    MergeFrom(*source);
  }
}

void PbCodesBroadcast::MergeFrom(const PbCodesBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbCodesBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  codes_.MergeFrom(from.codes_);
}

void PbCodesBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbCodesBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbCodesBroadcast::CopyFrom(const PbCodesBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbCodesBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbCodesBroadcast::IsInitialized() const {
  return true;
}

void PbCodesBroadcast::Swap(PbCodesBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbCodesBroadcast::InternalSwap(PbCodesBroadcast* other) {
  using std::swap;
  codes_.InternalSwap(&other->codes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbCodesBroadcast::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
