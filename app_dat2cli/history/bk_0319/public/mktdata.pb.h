// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mktdata.proto

#ifndef PROTOBUF_mktdata_2eproto__INCLUDED
#define PROTOBUF_mktdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_mktdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLoginRequestImpl();
void InitDefaultsLoginRequest();
void InitDefaultsReplyImpl();
void InitDefaultsReply();
void InitDefaultsSubscribeRequestImpl();
void InitDefaultsSubscribeRequest();
void InitDefaultsPbCodeImpl();
void InitDefaultsPbCode();
void InitDefaultsMktDataImpl();
void InitDefaultsMktData();
void InitDefaultsTransactionImpl();
void InitDefaultsTransaction();
void InitDefaultsOrderImpl();
void InitDefaultsOrder();
void InitDefaultsOrder_queueImpl();
void InitDefaultsOrder_queue();
void InitDefaultsPbTestImpl();
void InitDefaultsPbTest();
void InitDefaultsPbHeartbeatImpl();
void InitDefaultsPbHeartbeat();
void InitDefaultsPbIndexShImpl();
void InitDefaultsPbIndexSh();
void InitDefaultsPbIndexSzImpl();
void InitDefaultsPbIndexSz();
void InitDefaultsPbCodesSubImpl();
void InitDefaultsPbCodesSub();
void InitDefaultsPbCodesBroadcastImpl();
void InitDefaultsPbCodesBroadcast();
inline void InitDefaults() {
  InitDefaultsLoginRequest();
  InitDefaultsReply();
  InitDefaultsSubscribeRequest();
  InitDefaultsPbCode();
  InitDefaultsMktData();
  InitDefaultsTransaction();
  InitDefaultsOrder();
  InitDefaultsOrder_queue();
  InitDefaultsPbTest();
  InitDefaultsPbHeartbeat();
  InitDefaultsPbIndexSh();
  InitDefaultsPbIndexSz();
  InitDefaultsPbCodesSub();
  InitDefaultsPbCodesBroadcast();
}
}  // namespace protobuf_mktdata_2eproto
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class MktData;
class MktDataDefaultTypeInternal;
extern MktDataDefaultTypeInternal _MktData_default_instance_;
class Order;
class OrderDefaultTypeInternal;
extern OrderDefaultTypeInternal _Order_default_instance_;
class Order_queue;
class Order_queueDefaultTypeInternal;
extern Order_queueDefaultTypeInternal _Order_queue_default_instance_;
class PbCode;
class PbCodeDefaultTypeInternal;
extern PbCodeDefaultTypeInternal _PbCode_default_instance_;
class PbCodesBroadcast;
class PbCodesBroadcastDefaultTypeInternal;
extern PbCodesBroadcastDefaultTypeInternal _PbCodesBroadcast_default_instance_;
class PbCodesSub;
class PbCodesSubDefaultTypeInternal;
extern PbCodesSubDefaultTypeInternal _PbCodesSub_default_instance_;
class PbHeartbeat;
class PbHeartbeatDefaultTypeInternal;
extern PbHeartbeatDefaultTypeInternal _PbHeartbeat_default_instance_;
class PbIndexSh;
class PbIndexShDefaultTypeInternal;
extern PbIndexShDefaultTypeInternal _PbIndexSh_default_instance_;
class PbIndexSz;
class PbIndexSzDefaultTypeInternal;
extern PbIndexSzDefaultTypeInternal _PbIndexSz_default_instance_;
class PbTest;
class PbTestDefaultTypeInternal;
extern PbTestDefaultTypeInternal _PbTest_default_instance_;
class Reply;
class ReplyDefaultTypeInternal;
extern ReplyDefaultTypeInternal _Reply_default_instance_;
class SubscribeRequest;
class SubscribeRequestDefaultTypeInternal;
extern SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
class Transaction;
class TransactionDefaultTypeInternal;
extern TransactionDefaultTypeInternal _Transaction_default_instance_;

enum ErrCode {
  SUCCESS = 0,
  OTHER = 1,
  ErrCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrCode_IsValid(int value);
const ErrCode ErrCode_MIN = SUCCESS;
const ErrCode ErrCode_MAX = OTHER;
const int ErrCode_ARRAYSIZE = ErrCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrCode_descriptor();
inline const ::std::string& ErrCode_Name(ErrCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrCode_descriptor(), value);
}
inline bool ErrCode_Parse(
    const ::std::string& name, ErrCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrCode>(
    ErrCode_descriptor(), name, value);
}
enum SubscribeType {
  proto_DEFAULT = 0,
  proto_sub_LV1 = 11,
  proto_sub_LV2 = 12,
  proto_sub_DEAL = 13,
  proto_sub_ORDERQUEUE = 14,
  proto_sub_SZ_ORDER = 15,
  proto_sub_INDEX_SH = 16,
  proto_sub_INDEX_SZ = 17,
  SubscribeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubscribeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubscribeType_IsValid(int value);
const SubscribeType SubscribeType_MIN = proto_DEFAULT;
const SubscribeType SubscribeType_MAX = proto_sub_INDEX_SZ;
const int SubscribeType_ARRAYSIZE = SubscribeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubscribeType_descriptor();
inline const ::std::string& SubscribeType_Name(SubscribeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubscribeType_descriptor(), value);
}
inline bool SubscribeType_Parse(
    const ::std::string& name, SubscribeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubscribeType>(
    SubscribeType_descriptor(), name, value);
}
enum BizCode {
  BizCode_DEFAULT = 0,
  LOGIN_REQ = 1,
  LOGIN_REP = 2,
  SUBSCRIBLE = 3,
  CODES_SUB = 4,
  CODES_BROADCAST = 5,
  MKT_DATA_LV1 = 11,
  MKT_DATA_LV2 = 12,
  MKT_DATA_DEAL = 13,
  MKT_DATA_ORDERQUEUE = 14,
  SZ_ORDER = 15,
  INDEX_SH = 16,
  INDEX_SZ = 17,
  HEART_BEAT = 254,
  FOR_TEST = 255,
  BizCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BizCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BizCode_IsValid(int value);
const BizCode BizCode_MIN = BizCode_DEFAULT;
const BizCode BizCode_MAX = FOR_TEST;
const int BizCode_ARRAYSIZE = BizCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* BizCode_descriptor();
inline const ::std::string& BizCode_Name(BizCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    BizCode_descriptor(), value);
}
inline bool BizCode_Parse(
    const ::std::string& name, BizCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BizCode>(
    BizCode_descriptor(), name, value);
}
// ===================================================================

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LoginRequest* other);
  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsLoginRequestImpl();
};
// -------------------------------------------------------------------

class Reply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Reply) */ {
 public:
  Reply();
  virtual ~Reply();

  Reply(const Reply& from);

  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Reply(Reply&& from) noexcept
    : Reply() {
    *this = ::std::move(from);
  }

  inline Reply& operator=(Reply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Reply* internal_default_instance() {
    return reinterpret_cast<const Reply*>(
               &_Reply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Reply* other);
  friend void swap(Reply& a, Reply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Reply* New() const PROTOBUF_FINAL { return New(NULL); }

  Reply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reply& from);
  void MergeFrom(const Reply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string desc = 2;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // .ErrCode err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::ErrCode err() const;
  void set_err(::ErrCode value);

  // @@protoc_insertion_point(class_scope:Reply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  int err_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsReplyImpl();
};
// -------------------------------------------------------------------

class SubscribeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SubscribeRequest) */ {
 public:
  SubscribeRequest();
  virtual ~SubscribeRequest();

  SubscribeRequest(const SubscribeRequest& from);

  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscribeRequest(SubscribeRequest&& from) noexcept
    : SubscribeRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeRequest& operator=(SubscribeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeRequest*>(
               &_SubscribeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SubscribeRequest* other);
  friend void swap(SubscribeRequest& a, SubscribeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscribeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SubscribeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubscribeRequest& from);
  void MergeFrom(const SubscribeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubscribeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SubscribeType sub = 1;
  int sub_size() const;
  void clear_sub();
  static const int kSubFieldNumber = 1;
  ::SubscribeType sub(int index) const;
  void set_sub(int index, ::SubscribeType value);
  void add_sub(::SubscribeType value);
  const ::google::protobuf::RepeatedField<int>& sub() const;
  ::google::protobuf::RepeatedField<int>* mutable_sub();

  // repeated string codes = 3;
  int codes_size() const;
  void clear_codes();
  static const int kCodesFieldNumber = 3;
  const ::std::string& codes(int index) const;
  ::std::string* mutable_codes(int index);
  void set_codes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_codes(int index, ::std::string&& value);
  #endif
  void set_codes(int index, const char* value);
  void set_codes(int index, const char* value, size_t size);
  ::std::string* add_codes();
  void add_codes(const ::std::string& value);
  #if LANG_CXX11
  void add_codes(::std::string&& value);
  #endif
  void add_codes(const char* value);
  void add_codes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& codes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_codes();

  // bool replay = 2;
  void clear_replay();
  static const int kReplayFieldNumber = 2;
  bool replay() const;
  void set_replay(bool value);

  // uint32 date = 4;
  void clear_date();
  static const int kDateFieldNumber = 4;
  ::google::protobuf::uint32 date() const;
  void set_date(::google::protobuf::uint32 value);

  // uint32 timebegin = 5;
  void clear_timebegin();
  static const int kTimebeginFieldNumber = 5;
  ::google::protobuf::uint32 timebegin() const;
  void set_timebegin(::google::protobuf::uint32 value);

  // uint32 timeend = 6;
  void clear_timeend();
  static const int kTimeendFieldNumber = 6;
  ::google::protobuf::uint32 timeend() const;
  void set_timeend(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SubscribeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> sub_;
  mutable int _sub_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> codes_;
  bool replay_;
  ::google::protobuf::uint32 date_;
  ::google::protobuf::uint32 timebegin_;
  ::google::protobuf::uint32 timeend_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsSubscribeRequestImpl();
};
// -------------------------------------------------------------------

class PbCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbCode) */ {
 public:
  PbCode();
  virtual ~PbCode();

  PbCode(const PbCode& from);

  inline PbCode& operator=(const PbCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbCode(PbCode&& from) noexcept
    : PbCode() {
    *this = ::std::move(from);
  }

  inline PbCode& operator=(PbCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbCode* internal_default_instance() {
    return reinterpret_cast<const PbCode*>(
               &_PbCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PbCode* other);
  friend void swap(PbCode& a, PbCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbCode* New() const PROTOBUF_FINAL { return New(NULL); }

  PbCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbCode& from);
  void MergeFrom(const PbCode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string szWindCode = 1;
  void clear_szwindcode();
  static const int kSzWindCodeFieldNumber = 1;
  const ::std::string& szwindcode() const;
  void set_szwindcode(const ::std::string& value);
  #if LANG_CXX11
  void set_szwindcode(::std::string&& value);
  #endif
  void set_szwindcode(const char* value);
  void set_szwindcode(const char* value, size_t size);
  ::std::string* mutable_szwindcode();
  ::std::string* release_szwindcode();
  void set_allocated_szwindcode(::std::string* szwindcode);

  // string szMarket = 2;
  void clear_szmarket();
  static const int kSzMarketFieldNumber = 2;
  const ::std::string& szmarket() const;
  void set_szmarket(const ::std::string& value);
  #if LANG_CXX11
  void set_szmarket(::std::string&& value);
  #endif
  void set_szmarket(const char* value);
  void set_szmarket(const char* value, size_t size);
  ::std::string* mutable_szmarket();
  ::std::string* release_szmarket();
  void set_allocated_szmarket(::std::string* szmarket);

  // string szCode = 3;
  void clear_szcode();
  static const int kSzCodeFieldNumber = 3;
  const ::std::string& szcode() const;
  void set_szcode(const ::std::string& value);
  #if LANG_CXX11
  void set_szcode(::std::string&& value);
  #endif
  void set_szcode(const char* value);
  void set_szcode(const char* value, size_t size);
  ::std::string* mutable_szcode();
  ::std::string* release_szcode();
  void set_allocated_szcode(::std::string* szcode);

  // string szENName = 4;
  void clear_szenname();
  static const int kSzENNameFieldNumber = 4;
  const ::std::string& szenname() const;
  void set_szenname(const ::std::string& value);
  #if LANG_CXX11
  void set_szenname(::std::string&& value);
  #endif
  void set_szenname(const char* value);
  void set_szenname(const char* value, size_t size);
  ::std::string* mutable_szenname();
  ::std::string* release_szenname();
  void set_allocated_szenname(::std::string* szenname);

  // string szCNName = 5;
  void clear_szcnname();
  static const int kSzCNNameFieldNumber = 5;
  const ::std::string& szcnname() const;
  void set_szcnname(const ::std::string& value);
  #if LANG_CXX11
  void set_szcnname(::std::string&& value);
  #endif
  void set_szcnname(const char* value);
  void set_szcnname(const char* value, size_t size);
  ::std::string* mutable_szcnname();
  ::std::string* release_szcnname();
  void set_allocated_szcnname(::std::string* szcnname);

  // string szWindType = 7;
  void clear_szwindtype();
  static const int kSzWindTypeFieldNumber = 7;
  const ::std::string& szwindtype() const;
  void set_szwindtype(const ::std::string& value);
  #if LANG_CXX11
  void set_szwindtype(::std::string&& value);
  #endif
  void set_szwindtype(const char* value);
  void set_szwindtype(const char* value, size_t size);
  ::std::string* mutable_szwindtype();
  ::std::string* release_szwindtype();
  void set_allocated_szwindtype(::std::string* szwindtype);

  // int32 nType = 6;
  void clear_ntype();
  static const int kNTypeFieldNumber = 6;
  ::google::protobuf::int32 ntype() const;
  void set_ntype(::google::protobuf::int32 value);

  // int32 nRecord = 8;
  void clear_nrecord();
  static const int kNRecordFieldNumber = 8;
  ::google::protobuf::int32 nrecord() const;
  void set_nrecord(::google::protobuf::int32 value);

  // int32 nLotSize = 9;
  void clear_nlotsize();
  static const int kNLotSizeFieldNumber = 9;
  ::google::protobuf::int32 nlotsize() const;
  void set_nlotsize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PbCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr szwindcode_;
  ::google::protobuf::internal::ArenaStringPtr szmarket_;
  ::google::protobuf::internal::ArenaStringPtr szcode_;
  ::google::protobuf::internal::ArenaStringPtr szenname_;
  ::google::protobuf::internal::ArenaStringPtr szcnname_;
  ::google::protobuf::internal::ArenaStringPtr szwindtype_;
  ::google::protobuf::int32 ntype_;
  ::google::protobuf::int32 nrecord_;
  ::google::protobuf::int32 nlotsize_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsPbCodeImpl();
};
// -------------------------------------------------------------------

class MktData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MktData) */ {
 public:
  MktData();
  virtual ~MktData();

  MktData(const MktData& from);

  inline MktData& operator=(const MktData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MktData(MktData&& from) noexcept
    : MktData() {
    *this = ::std::move(from);
  }

  inline MktData& operator=(MktData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MktData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MktData* internal_default_instance() {
    return reinterpret_cast<const MktData*>(
               &_MktData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MktData* other);
  friend void swap(MktData& a, MktData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MktData* New() const PROTOBUF_FINAL { return New(NULL); }

  MktData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MktData& from);
  void MergeFrom(const MktData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MktData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 nAskPrice = 9;
  int naskprice_size() const;
  void clear_naskprice();
  static const int kNAskPriceFieldNumber = 9;
  ::google::protobuf::uint32 naskprice(int index) const;
  void set_naskprice(int index, ::google::protobuf::uint32 value);
  void add_naskprice(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      naskprice() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_naskprice();

  // repeated uint64 nAskVol = 10;
  int naskvol_size() const;
  void clear_naskvol();
  static const int kNAskVolFieldNumber = 10;
  ::google::protobuf::uint64 naskvol(int index) const;
  void set_naskvol(int index, ::google::protobuf::uint64 value);
  void add_naskvol(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      naskvol() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_naskvol();

  // repeated uint64 nBidPrice = 11;
  int nbidprice_size() const;
  void clear_nbidprice();
  static const int kNBidPriceFieldNumber = 11;
  ::google::protobuf::uint64 nbidprice(int index) const;
  void set_nbidprice(int index, ::google::protobuf::uint64 value);
  void add_nbidprice(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      nbidprice() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_nbidprice();

  // repeated uint64 nBidVol = 12;
  int nbidvol_size() const;
  void clear_nbidvol();
  static const int kNBidVolFieldNumber = 12;
  ::google::protobuf::uint64 nbidvol(int index) const;
  void set_nbidvol(int index, ::google::protobuf::uint64 value);
  void add_nbidvol(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      nbidvol() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_nbidvol();

  // uint32 szCode = 1;
  void clear_szcode();
  static const int kSzCodeFieldNumber = 1;
  ::google::protobuf::uint32 szcode() const;
  void set_szcode(::google::protobuf::uint32 value);

  // uint32 nTime = 2;
  void clear_ntime();
  static const int kNTimeFieldNumber = 2;
  ::google::protobuf::uint32 ntime() const;
  void set_ntime(::google::protobuf::uint32 value);

  // int32 nStatus = 3;
  void clear_nstatus();
  static const int kNStatusFieldNumber = 3;
  ::google::protobuf::int32 nstatus() const;
  void set_nstatus(::google::protobuf::int32 value);

  // uint32 nPreClose = 4;
  void clear_npreclose();
  static const int kNPreCloseFieldNumber = 4;
  ::google::protobuf::uint32 npreclose() const;
  void set_npreclose(::google::protobuf::uint32 value);

  // uint32 nOpen = 5;
  void clear_nopen();
  static const int kNOpenFieldNumber = 5;
  ::google::protobuf::uint32 nopen() const;
  void set_nopen(::google::protobuf::uint32 value);

  // uint32 nHigh = 6;
  void clear_nhigh();
  static const int kNHighFieldNumber = 6;
  ::google::protobuf::uint32 nhigh() const;
  void set_nhigh(::google::protobuf::uint32 value);

  // uint32 nLow = 7;
  void clear_nlow();
  static const int kNLowFieldNumber = 7;
  ::google::protobuf::uint32 nlow() const;
  void set_nlow(::google::protobuf::uint32 value);

  // uint32 nMatch = 8;
  void clear_nmatch();
  static const int kNMatchFieldNumber = 8;
  ::google::protobuf::uint32 nmatch() const;
  void set_nmatch(::google::protobuf::uint32 value);

  // uint64 iVolume = 14;
  void clear_ivolume();
  static const int kIVolumeFieldNumber = 14;
  ::google::protobuf::uint64 ivolume() const;
  void set_ivolume(::google::protobuf::uint64 value);

  // uint64 iTurnover = 15;
  void clear_iturnover();
  static const int kITurnoverFieldNumber = 15;
  ::google::protobuf::uint64 iturnover() const;
  void set_iturnover(::google::protobuf::uint64 value);

  // uint32 nNumTrades = 13;
  void clear_nnumtrades();
  static const int kNNumTradesFieldNumber = 13;
  ::google::protobuf::uint32 nnumtrades() const;
  void set_nnumtrades(::google::protobuf::uint32 value);

  // uint32 nWeightedAvgBidPrice = 18;
  void clear_nweightedavgbidprice();
  static const int kNWeightedAvgBidPriceFieldNumber = 18;
  ::google::protobuf::uint32 nweightedavgbidprice() const;
  void set_nweightedavgbidprice(::google::protobuf::uint32 value);

  // uint64 nTotalBidVol = 16;
  void clear_ntotalbidvol();
  static const int kNTotalBidVolFieldNumber = 16;
  ::google::protobuf::uint64 ntotalbidvol() const;
  void set_ntotalbidvol(::google::protobuf::uint64 value);

  // uint64 nTotalAskVol = 17;
  void clear_ntotalaskvol();
  static const int kNTotalAskVolFieldNumber = 17;
  ::google::protobuf::uint64 ntotalaskvol() const;
  void set_ntotalaskvol(::google::protobuf::uint64 value);

  // uint32 nWeightedAvgAskPrice = 19;
  void clear_nweightedavgaskprice();
  static const int kNWeightedAvgAskPriceFieldNumber = 19;
  ::google::protobuf::uint32 nweightedavgaskprice() const;
  void set_nweightedavgaskprice(::google::protobuf::uint32 value);

  // int32 nIOPV = 20;
  void clear_niopv();
  static const int kNIOPVFieldNumber = 20;
  ::google::protobuf::int32 niopv() const;
  void set_niopv(::google::protobuf::int32 value);

  // int32 nYieldToMaturity = 21;
  void clear_nyieldtomaturity();
  static const int kNYieldToMaturityFieldNumber = 21;
  ::google::protobuf::int32 nyieldtomaturity() const;
  void set_nyieldtomaturity(::google::protobuf::int32 value);

  // uint32 nHighLimited = 22;
  void clear_nhighlimited();
  static const int kNHighLimitedFieldNumber = 22;
  ::google::protobuf::uint32 nhighlimited() const;
  void set_nhighlimited(::google::protobuf::uint32 value);

  // uint32 nLowLimited = 23;
  void clear_nlowlimited();
  static const int kNLowLimitedFieldNumber = 23;
  ::google::protobuf::uint32 nlowlimited() const;
  void set_nlowlimited(::google::protobuf::uint32 value);

  // int32 nSyl1 = 24;
  void clear_nsyl1();
  static const int kNSyl1FieldNumber = 24;
  ::google::protobuf::int32 nsyl1() const;
  void set_nsyl1(::google::protobuf::int32 value);

  // int32 nSyl2 = 25;
  void clear_nsyl2();
  static const int kNSyl2FieldNumber = 25;
  ::google::protobuf::int32 nsyl2() const;
  void set_nsyl2(::google::protobuf::int32 value);

  // int32 nSD2 = 26;
  void clear_nsd2();
  static const int kNSD2FieldNumber = 26;
  ::google::protobuf::int32 nsd2() const;
  void set_nsd2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MktData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > naskprice_;
  mutable int _naskprice_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > naskvol_;
  mutable int _naskvol_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > nbidprice_;
  mutable int _nbidprice_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > nbidvol_;
  mutable int _nbidvol_cached_byte_size_;
  ::google::protobuf::uint32 szcode_;
  ::google::protobuf::uint32 ntime_;
  ::google::protobuf::int32 nstatus_;
  ::google::protobuf::uint32 npreclose_;
  ::google::protobuf::uint32 nopen_;
  ::google::protobuf::uint32 nhigh_;
  ::google::protobuf::uint32 nlow_;
  ::google::protobuf::uint32 nmatch_;
  ::google::protobuf::uint64 ivolume_;
  ::google::protobuf::uint64 iturnover_;
  ::google::protobuf::uint32 nnumtrades_;
  ::google::protobuf::uint32 nweightedavgbidprice_;
  ::google::protobuf::uint64 ntotalbidvol_;
  ::google::protobuf::uint64 ntotalaskvol_;
  ::google::protobuf::uint32 nweightedavgaskprice_;
  ::google::protobuf::int32 niopv_;
  ::google::protobuf::int32 nyieldtomaturity_;
  ::google::protobuf::uint32 nhighlimited_;
  ::google::protobuf::uint32 nlowlimited_;
  ::google::protobuf::int32 nsyl1_;
  ::google::protobuf::int32 nsyl2_;
  ::google::protobuf::int32 nsd2_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsMktDataImpl();
};
// -------------------------------------------------------------------

class Transaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Transaction) */ {
 public:
  Transaction();
  virtual ~Transaction();

  Transaction(const Transaction& from);

  inline Transaction& operator=(const Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transaction(Transaction&& from) noexcept
    : Transaction() {
    *this = ::std::move(from);
  }

  inline Transaction& operator=(Transaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Transaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transaction* internal_default_instance() {
    return reinterpret_cast<const Transaction*>(
               &_Transaction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Transaction* other);
  friend void swap(Transaction& a, Transaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transaction* New() const PROTOBUF_FINAL { return New(NULL); }

  Transaction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Transaction& from);
  void MergeFrom(const Transaction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Transaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 szCode = 1;
  void clear_szcode();
  static const int kSzCodeFieldNumber = 1;
  ::google::protobuf::uint32 szcode() const;
  void set_szcode(::google::protobuf::uint32 value);

  // uint32 nTime = 2;
  void clear_ntime();
  static const int kNTimeFieldNumber = 2;
  ::google::protobuf::uint32 ntime() const;
  void set_ntime(::google::protobuf::uint32 value);

  // uint32 nIndex = 3;
  void clear_nindex();
  static const int kNIndexFieldNumber = 3;
  ::google::protobuf::uint32 nindex() const;
  void set_nindex(::google::protobuf::uint32 value);

  // uint32 nPrice = 4;
  void clear_nprice();
  static const int kNPriceFieldNumber = 4;
  ::google::protobuf::uint32 nprice() const;
  void set_nprice(::google::protobuf::uint32 value);

  // uint64 nTurnover = 6;
  void clear_nturnover();
  static const int kNTurnoverFieldNumber = 6;
  ::google::protobuf::uint64 nturnover() const;
  void set_nturnover(::google::protobuf::uint64 value);

  // uint32 nVolume = 5;
  void clear_nvolume();
  static const int kNVolumeFieldNumber = 5;
  ::google::protobuf::uint32 nvolume() const;
  void set_nvolume(::google::protobuf::uint32 value);

  // uint32 nBSFlag = 7;
  void clear_nbsflag();
  static const int kNBSFlagFieldNumber = 7;
  ::google::protobuf::uint32 nbsflag() const;
  void set_nbsflag(::google::protobuf::uint32 value);

  // uint32 chOrderKind = 8;
  void clear_chorderkind();
  static const int kChOrderKindFieldNumber = 8;
  ::google::protobuf::uint32 chorderkind() const;
  void set_chorderkind(::google::protobuf::uint32 value);

  // uint32 chFunctionCode = 9;
  void clear_chfunctioncode();
  static const int kChFunctionCodeFieldNumber = 9;
  ::google::protobuf::uint32 chfunctioncode() const;
  void set_chfunctioncode(::google::protobuf::uint32 value);

  // int32 nAskOrder = 10;
  void clear_naskorder();
  static const int kNAskOrderFieldNumber = 10;
  ::google::protobuf::int32 naskorder() const;
  void set_naskorder(::google::protobuf::int32 value);

  // int32 nBidOrder = 11;
  void clear_nbidorder();
  static const int kNBidOrderFieldNumber = 11;
  ::google::protobuf::int32 nbidorder() const;
  void set_nbidorder(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Transaction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 szcode_;
  ::google::protobuf::uint32 ntime_;
  ::google::protobuf::uint32 nindex_;
  ::google::protobuf::uint32 nprice_;
  ::google::protobuf::uint64 nturnover_;
  ::google::protobuf::uint32 nvolume_;
  ::google::protobuf::uint32 nbsflag_;
  ::google::protobuf::uint32 chorderkind_;
  ::google::protobuf::uint32 chfunctioncode_;
  ::google::protobuf::int32 naskorder_;
  ::google::protobuf::int32 nbidorder_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsTransactionImpl();
};
// -------------------------------------------------------------------

class Order : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Order) */ {
 public:
  Order();
  virtual ~Order();

  Order(const Order& from);

  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Order(Order&& from) noexcept
    : Order() {
    *this = ::std::move(from);
  }

  inline Order& operator=(Order&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Order& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Order* internal_default_instance() {
    return reinterpret_cast<const Order*>(
               &_Order_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Order* other);
  friend void swap(Order& a, Order& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Order* New() const PROTOBUF_FINAL { return New(NULL); }

  Order* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Order& from);
  void MergeFrom(const Order& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Order* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 szCode = 1;
  void clear_szcode();
  static const int kSzCodeFieldNumber = 1;
  ::google::protobuf::uint32 szcode() const;
  void set_szcode(::google::protobuf::uint32 value);

  // uint32 nTime = 2;
  void clear_ntime();
  static const int kNTimeFieldNumber = 2;
  ::google::protobuf::uint32 ntime() const;
  void set_ntime(::google::protobuf::uint32 value);

  // int32 nOrder = 3;
  void clear_norder();
  static const int kNOrderFieldNumber = 3;
  ::google::protobuf::int32 norder() const;
  void set_norder(::google::protobuf::int32 value);

  // uint32 nPrice = 4;
  void clear_nprice();
  static const int kNPriceFieldNumber = 4;
  ::google::protobuf::uint32 nprice() const;
  void set_nprice(::google::protobuf::uint32 value);

  // uint32 nVolume = 5;
  void clear_nvolume();
  static const int kNVolumeFieldNumber = 5;
  ::google::protobuf::uint32 nvolume() const;
  void set_nvolume(::google::protobuf::uint32 value);

  // uint32 chOrderKind = 6;
  void clear_chorderkind();
  static const int kChOrderKindFieldNumber = 6;
  ::google::protobuf::uint32 chorderkind() const;
  void set_chorderkind(::google::protobuf::uint32 value);

  // uint32 chFunctionCode = 7;
  void clear_chfunctioncode();
  static const int kChFunctionCodeFieldNumber = 7;
  ::google::protobuf::uint32 chfunctioncode() const;
  void set_chfunctioncode(::google::protobuf::uint32 value);

  // int32 nBroker = 8;
  void clear_nbroker();
  static const int kNBrokerFieldNumber = 8;
  ::google::protobuf::int32 nbroker() const;
  void set_nbroker(::google::protobuf::int32 value);

  // int32 chStatus = 9;
  void clear_chstatus();
  static const int kChStatusFieldNumber = 9;
  ::google::protobuf::int32 chstatus() const;
  void set_chstatus(::google::protobuf::int32 value);

  // int32 chFlag = 10;
  void clear_chflag();
  static const int kChFlagFieldNumber = 10;
  ::google::protobuf::int32 chflag() const;
  void set_chflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Order)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 szcode_;
  ::google::protobuf::uint32 ntime_;
  ::google::protobuf::int32 norder_;
  ::google::protobuf::uint32 nprice_;
  ::google::protobuf::uint32 nvolume_;
  ::google::protobuf::uint32 chorderkind_;
  ::google::protobuf::uint32 chfunctioncode_;
  ::google::protobuf::int32 nbroker_;
  ::google::protobuf::int32 chstatus_;
  ::google::protobuf::int32 chflag_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsOrderImpl();
};
// -------------------------------------------------------------------

class Order_queue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Order_queue) */ {
 public:
  Order_queue();
  virtual ~Order_queue();

  Order_queue(const Order_queue& from);

  inline Order_queue& operator=(const Order_queue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Order_queue(Order_queue&& from) noexcept
    : Order_queue() {
    *this = ::std::move(from);
  }

  inline Order_queue& operator=(Order_queue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Order_queue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Order_queue* internal_default_instance() {
    return reinterpret_cast<const Order_queue*>(
               &_Order_queue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Order_queue* other);
  friend void swap(Order_queue& a, Order_queue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Order_queue* New() const PROTOBUF_FINAL { return New(NULL); }

  Order_queue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Order_queue& from);
  void MergeFrom(const Order_queue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Order_queue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 nABVolume = 7;
  int nabvolume_size() const;
  void clear_nabvolume();
  static const int kNABVolumeFieldNumber = 7;
  ::google::protobuf::int32 nabvolume(int index) const;
  void set_nabvolume(int index, ::google::protobuf::int32 value);
  void add_nabvolume(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nabvolume() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nabvolume();

  // uint32 szCode = 1;
  void clear_szcode();
  static const int kSzCodeFieldNumber = 1;
  ::google::protobuf::uint32 szcode() const;
  void set_szcode(::google::protobuf::uint32 value);

  // uint32 nTime = 2;
  void clear_ntime();
  static const int kNTimeFieldNumber = 2;
  ::google::protobuf::uint32 ntime() const;
  void set_ntime(::google::protobuf::uint32 value);

  // bool nSide = 3;
  void clear_nside();
  static const int kNSideFieldNumber = 3;
  bool nside() const;
  void set_nside(bool value);

  // uint32 nPrice = 4;
  void clear_nprice();
  static const int kNPriceFieldNumber = 4;
  ::google::protobuf::uint32 nprice() const;
  void set_nprice(::google::protobuf::uint32 value);

  // uint32 nOrders = 5;
  void clear_norders();
  static const int kNOrdersFieldNumber = 5;
  ::google::protobuf::uint32 norders() const;
  void set_norders(::google::protobuf::uint32 value);

  // uint32 nABItems = 6;
  void clear_nabitems();
  static const int kNABItemsFieldNumber = 6;
  ::google::protobuf::uint32 nabitems() const;
  void set_nabitems(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Order_queue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nabvolume_;
  mutable int _nabvolume_cached_byte_size_;
  ::google::protobuf::uint32 szcode_;
  ::google::protobuf::uint32 ntime_;
  bool nside_;
  ::google::protobuf::uint32 nprice_;
  ::google::protobuf::uint32 norders_;
  ::google::protobuf::uint32 nabitems_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsOrder_queueImpl();
};
// -------------------------------------------------------------------

class PbTest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbTest) */ {
 public:
  PbTest();
  virtual ~PbTest();

  PbTest(const PbTest& from);

  inline PbTest& operator=(const PbTest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbTest(PbTest&& from) noexcept
    : PbTest() {
    *this = ::std::move(from);
  }

  inline PbTest& operator=(PbTest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbTest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbTest* internal_default_instance() {
    return reinterpret_cast<const PbTest*>(
               &_PbTest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PbTest* other);
  friend void swap(PbTest& a, PbTest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbTest* New() const PROTOBUF_FINAL { return New(NULL); }

  PbTest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbTest& from);
  void MergeFrom(const PbTest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool nothing = 1;
  void clear_nothing();
  static const int kNothingFieldNumber = 1;
  bool nothing() const;
  void set_nothing(bool value);

  // @@protoc_insertion_point(class_scope:PbTest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool nothing_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsPbTestImpl();
};
// -------------------------------------------------------------------

class PbHeartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbHeartbeat) */ {
 public:
  PbHeartbeat();
  virtual ~PbHeartbeat();

  PbHeartbeat(const PbHeartbeat& from);

  inline PbHeartbeat& operator=(const PbHeartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbHeartbeat(PbHeartbeat&& from) noexcept
    : PbHeartbeat() {
    *this = ::std::move(from);
  }

  inline PbHeartbeat& operator=(PbHeartbeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbHeartbeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbHeartbeat* internal_default_instance() {
    return reinterpret_cast<const PbHeartbeat*>(
               &_PbHeartbeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PbHeartbeat* other);
  friend void swap(PbHeartbeat& a, PbHeartbeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbHeartbeat* New() const PROTOBUF_FINAL { return New(NULL); }

  PbHeartbeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbHeartbeat& from);
  void MergeFrom(const PbHeartbeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbHeartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool nothing = 1;
  void clear_nothing();
  static const int kNothingFieldNumber = 1;
  bool nothing() const;
  void set_nothing(bool value);

  // @@protoc_insertion_point(class_scope:PbHeartbeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool nothing_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsPbHeartbeatImpl();
};
// -------------------------------------------------------------------

class PbIndexSh : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbIndexSh) */ {
 public:
  PbIndexSh();
  virtual ~PbIndexSh();

  PbIndexSh(const PbIndexSh& from);

  inline PbIndexSh& operator=(const PbIndexSh& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbIndexSh(PbIndexSh&& from) noexcept
    : PbIndexSh() {
    *this = ::std::move(from);
  }

  inline PbIndexSh& operator=(PbIndexSh&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbIndexSh& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbIndexSh* internal_default_instance() {
    return reinterpret_cast<const PbIndexSh*>(
               &_PbIndexSh_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PbIndexSh* other);
  friend void swap(PbIndexSh& a, PbIndexSh& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbIndexSh* New() const PROTOBUF_FINAL { return New(NULL); }

  PbIndexSh* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbIndexSh& from);
  void MergeFrom(const PbIndexSh& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbIndexSh* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 TradeTime = 1;
  void clear_tradetime();
  static const int kTradeTimeFieldNumber = 1;
  ::google::protobuf::uint32 tradetime() const;
  void set_tradetime(::google::protobuf::uint32 value);

  // uint32 Symbol = 2;
  void clear_symbol();
  static const int kSymbolFieldNumber = 2;
  ::google::protobuf::uint32 symbol() const;
  void set_symbol(::google::protobuf::uint32 value);

  // double TotalAmount = 3;
  void clear_totalamount();
  static const int kTotalAmountFieldNumber = 3;
  double totalamount() const;
  void set_totalamount(double value);

  // double HighPrice = 4;
  void clear_highprice();
  static const int kHighPriceFieldNumber = 4;
  double highprice() const;
  void set_highprice(double value);

  // double LowPrice = 5;
  void clear_lowprice();
  static const int kLowPriceFieldNumber = 5;
  double lowprice() const;
  void set_lowprice(double value);

  // double LastPrice = 6;
  void clear_lastprice();
  static const int kLastPriceFieldNumber = 6;
  double lastprice() const;
  void set_lastprice(double value);

  // uint64 TotalVolume = 7;
  void clear_totalvolume();
  static const int kTotalVolumeFieldNumber = 7;
  ::google::protobuf::uint64 totalvolume() const;
  void set_totalvolume(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PbIndexSh)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 tradetime_;
  ::google::protobuf::uint32 symbol_;
  double totalamount_;
  double highprice_;
  double lowprice_;
  double lastprice_;
  ::google::protobuf::uint64 totalvolume_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsPbIndexShImpl();
};
// -------------------------------------------------------------------

class PbIndexSz : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbIndexSz) */ {
 public:
  PbIndexSz();
  virtual ~PbIndexSz();

  PbIndexSz(const PbIndexSz& from);

  inline PbIndexSz& operator=(const PbIndexSz& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbIndexSz(PbIndexSz&& from) noexcept
    : PbIndexSz() {
    *this = ::std::move(from);
  }

  inline PbIndexSz& operator=(PbIndexSz&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbIndexSz& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbIndexSz* internal_default_instance() {
    return reinterpret_cast<const PbIndexSz*>(
               &_PbIndexSz_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PbIndexSz* other);
  friend void swap(PbIndexSz& a, PbIndexSz& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbIndexSz* New() const PROTOBUF_FINAL { return New(NULL); }

  PbIndexSz* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbIndexSz& from);
  void MergeFrom(const PbIndexSz& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbIndexSz* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 Time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // double HighPrice = 3;
  void clear_highprice();
  static const int kHighPriceFieldNumber = 3;
  double highprice() const;
  void set_highprice(double value);

  // double LowPrice = 4;
  void clear_lowprice();
  static const int kLowPriceFieldNumber = 4;
  double lowprice() const;
  void set_lowprice(double value);

  // double LastPrice = 5;
  void clear_lastprice();
  static const int kLastPriceFieldNumber = 5;
  double lastprice() const;
  void set_lastprice(double value);

  // double TotalAmount = 6;
  void clear_totalamount();
  static const int kTotalAmountFieldNumber = 6;
  double totalamount() const;
  void set_totalamount(double value);

  // uint64 TotalNo = 7;
  void clear_totalno();
  static const int kTotalNoFieldNumber = 7;
  ::google::protobuf::uint64 totalno() const;
  void set_totalno(::google::protobuf::uint64 value);

  // double TotalVolume = 8;
  void clear_totalvolume();
  static const int kTotalVolumeFieldNumber = 8;
  double totalvolume() const;
  void set_totalvolume(double value);

  // uint32 Symbol = 2;
  void clear_symbol();
  static const int kSymbolFieldNumber = 2;
  ::google::protobuf::uint32 symbol() const;
  void set_symbol(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PbIndexSz)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 time_;
  double highprice_;
  double lowprice_;
  double lastprice_;
  double totalamount_;
  ::google::protobuf::uint64 totalno_;
  double totalvolume_;
  ::google::protobuf::uint32 symbol_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsPbIndexSzImpl();
};
// -------------------------------------------------------------------

class PbCodesSub : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbCodesSub) */ {
 public:
  PbCodesSub();
  virtual ~PbCodesSub();

  PbCodesSub(const PbCodesSub& from);

  inline PbCodesSub& operator=(const PbCodesSub& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbCodesSub(PbCodesSub&& from) noexcept
    : PbCodesSub() {
    *this = ::std::move(from);
  }

  inline PbCodesSub& operator=(PbCodesSub&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbCodesSub& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbCodesSub* internal_default_instance() {
    return reinterpret_cast<const PbCodesSub*>(
               &_PbCodesSub_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(PbCodesSub* other);
  friend void swap(PbCodesSub& a, PbCodesSub& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbCodesSub* New() const PROTOBUF_FINAL { return New(NULL); }

  PbCodesSub* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbCodesSub& from);
  void MergeFrom(const PbCodesSub& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbCodesSub* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 codes = 2;
  int codes_size() const;
  void clear_codes();
  static const int kCodesFieldNumber = 2;
  ::google::protobuf::uint32 codes(int index) const;
  void set_codes(int index, ::google::protobuf::uint32 value);
  void add_codes(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      codes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_codes();

  // bool add_red = 1;
  void clear_add_red();
  static const int kAddRedFieldNumber = 1;
  bool add_red() const;
  void set_add_red(bool value);

  // @@protoc_insertion_point(class_scope:PbCodesSub)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > codes_;
  mutable int _codes_cached_byte_size_;
  bool add_red_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsPbCodesSubImpl();
};
// -------------------------------------------------------------------

class PbCodesBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbCodesBroadcast) */ {
 public:
  PbCodesBroadcast();
  virtual ~PbCodesBroadcast();

  PbCodesBroadcast(const PbCodesBroadcast& from);

  inline PbCodesBroadcast& operator=(const PbCodesBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbCodesBroadcast(PbCodesBroadcast&& from) noexcept
    : PbCodesBroadcast() {
    *this = ::std::move(from);
  }

  inline PbCodesBroadcast& operator=(PbCodesBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbCodesBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbCodesBroadcast* internal_default_instance() {
    return reinterpret_cast<const PbCodesBroadcast*>(
               &_PbCodesBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PbCodesBroadcast* other);
  friend void swap(PbCodesBroadcast& a, PbCodesBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbCodesBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  PbCodesBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbCodesBroadcast& from);
  void MergeFrom(const PbCodesBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbCodesBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 codes = 1;
  int codes_size() const;
  void clear_codes();
  static const int kCodesFieldNumber = 1;
  ::google::protobuf::uint32 codes(int index) const;
  void set_codes(int index, ::google::protobuf::uint32 value);
  void add_codes(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      codes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_codes();

  // @@protoc_insertion_point(class_scope:PbCodesBroadcast)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > codes_;
  mutable int _codes_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_mktdata_2eproto::TableStruct;
  friend void ::protobuf_mktdata_2eproto::InitDefaultsPbCodesBroadcastImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginRequest

// string name = 1;
inline void LoginRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::name() const {
  // @@protoc_insertion_point(field_get:LoginRequest.name)
  return name_.GetNoArena();
}
inline void LoginRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRequest.name)
}
#if LANG_CXX11
inline void LoginRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginRequest.name)
}
#endif
inline void LoginRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRequest.name)
}
inline void LoginRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRequest.name)
}
inline ::std::string* LoginRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:LoginRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_name() {
  // @@protoc_insertion_point(field_release:LoginRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:LoginRequest.name)
}

// string password = 2;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:LoginRequest.password)
  return password_.GetNoArena();
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRequest.password)
}
#if LANG_CXX11
inline void LoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginRequest.password)
}
#endif
inline void LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:LoginRequest.password)
}

// -------------------------------------------------------------------

// Reply

// .ErrCode err = 1;
inline void Reply::clear_err() {
  err_ = 0;
}
inline ::ErrCode Reply::err() const {
  // @@protoc_insertion_point(field_get:Reply.err)
  return static_cast< ::ErrCode >(err_);
}
inline void Reply::set_err(::ErrCode value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:Reply.err)
}

// string desc = 2;
inline void Reply::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Reply::desc() const {
  // @@protoc_insertion_point(field_get:Reply.desc)
  return desc_.GetNoArena();
}
inline void Reply::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Reply.desc)
}
#if LANG_CXX11
inline void Reply::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Reply.desc)
}
#endif
inline void Reply::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Reply.desc)
}
inline void Reply::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Reply.desc)
}
inline ::std::string* Reply::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:Reply.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reply::release_desc() {
  // @@protoc_insertion_point(field_release:Reply.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:Reply.desc)
}

// -------------------------------------------------------------------

// SubscribeRequest

// repeated .SubscribeType sub = 1;
inline int SubscribeRequest::sub_size() const {
  return sub_.size();
}
inline void SubscribeRequest::clear_sub() {
  sub_.Clear();
}
inline ::SubscribeType SubscribeRequest::sub(int index) const {
  // @@protoc_insertion_point(field_get:SubscribeRequest.sub)
  return static_cast< ::SubscribeType >(sub_.Get(index));
}
inline void SubscribeRequest::set_sub(int index, ::SubscribeType value) {
  sub_.Set(index, value);
  // @@protoc_insertion_point(field_set:SubscribeRequest.sub)
}
inline void SubscribeRequest::add_sub(::SubscribeType value) {
  sub_.Add(value);
  // @@protoc_insertion_point(field_add:SubscribeRequest.sub)
}
inline const ::google::protobuf::RepeatedField<int>&
SubscribeRequest::sub() const {
  // @@protoc_insertion_point(field_list:SubscribeRequest.sub)
  return sub_;
}
inline ::google::protobuf::RepeatedField<int>*
SubscribeRequest::mutable_sub() {
  // @@protoc_insertion_point(field_mutable_list:SubscribeRequest.sub)
  return &sub_;
}

// bool replay = 2;
inline void SubscribeRequest::clear_replay() {
  replay_ = false;
}
inline bool SubscribeRequest::replay() const {
  // @@protoc_insertion_point(field_get:SubscribeRequest.replay)
  return replay_;
}
inline void SubscribeRequest::set_replay(bool value) {
  
  replay_ = value;
  // @@protoc_insertion_point(field_set:SubscribeRequest.replay)
}

// repeated string codes = 3;
inline int SubscribeRequest::codes_size() const {
  return codes_.size();
}
inline void SubscribeRequest::clear_codes() {
  codes_.Clear();
}
inline const ::std::string& SubscribeRequest::codes(int index) const {
  // @@protoc_insertion_point(field_get:SubscribeRequest.codes)
  return codes_.Get(index);
}
inline ::std::string* SubscribeRequest::mutable_codes(int index) {
  // @@protoc_insertion_point(field_mutable:SubscribeRequest.codes)
  return codes_.Mutable(index);
}
inline void SubscribeRequest::set_codes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SubscribeRequest.codes)
  codes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SubscribeRequest::set_codes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:SubscribeRequest.codes)
  codes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SubscribeRequest::set_codes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  codes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SubscribeRequest.codes)
}
inline void SubscribeRequest::set_codes(int index, const char* value, size_t size) {
  codes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SubscribeRequest.codes)
}
inline ::std::string* SubscribeRequest::add_codes() {
  // @@protoc_insertion_point(field_add_mutable:SubscribeRequest.codes)
  return codes_.Add();
}
inline void SubscribeRequest::add_codes(const ::std::string& value) {
  codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SubscribeRequest.codes)
}
#if LANG_CXX11
inline void SubscribeRequest::add_codes(::std::string&& value) {
  codes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SubscribeRequest.codes)
}
#endif
inline void SubscribeRequest::add_codes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SubscribeRequest.codes)
}
inline void SubscribeRequest::add_codes(const char* value, size_t size) {
  codes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SubscribeRequest.codes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SubscribeRequest::codes() const {
  // @@protoc_insertion_point(field_list:SubscribeRequest.codes)
  return codes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SubscribeRequest::mutable_codes() {
  // @@protoc_insertion_point(field_mutable_list:SubscribeRequest.codes)
  return &codes_;
}

// uint32 date = 4;
inline void SubscribeRequest::clear_date() {
  date_ = 0u;
}
inline ::google::protobuf::uint32 SubscribeRequest::date() const {
  // @@protoc_insertion_point(field_get:SubscribeRequest.date)
  return date_;
}
inline void SubscribeRequest::set_date(::google::protobuf::uint32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:SubscribeRequest.date)
}

// uint32 timebegin = 5;
inline void SubscribeRequest::clear_timebegin() {
  timebegin_ = 0u;
}
inline ::google::protobuf::uint32 SubscribeRequest::timebegin() const {
  // @@protoc_insertion_point(field_get:SubscribeRequest.timebegin)
  return timebegin_;
}
inline void SubscribeRequest::set_timebegin(::google::protobuf::uint32 value) {
  
  timebegin_ = value;
  // @@protoc_insertion_point(field_set:SubscribeRequest.timebegin)
}

// uint32 timeend = 6;
inline void SubscribeRequest::clear_timeend() {
  timeend_ = 0u;
}
inline ::google::protobuf::uint32 SubscribeRequest::timeend() const {
  // @@protoc_insertion_point(field_get:SubscribeRequest.timeend)
  return timeend_;
}
inline void SubscribeRequest::set_timeend(::google::protobuf::uint32 value) {
  
  timeend_ = value;
  // @@protoc_insertion_point(field_set:SubscribeRequest.timeend)
}

// -------------------------------------------------------------------

// PbCode

// string szWindCode = 1;
inline void PbCode::clear_szwindcode() {
  szwindcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbCode::szwindcode() const {
  // @@protoc_insertion_point(field_get:PbCode.szWindCode)
  return szwindcode_.GetNoArena();
}
inline void PbCode::set_szwindcode(const ::std::string& value) {
  
  szwindcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbCode.szWindCode)
}
#if LANG_CXX11
inline void PbCode::set_szwindcode(::std::string&& value) {
  
  szwindcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbCode.szWindCode)
}
#endif
inline void PbCode::set_szwindcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szwindcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbCode.szWindCode)
}
inline void PbCode::set_szwindcode(const char* value, size_t size) {
  
  szwindcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbCode.szWindCode)
}
inline ::std::string* PbCode::mutable_szwindcode() {
  
  // @@protoc_insertion_point(field_mutable:PbCode.szWindCode)
  return szwindcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbCode::release_szwindcode() {
  // @@protoc_insertion_point(field_release:PbCode.szWindCode)
  
  return szwindcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbCode::set_allocated_szwindcode(::std::string* szwindcode) {
  if (szwindcode != NULL) {
    
  } else {
    
  }
  szwindcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szwindcode);
  // @@protoc_insertion_point(field_set_allocated:PbCode.szWindCode)
}

// string szMarket = 2;
inline void PbCode::clear_szmarket() {
  szmarket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbCode::szmarket() const {
  // @@protoc_insertion_point(field_get:PbCode.szMarket)
  return szmarket_.GetNoArena();
}
inline void PbCode::set_szmarket(const ::std::string& value) {
  
  szmarket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbCode.szMarket)
}
#if LANG_CXX11
inline void PbCode::set_szmarket(::std::string&& value) {
  
  szmarket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbCode.szMarket)
}
#endif
inline void PbCode::set_szmarket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szmarket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbCode.szMarket)
}
inline void PbCode::set_szmarket(const char* value, size_t size) {
  
  szmarket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbCode.szMarket)
}
inline ::std::string* PbCode::mutable_szmarket() {
  
  // @@protoc_insertion_point(field_mutable:PbCode.szMarket)
  return szmarket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbCode::release_szmarket() {
  // @@protoc_insertion_point(field_release:PbCode.szMarket)
  
  return szmarket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbCode::set_allocated_szmarket(::std::string* szmarket) {
  if (szmarket != NULL) {
    
  } else {
    
  }
  szmarket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmarket);
  // @@protoc_insertion_point(field_set_allocated:PbCode.szMarket)
}

// string szCode = 3;
inline void PbCode::clear_szcode() {
  szcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbCode::szcode() const {
  // @@protoc_insertion_point(field_get:PbCode.szCode)
  return szcode_.GetNoArena();
}
inline void PbCode::set_szcode(const ::std::string& value) {
  
  szcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbCode.szCode)
}
#if LANG_CXX11
inline void PbCode::set_szcode(::std::string&& value) {
  
  szcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbCode.szCode)
}
#endif
inline void PbCode::set_szcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbCode.szCode)
}
inline void PbCode::set_szcode(const char* value, size_t size) {
  
  szcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbCode.szCode)
}
inline ::std::string* PbCode::mutable_szcode() {
  
  // @@protoc_insertion_point(field_mutable:PbCode.szCode)
  return szcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbCode::release_szcode() {
  // @@protoc_insertion_point(field_release:PbCode.szCode)
  
  return szcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbCode::set_allocated_szcode(::std::string* szcode) {
  if (szcode != NULL) {
    
  } else {
    
  }
  szcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szcode);
  // @@protoc_insertion_point(field_set_allocated:PbCode.szCode)
}

// string szENName = 4;
inline void PbCode::clear_szenname() {
  szenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbCode::szenname() const {
  // @@protoc_insertion_point(field_get:PbCode.szENName)
  return szenname_.GetNoArena();
}
inline void PbCode::set_szenname(const ::std::string& value) {
  
  szenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbCode.szENName)
}
#if LANG_CXX11
inline void PbCode::set_szenname(::std::string&& value) {
  
  szenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbCode.szENName)
}
#endif
inline void PbCode::set_szenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbCode.szENName)
}
inline void PbCode::set_szenname(const char* value, size_t size) {
  
  szenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbCode.szENName)
}
inline ::std::string* PbCode::mutable_szenname() {
  
  // @@protoc_insertion_point(field_mutable:PbCode.szENName)
  return szenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbCode::release_szenname() {
  // @@protoc_insertion_point(field_release:PbCode.szENName)
  
  return szenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbCode::set_allocated_szenname(::std::string* szenname) {
  if (szenname != NULL) {
    
  } else {
    
  }
  szenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szenname);
  // @@protoc_insertion_point(field_set_allocated:PbCode.szENName)
}

// string szCNName = 5;
inline void PbCode::clear_szcnname() {
  szcnname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbCode::szcnname() const {
  // @@protoc_insertion_point(field_get:PbCode.szCNName)
  return szcnname_.GetNoArena();
}
inline void PbCode::set_szcnname(const ::std::string& value) {
  
  szcnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbCode.szCNName)
}
#if LANG_CXX11
inline void PbCode::set_szcnname(::std::string&& value) {
  
  szcnname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbCode.szCNName)
}
#endif
inline void PbCode::set_szcnname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szcnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbCode.szCNName)
}
inline void PbCode::set_szcnname(const char* value, size_t size) {
  
  szcnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbCode.szCNName)
}
inline ::std::string* PbCode::mutable_szcnname() {
  
  // @@protoc_insertion_point(field_mutable:PbCode.szCNName)
  return szcnname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbCode::release_szcnname() {
  // @@protoc_insertion_point(field_release:PbCode.szCNName)
  
  return szcnname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbCode::set_allocated_szcnname(::std::string* szcnname) {
  if (szcnname != NULL) {
    
  } else {
    
  }
  szcnname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szcnname);
  // @@protoc_insertion_point(field_set_allocated:PbCode.szCNName)
}

// int32 nType = 6;
inline void PbCode::clear_ntype() {
  ntype_ = 0;
}
inline ::google::protobuf::int32 PbCode::ntype() const {
  // @@protoc_insertion_point(field_get:PbCode.nType)
  return ntype_;
}
inline void PbCode::set_ntype(::google::protobuf::int32 value) {
  
  ntype_ = value;
  // @@protoc_insertion_point(field_set:PbCode.nType)
}

// string szWindType = 7;
inline void PbCode::clear_szwindtype() {
  szwindtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbCode::szwindtype() const {
  // @@protoc_insertion_point(field_get:PbCode.szWindType)
  return szwindtype_.GetNoArena();
}
inline void PbCode::set_szwindtype(const ::std::string& value) {
  
  szwindtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbCode.szWindType)
}
#if LANG_CXX11
inline void PbCode::set_szwindtype(::std::string&& value) {
  
  szwindtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbCode.szWindType)
}
#endif
inline void PbCode::set_szwindtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szwindtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbCode.szWindType)
}
inline void PbCode::set_szwindtype(const char* value, size_t size) {
  
  szwindtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbCode.szWindType)
}
inline ::std::string* PbCode::mutable_szwindtype() {
  
  // @@protoc_insertion_point(field_mutable:PbCode.szWindType)
  return szwindtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbCode::release_szwindtype() {
  // @@protoc_insertion_point(field_release:PbCode.szWindType)
  
  return szwindtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbCode::set_allocated_szwindtype(::std::string* szwindtype) {
  if (szwindtype != NULL) {
    
  } else {
    
  }
  szwindtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szwindtype);
  // @@protoc_insertion_point(field_set_allocated:PbCode.szWindType)
}

// int32 nRecord = 8;
inline void PbCode::clear_nrecord() {
  nrecord_ = 0;
}
inline ::google::protobuf::int32 PbCode::nrecord() const {
  // @@protoc_insertion_point(field_get:PbCode.nRecord)
  return nrecord_;
}
inline void PbCode::set_nrecord(::google::protobuf::int32 value) {
  
  nrecord_ = value;
  // @@protoc_insertion_point(field_set:PbCode.nRecord)
}

// int32 nLotSize = 9;
inline void PbCode::clear_nlotsize() {
  nlotsize_ = 0;
}
inline ::google::protobuf::int32 PbCode::nlotsize() const {
  // @@protoc_insertion_point(field_get:PbCode.nLotSize)
  return nlotsize_;
}
inline void PbCode::set_nlotsize(::google::protobuf::int32 value) {
  
  nlotsize_ = value;
  // @@protoc_insertion_point(field_set:PbCode.nLotSize)
}

// -------------------------------------------------------------------

// MktData

// uint32 szCode = 1;
inline void MktData::clear_szcode() {
  szcode_ = 0u;
}
inline ::google::protobuf::uint32 MktData::szcode() const {
  // @@protoc_insertion_point(field_get:MktData.szCode)
  return szcode_;
}
inline void MktData::set_szcode(::google::protobuf::uint32 value) {
  
  szcode_ = value;
  // @@protoc_insertion_point(field_set:MktData.szCode)
}

// uint32 nTime = 2;
inline void MktData::clear_ntime() {
  ntime_ = 0u;
}
inline ::google::protobuf::uint32 MktData::ntime() const {
  // @@protoc_insertion_point(field_get:MktData.nTime)
  return ntime_;
}
inline void MktData::set_ntime(::google::protobuf::uint32 value) {
  
  ntime_ = value;
  // @@protoc_insertion_point(field_set:MktData.nTime)
}

// int32 nStatus = 3;
inline void MktData::clear_nstatus() {
  nstatus_ = 0;
}
inline ::google::protobuf::int32 MktData::nstatus() const {
  // @@protoc_insertion_point(field_get:MktData.nStatus)
  return nstatus_;
}
inline void MktData::set_nstatus(::google::protobuf::int32 value) {
  
  nstatus_ = value;
  // @@protoc_insertion_point(field_set:MktData.nStatus)
}

// uint32 nPreClose = 4;
inline void MktData::clear_npreclose() {
  npreclose_ = 0u;
}
inline ::google::protobuf::uint32 MktData::npreclose() const {
  // @@protoc_insertion_point(field_get:MktData.nPreClose)
  return npreclose_;
}
inline void MktData::set_npreclose(::google::protobuf::uint32 value) {
  
  npreclose_ = value;
  // @@protoc_insertion_point(field_set:MktData.nPreClose)
}

// uint32 nOpen = 5;
inline void MktData::clear_nopen() {
  nopen_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nopen() const {
  // @@protoc_insertion_point(field_get:MktData.nOpen)
  return nopen_;
}
inline void MktData::set_nopen(::google::protobuf::uint32 value) {
  
  nopen_ = value;
  // @@protoc_insertion_point(field_set:MktData.nOpen)
}

// uint32 nHigh = 6;
inline void MktData::clear_nhigh() {
  nhigh_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nhigh() const {
  // @@protoc_insertion_point(field_get:MktData.nHigh)
  return nhigh_;
}
inline void MktData::set_nhigh(::google::protobuf::uint32 value) {
  
  nhigh_ = value;
  // @@protoc_insertion_point(field_set:MktData.nHigh)
}

// uint32 nLow = 7;
inline void MktData::clear_nlow() {
  nlow_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nlow() const {
  // @@protoc_insertion_point(field_get:MktData.nLow)
  return nlow_;
}
inline void MktData::set_nlow(::google::protobuf::uint32 value) {
  
  nlow_ = value;
  // @@protoc_insertion_point(field_set:MktData.nLow)
}

// uint32 nMatch = 8;
inline void MktData::clear_nmatch() {
  nmatch_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nmatch() const {
  // @@protoc_insertion_point(field_get:MktData.nMatch)
  return nmatch_;
}
inline void MktData::set_nmatch(::google::protobuf::uint32 value) {
  
  nmatch_ = value;
  // @@protoc_insertion_point(field_set:MktData.nMatch)
}

// repeated uint32 nAskPrice = 9;
inline int MktData::naskprice_size() const {
  return naskprice_.size();
}
inline void MktData::clear_naskprice() {
  naskprice_.Clear();
}
inline ::google::protobuf::uint32 MktData::naskprice(int index) const {
  // @@protoc_insertion_point(field_get:MktData.nAskPrice)
  return naskprice_.Get(index);
}
inline void MktData::set_naskprice(int index, ::google::protobuf::uint32 value) {
  naskprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:MktData.nAskPrice)
}
inline void MktData::add_naskprice(::google::protobuf::uint32 value) {
  naskprice_.Add(value);
  // @@protoc_insertion_point(field_add:MktData.nAskPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MktData::naskprice() const {
  // @@protoc_insertion_point(field_list:MktData.nAskPrice)
  return naskprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MktData::mutable_naskprice() {
  // @@protoc_insertion_point(field_mutable_list:MktData.nAskPrice)
  return &naskprice_;
}

// repeated uint64 nAskVol = 10;
inline int MktData::naskvol_size() const {
  return naskvol_.size();
}
inline void MktData::clear_naskvol() {
  naskvol_.Clear();
}
inline ::google::protobuf::uint64 MktData::naskvol(int index) const {
  // @@protoc_insertion_point(field_get:MktData.nAskVol)
  return naskvol_.Get(index);
}
inline void MktData::set_naskvol(int index, ::google::protobuf::uint64 value) {
  naskvol_.Set(index, value);
  // @@protoc_insertion_point(field_set:MktData.nAskVol)
}
inline void MktData::add_naskvol(::google::protobuf::uint64 value) {
  naskvol_.Add(value);
  // @@protoc_insertion_point(field_add:MktData.nAskVol)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MktData::naskvol() const {
  // @@protoc_insertion_point(field_list:MktData.nAskVol)
  return naskvol_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MktData::mutable_naskvol() {
  // @@protoc_insertion_point(field_mutable_list:MktData.nAskVol)
  return &naskvol_;
}

// repeated uint64 nBidPrice = 11;
inline int MktData::nbidprice_size() const {
  return nbidprice_.size();
}
inline void MktData::clear_nbidprice() {
  nbidprice_.Clear();
}
inline ::google::protobuf::uint64 MktData::nbidprice(int index) const {
  // @@protoc_insertion_point(field_get:MktData.nBidPrice)
  return nbidprice_.Get(index);
}
inline void MktData::set_nbidprice(int index, ::google::protobuf::uint64 value) {
  nbidprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:MktData.nBidPrice)
}
inline void MktData::add_nbidprice(::google::protobuf::uint64 value) {
  nbidprice_.Add(value);
  // @@protoc_insertion_point(field_add:MktData.nBidPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MktData::nbidprice() const {
  // @@protoc_insertion_point(field_list:MktData.nBidPrice)
  return nbidprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MktData::mutable_nbidprice() {
  // @@protoc_insertion_point(field_mutable_list:MktData.nBidPrice)
  return &nbidprice_;
}

// repeated uint64 nBidVol = 12;
inline int MktData::nbidvol_size() const {
  return nbidvol_.size();
}
inline void MktData::clear_nbidvol() {
  nbidvol_.Clear();
}
inline ::google::protobuf::uint64 MktData::nbidvol(int index) const {
  // @@protoc_insertion_point(field_get:MktData.nBidVol)
  return nbidvol_.Get(index);
}
inline void MktData::set_nbidvol(int index, ::google::protobuf::uint64 value) {
  nbidvol_.Set(index, value);
  // @@protoc_insertion_point(field_set:MktData.nBidVol)
}
inline void MktData::add_nbidvol(::google::protobuf::uint64 value) {
  nbidvol_.Add(value);
  // @@protoc_insertion_point(field_add:MktData.nBidVol)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MktData::nbidvol() const {
  // @@protoc_insertion_point(field_list:MktData.nBidVol)
  return nbidvol_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MktData::mutable_nbidvol() {
  // @@protoc_insertion_point(field_mutable_list:MktData.nBidVol)
  return &nbidvol_;
}

// uint32 nNumTrades = 13;
inline void MktData::clear_nnumtrades() {
  nnumtrades_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nnumtrades() const {
  // @@protoc_insertion_point(field_get:MktData.nNumTrades)
  return nnumtrades_;
}
inline void MktData::set_nnumtrades(::google::protobuf::uint32 value) {
  
  nnumtrades_ = value;
  // @@protoc_insertion_point(field_set:MktData.nNumTrades)
}

// uint64 iVolume = 14;
inline void MktData::clear_ivolume() {
  ivolume_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MktData::ivolume() const {
  // @@protoc_insertion_point(field_get:MktData.iVolume)
  return ivolume_;
}
inline void MktData::set_ivolume(::google::protobuf::uint64 value) {
  
  ivolume_ = value;
  // @@protoc_insertion_point(field_set:MktData.iVolume)
}

// uint64 iTurnover = 15;
inline void MktData::clear_iturnover() {
  iturnover_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MktData::iturnover() const {
  // @@protoc_insertion_point(field_get:MktData.iTurnover)
  return iturnover_;
}
inline void MktData::set_iturnover(::google::protobuf::uint64 value) {
  
  iturnover_ = value;
  // @@protoc_insertion_point(field_set:MktData.iTurnover)
}

// uint64 nTotalBidVol = 16;
inline void MktData::clear_ntotalbidvol() {
  ntotalbidvol_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MktData::ntotalbidvol() const {
  // @@protoc_insertion_point(field_get:MktData.nTotalBidVol)
  return ntotalbidvol_;
}
inline void MktData::set_ntotalbidvol(::google::protobuf::uint64 value) {
  
  ntotalbidvol_ = value;
  // @@protoc_insertion_point(field_set:MktData.nTotalBidVol)
}

// uint64 nTotalAskVol = 17;
inline void MktData::clear_ntotalaskvol() {
  ntotalaskvol_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MktData::ntotalaskvol() const {
  // @@protoc_insertion_point(field_get:MktData.nTotalAskVol)
  return ntotalaskvol_;
}
inline void MktData::set_ntotalaskvol(::google::protobuf::uint64 value) {
  
  ntotalaskvol_ = value;
  // @@protoc_insertion_point(field_set:MktData.nTotalAskVol)
}

// uint32 nWeightedAvgBidPrice = 18;
inline void MktData::clear_nweightedavgbidprice() {
  nweightedavgbidprice_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nweightedavgbidprice() const {
  // @@protoc_insertion_point(field_get:MktData.nWeightedAvgBidPrice)
  return nweightedavgbidprice_;
}
inline void MktData::set_nweightedavgbidprice(::google::protobuf::uint32 value) {
  
  nweightedavgbidprice_ = value;
  // @@protoc_insertion_point(field_set:MktData.nWeightedAvgBidPrice)
}

// uint32 nWeightedAvgAskPrice = 19;
inline void MktData::clear_nweightedavgaskprice() {
  nweightedavgaskprice_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nweightedavgaskprice() const {
  // @@protoc_insertion_point(field_get:MktData.nWeightedAvgAskPrice)
  return nweightedavgaskprice_;
}
inline void MktData::set_nweightedavgaskprice(::google::protobuf::uint32 value) {
  
  nweightedavgaskprice_ = value;
  // @@protoc_insertion_point(field_set:MktData.nWeightedAvgAskPrice)
}

// int32 nIOPV = 20;
inline void MktData::clear_niopv() {
  niopv_ = 0;
}
inline ::google::protobuf::int32 MktData::niopv() const {
  // @@protoc_insertion_point(field_get:MktData.nIOPV)
  return niopv_;
}
inline void MktData::set_niopv(::google::protobuf::int32 value) {
  
  niopv_ = value;
  // @@protoc_insertion_point(field_set:MktData.nIOPV)
}

// int32 nYieldToMaturity = 21;
inline void MktData::clear_nyieldtomaturity() {
  nyieldtomaturity_ = 0;
}
inline ::google::protobuf::int32 MktData::nyieldtomaturity() const {
  // @@protoc_insertion_point(field_get:MktData.nYieldToMaturity)
  return nyieldtomaturity_;
}
inline void MktData::set_nyieldtomaturity(::google::protobuf::int32 value) {
  
  nyieldtomaturity_ = value;
  // @@protoc_insertion_point(field_set:MktData.nYieldToMaturity)
}

// uint32 nHighLimited = 22;
inline void MktData::clear_nhighlimited() {
  nhighlimited_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nhighlimited() const {
  // @@protoc_insertion_point(field_get:MktData.nHighLimited)
  return nhighlimited_;
}
inline void MktData::set_nhighlimited(::google::protobuf::uint32 value) {
  
  nhighlimited_ = value;
  // @@protoc_insertion_point(field_set:MktData.nHighLimited)
}

// uint32 nLowLimited = 23;
inline void MktData::clear_nlowlimited() {
  nlowlimited_ = 0u;
}
inline ::google::protobuf::uint32 MktData::nlowlimited() const {
  // @@protoc_insertion_point(field_get:MktData.nLowLimited)
  return nlowlimited_;
}
inline void MktData::set_nlowlimited(::google::protobuf::uint32 value) {
  
  nlowlimited_ = value;
  // @@protoc_insertion_point(field_set:MktData.nLowLimited)
}

// int32 nSyl1 = 24;
inline void MktData::clear_nsyl1() {
  nsyl1_ = 0;
}
inline ::google::protobuf::int32 MktData::nsyl1() const {
  // @@protoc_insertion_point(field_get:MktData.nSyl1)
  return nsyl1_;
}
inline void MktData::set_nsyl1(::google::protobuf::int32 value) {
  
  nsyl1_ = value;
  // @@protoc_insertion_point(field_set:MktData.nSyl1)
}

// int32 nSyl2 = 25;
inline void MktData::clear_nsyl2() {
  nsyl2_ = 0;
}
inline ::google::protobuf::int32 MktData::nsyl2() const {
  // @@protoc_insertion_point(field_get:MktData.nSyl2)
  return nsyl2_;
}
inline void MktData::set_nsyl2(::google::protobuf::int32 value) {
  
  nsyl2_ = value;
  // @@protoc_insertion_point(field_set:MktData.nSyl2)
}

// int32 nSD2 = 26;
inline void MktData::clear_nsd2() {
  nsd2_ = 0;
}
inline ::google::protobuf::int32 MktData::nsd2() const {
  // @@protoc_insertion_point(field_get:MktData.nSD2)
  return nsd2_;
}
inline void MktData::set_nsd2(::google::protobuf::int32 value) {
  
  nsd2_ = value;
  // @@protoc_insertion_point(field_set:MktData.nSD2)
}

// -------------------------------------------------------------------

// Transaction

// uint32 szCode = 1;
inline void Transaction::clear_szcode() {
  szcode_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::szcode() const {
  // @@protoc_insertion_point(field_get:Transaction.szCode)
  return szcode_;
}
inline void Transaction::set_szcode(::google::protobuf::uint32 value) {
  
  szcode_ = value;
  // @@protoc_insertion_point(field_set:Transaction.szCode)
}

// uint32 nTime = 2;
inline void Transaction::clear_ntime() {
  ntime_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::ntime() const {
  // @@protoc_insertion_point(field_get:Transaction.nTime)
  return ntime_;
}
inline void Transaction::set_ntime(::google::protobuf::uint32 value) {
  
  ntime_ = value;
  // @@protoc_insertion_point(field_set:Transaction.nTime)
}

// uint32 nIndex = 3;
inline void Transaction::clear_nindex() {
  nindex_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::nindex() const {
  // @@protoc_insertion_point(field_get:Transaction.nIndex)
  return nindex_;
}
inline void Transaction::set_nindex(::google::protobuf::uint32 value) {
  
  nindex_ = value;
  // @@protoc_insertion_point(field_set:Transaction.nIndex)
}

// uint32 nPrice = 4;
inline void Transaction::clear_nprice() {
  nprice_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::nprice() const {
  // @@protoc_insertion_point(field_get:Transaction.nPrice)
  return nprice_;
}
inline void Transaction::set_nprice(::google::protobuf::uint32 value) {
  
  nprice_ = value;
  // @@protoc_insertion_point(field_set:Transaction.nPrice)
}

// uint32 nVolume = 5;
inline void Transaction::clear_nvolume() {
  nvolume_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::nvolume() const {
  // @@protoc_insertion_point(field_get:Transaction.nVolume)
  return nvolume_;
}
inline void Transaction::set_nvolume(::google::protobuf::uint32 value) {
  
  nvolume_ = value;
  // @@protoc_insertion_point(field_set:Transaction.nVolume)
}

// uint64 nTurnover = 6;
inline void Transaction::clear_nturnover() {
  nturnover_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Transaction::nturnover() const {
  // @@protoc_insertion_point(field_get:Transaction.nTurnover)
  return nturnover_;
}
inline void Transaction::set_nturnover(::google::protobuf::uint64 value) {
  
  nturnover_ = value;
  // @@protoc_insertion_point(field_set:Transaction.nTurnover)
}

// uint32 nBSFlag = 7;
inline void Transaction::clear_nbsflag() {
  nbsflag_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::nbsflag() const {
  // @@protoc_insertion_point(field_get:Transaction.nBSFlag)
  return nbsflag_;
}
inline void Transaction::set_nbsflag(::google::protobuf::uint32 value) {
  
  nbsflag_ = value;
  // @@protoc_insertion_point(field_set:Transaction.nBSFlag)
}

// uint32 chOrderKind = 8;
inline void Transaction::clear_chorderkind() {
  chorderkind_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::chorderkind() const {
  // @@protoc_insertion_point(field_get:Transaction.chOrderKind)
  return chorderkind_;
}
inline void Transaction::set_chorderkind(::google::protobuf::uint32 value) {
  
  chorderkind_ = value;
  // @@protoc_insertion_point(field_set:Transaction.chOrderKind)
}

// uint32 chFunctionCode = 9;
inline void Transaction::clear_chfunctioncode() {
  chfunctioncode_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::chfunctioncode() const {
  // @@protoc_insertion_point(field_get:Transaction.chFunctionCode)
  return chfunctioncode_;
}
inline void Transaction::set_chfunctioncode(::google::protobuf::uint32 value) {
  
  chfunctioncode_ = value;
  // @@protoc_insertion_point(field_set:Transaction.chFunctionCode)
}

// int32 nAskOrder = 10;
inline void Transaction::clear_naskorder() {
  naskorder_ = 0;
}
inline ::google::protobuf::int32 Transaction::naskorder() const {
  // @@protoc_insertion_point(field_get:Transaction.nAskOrder)
  return naskorder_;
}
inline void Transaction::set_naskorder(::google::protobuf::int32 value) {
  
  naskorder_ = value;
  // @@protoc_insertion_point(field_set:Transaction.nAskOrder)
}

// int32 nBidOrder = 11;
inline void Transaction::clear_nbidorder() {
  nbidorder_ = 0;
}
inline ::google::protobuf::int32 Transaction::nbidorder() const {
  // @@protoc_insertion_point(field_get:Transaction.nBidOrder)
  return nbidorder_;
}
inline void Transaction::set_nbidorder(::google::protobuf::int32 value) {
  
  nbidorder_ = value;
  // @@protoc_insertion_point(field_set:Transaction.nBidOrder)
}

// -------------------------------------------------------------------

// Order

// uint32 szCode = 1;
inline void Order::clear_szcode() {
  szcode_ = 0u;
}
inline ::google::protobuf::uint32 Order::szcode() const {
  // @@protoc_insertion_point(field_get:Order.szCode)
  return szcode_;
}
inline void Order::set_szcode(::google::protobuf::uint32 value) {
  
  szcode_ = value;
  // @@protoc_insertion_point(field_set:Order.szCode)
}

// uint32 nTime = 2;
inline void Order::clear_ntime() {
  ntime_ = 0u;
}
inline ::google::protobuf::uint32 Order::ntime() const {
  // @@protoc_insertion_point(field_get:Order.nTime)
  return ntime_;
}
inline void Order::set_ntime(::google::protobuf::uint32 value) {
  
  ntime_ = value;
  // @@protoc_insertion_point(field_set:Order.nTime)
}

// int32 nOrder = 3;
inline void Order::clear_norder() {
  norder_ = 0;
}
inline ::google::protobuf::int32 Order::norder() const {
  // @@protoc_insertion_point(field_get:Order.nOrder)
  return norder_;
}
inline void Order::set_norder(::google::protobuf::int32 value) {
  
  norder_ = value;
  // @@protoc_insertion_point(field_set:Order.nOrder)
}

// uint32 nPrice = 4;
inline void Order::clear_nprice() {
  nprice_ = 0u;
}
inline ::google::protobuf::uint32 Order::nprice() const {
  // @@protoc_insertion_point(field_get:Order.nPrice)
  return nprice_;
}
inline void Order::set_nprice(::google::protobuf::uint32 value) {
  
  nprice_ = value;
  // @@protoc_insertion_point(field_set:Order.nPrice)
}

// uint32 nVolume = 5;
inline void Order::clear_nvolume() {
  nvolume_ = 0u;
}
inline ::google::protobuf::uint32 Order::nvolume() const {
  // @@protoc_insertion_point(field_get:Order.nVolume)
  return nvolume_;
}
inline void Order::set_nvolume(::google::protobuf::uint32 value) {
  
  nvolume_ = value;
  // @@protoc_insertion_point(field_set:Order.nVolume)
}

// uint32 chOrderKind = 6;
inline void Order::clear_chorderkind() {
  chorderkind_ = 0u;
}
inline ::google::protobuf::uint32 Order::chorderkind() const {
  // @@protoc_insertion_point(field_get:Order.chOrderKind)
  return chorderkind_;
}
inline void Order::set_chorderkind(::google::protobuf::uint32 value) {
  
  chorderkind_ = value;
  // @@protoc_insertion_point(field_set:Order.chOrderKind)
}

// uint32 chFunctionCode = 7;
inline void Order::clear_chfunctioncode() {
  chfunctioncode_ = 0u;
}
inline ::google::protobuf::uint32 Order::chfunctioncode() const {
  // @@protoc_insertion_point(field_get:Order.chFunctionCode)
  return chfunctioncode_;
}
inline void Order::set_chfunctioncode(::google::protobuf::uint32 value) {
  
  chfunctioncode_ = value;
  // @@protoc_insertion_point(field_set:Order.chFunctionCode)
}

// int32 nBroker = 8;
inline void Order::clear_nbroker() {
  nbroker_ = 0;
}
inline ::google::protobuf::int32 Order::nbroker() const {
  // @@protoc_insertion_point(field_get:Order.nBroker)
  return nbroker_;
}
inline void Order::set_nbroker(::google::protobuf::int32 value) {
  
  nbroker_ = value;
  // @@protoc_insertion_point(field_set:Order.nBroker)
}

// int32 chStatus = 9;
inline void Order::clear_chstatus() {
  chstatus_ = 0;
}
inline ::google::protobuf::int32 Order::chstatus() const {
  // @@protoc_insertion_point(field_get:Order.chStatus)
  return chstatus_;
}
inline void Order::set_chstatus(::google::protobuf::int32 value) {
  
  chstatus_ = value;
  // @@protoc_insertion_point(field_set:Order.chStatus)
}

// int32 chFlag = 10;
inline void Order::clear_chflag() {
  chflag_ = 0;
}
inline ::google::protobuf::int32 Order::chflag() const {
  // @@protoc_insertion_point(field_get:Order.chFlag)
  return chflag_;
}
inline void Order::set_chflag(::google::protobuf::int32 value) {
  
  chflag_ = value;
  // @@protoc_insertion_point(field_set:Order.chFlag)
}

// -------------------------------------------------------------------

// Order_queue

// uint32 szCode = 1;
inline void Order_queue::clear_szcode() {
  szcode_ = 0u;
}
inline ::google::protobuf::uint32 Order_queue::szcode() const {
  // @@protoc_insertion_point(field_get:Order_queue.szCode)
  return szcode_;
}
inline void Order_queue::set_szcode(::google::protobuf::uint32 value) {
  
  szcode_ = value;
  // @@protoc_insertion_point(field_set:Order_queue.szCode)
}

// uint32 nTime = 2;
inline void Order_queue::clear_ntime() {
  ntime_ = 0u;
}
inline ::google::protobuf::uint32 Order_queue::ntime() const {
  // @@protoc_insertion_point(field_get:Order_queue.nTime)
  return ntime_;
}
inline void Order_queue::set_ntime(::google::protobuf::uint32 value) {
  
  ntime_ = value;
  // @@protoc_insertion_point(field_set:Order_queue.nTime)
}

// bool nSide = 3;
inline void Order_queue::clear_nside() {
  nside_ = false;
}
inline bool Order_queue::nside() const {
  // @@protoc_insertion_point(field_get:Order_queue.nSide)
  return nside_;
}
inline void Order_queue::set_nside(bool value) {
  
  nside_ = value;
  // @@protoc_insertion_point(field_set:Order_queue.nSide)
}

// uint32 nPrice = 4;
inline void Order_queue::clear_nprice() {
  nprice_ = 0u;
}
inline ::google::protobuf::uint32 Order_queue::nprice() const {
  // @@protoc_insertion_point(field_get:Order_queue.nPrice)
  return nprice_;
}
inline void Order_queue::set_nprice(::google::protobuf::uint32 value) {
  
  nprice_ = value;
  // @@protoc_insertion_point(field_set:Order_queue.nPrice)
}

// uint32 nOrders = 5;
inline void Order_queue::clear_norders() {
  norders_ = 0u;
}
inline ::google::protobuf::uint32 Order_queue::norders() const {
  // @@protoc_insertion_point(field_get:Order_queue.nOrders)
  return norders_;
}
inline void Order_queue::set_norders(::google::protobuf::uint32 value) {
  
  norders_ = value;
  // @@protoc_insertion_point(field_set:Order_queue.nOrders)
}

// uint32 nABItems = 6;
inline void Order_queue::clear_nabitems() {
  nabitems_ = 0u;
}
inline ::google::protobuf::uint32 Order_queue::nabitems() const {
  // @@protoc_insertion_point(field_get:Order_queue.nABItems)
  return nabitems_;
}
inline void Order_queue::set_nabitems(::google::protobuf::uint32 value) {
  
  nabitems_ = value;
  // @@protoc_insertion_point(field_set:Order_queue.nABItems)
}

// repeated int32 nABVolume = 7;
inline int Order_queue::nabvolume_size() const {
  return nabvolume_.size();
}
inline void Order_queue::clear_nabvolume() {
  nabvolume_.Clear();
}
inline ::google::protobuf::int32 Order_queue::nabvolume(int index) const {
  // @@protoc_insertion_point(field_get:Order_queue.nABVolume)
  return nabvolume_.Get(index);
}
inline void Order_queue::set_nabvolume(int index, ::google::protobuf::int32 value) {
  nabvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:Order_queue.nABVolume)
}
inline void Order_queue::add_nabvolume(::google::protobuf::int32 value) {
  nabvolume_.Add(value);
  // @@protoc_insertion_point(field_add:Order_queue.nABVolume)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Order_queue::nabvolume() const {
  // @@protoc_insertion_point(field_list:Order_queue.nABVolume)
  return nabvolume_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Order_queue::mutable_nabvolume() {
  // @@protoc_insertion_point(field_mutable_list:Order_queue.nABVolume)
  return &nabvolume_;
}

// -------------------------------------------------------------------

// PbTest

// bool nothing = 1;
inline void PbTest::clear_nothing() {
  nothing_ = false;
}
inline bool PbTest::nothing() const {
  // @@protoc_insertion_point(field_get:PbTest.nothing)
  return nothing_;
}
inline void PbTest::set_nothing(bool value) {
  
  nothing_ = value;
  // @@protoc_insertion_point(field_set:PbTest.nothing)
}

// -------------------------------------------------------------------

// PbHeartbeat

// bool nothing = 1;
inline void PbHeartbeat::clear_nothing() {
  nothing_ = false;
}
inline bool PbHeartbeat::nothing() const {
  // @@protoc_insertion_point(field_get:PbHeartbeat.nothing)
  return nothing_;
}
inline void PbHeartbeat::set_nothing(bool value) {
  
  nothing_ = value;
  // @@protoc_insertion_point(field_set:PbHeartbeat.nothing)
}

// -------------------------------------------------------------------

// PbIndexSh

// uint32 TradeTime = 1;
inline void PbIndexSh::clear_tradetime() {
  tradetime_ = 0u;
}
inline ::google::protobuf::uint32 PbIndexSh::tradetime() const {
  // @@protoc_insertion_point(field_get:PbIndexSh.TradeTime)
  return tradetime_;
}
inline void PbIndexSh::set_tradetime(::google::protobuf::uint32 value) {
  
  tradetime_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSh.TradeTime)
}

// uint32 Symbol = 2;
inline void PbIndexSh::clear_symbol() {
  symbol_ = 0u;
}
inline ::google::protobuf::uint32 PbIndexSh::symbol() const {
  // @@protoc_insertion_point(field_get:PbIndexSh.Symbol)
  return symbol_;
}
inline void PbIndexSh::set_symbol(::google::protobuf::uint32 value) {
  
  symbol_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSh.Symbol)
}

// double TotalAmount = 3;
inline void PbIndexSh::clear_totalamount() {
  totalamount_ = 0;
}
inline double PbIndexSh::totalamount() const {
  // @@protoc_insertion_point(field_get:PbIndexSh.TotalAmount)
  return totalamount_;
}
inline void PbIndexSh::set_totalamount(double value) {
  
  totalamount_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSh.TotalAmount)
}

// double HighPrice = 4;
inline void PbIndexSh::clear_highprice() {
  highprice_ = 0;
}
inline double PbIndexSh::highprice() const {
  // @@protoc_insertion_point(field_get:PbIndexSh.HighPrice)
  return highprice_;
}
inline void PbIndexSh::set_highprice(double value) {
  
  highprice_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSh.HighPrice)
}

// double LowPrice = 5;
inline void PbIndexSh::clear_lowprice() {
  lowprice_ = 0;
}
inline double PbIndexSh::lowprice() const {
  // @@protoc_insertion_point(field_get:PbIndexSh.LowPrice)
  return lowprice_;
}
inline void PbIndexSh::set_lowprice(double value) {
  
  lowprice_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSh.LowPrice)
}

// double LastPrice = 6;
inline void PbIndexSh::clear_lastprice() {
  lastprice_ = 0;
}
inline double PbIndexSh::lastprice() const {
  // @@protoc_insertion_point(field_get:PbIndexSh.LastPrice)
  return lastprice_;
}
inline void PbIndexSh::set_lastprice(double value) {
  
  lastprice_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSh.LastPrice)
}

// uint64 TotalVolume = 7;
inline void PbIndexSh::clear_totalvolume() {
  totalvolume_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PbIndexSh::totalvolume() const {
  // @@protoc_insertion_point(field_get:PbIndexSh.TotalVolume)
  return totalvolume_;
}
inline void PbIndexSh::set_totalvolume(::google::protobuf::uint64 value) {
  
  totalvolume_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSh.TotalVolume)
}

// -------------------------------------------------------------------

// PbIndexSz

// uint64 Time = 1;
inline void PbIndexSz::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PbIndexSz::time() const {
  // @@protoc_insertion_point(field_get:PbIndexSz.Time)
  return time_;
}
inline void PbIndexSz::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSz.Time)
}

// uint32 Symbol = 2;
inline void PbIndexSz::clear_symbol() {
  symbol_ = 0u;
}
inline ::google::protobuf::uint32 PbIndexSz::symbol() const {
  // @@protoc_insertion_point(field_get:PbIndexSz.Symbol)
  return symbol_;
}
inline void PbIndexSz::set_symbol(::google::protobuf::uint32 value) {
  
  symbol_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSz.Symbol)
}

// double HighPrice = 3;
inline void PbIndexSz::clear_highprice() {
  highprice_ = 0;
}
inline double PbIndexSz::highprice() const {
  // @@protoc_insertion_point(field_get:PbIndexSz.HighPrice)
  return highprice_;
}
inline void PbIndexSz::set_highprice(double value) {
  
  highprice_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSz.HighPrice)
}

// double LowPrice = 4;
inline void PbIndexSz::clear_lowprice() {
  lowprice_ = 0;
}
inline double PbIndexSz::lowprice() const {
  // @@protoc_insertion_point(field_get:PbIndexSz.LowPrice)
  return lowprice_;
}
inline void PbIndexSz::set_lowprice(double value) {
  
  lowprice_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSz.LowPrice)
}

// double LastPrice = 5;
inline void PbIndexSz::clear_lastprice() {
  lastprice_ = 0;
}
inline double PbIndexSz::lastprice() const {
  // @@protoc_insertion_point(field_get:PbIndexSz.LastPrice)
  return lastprice_;
}
inline void PbIndexSz::set_lastprice(double value) {
  
  lastprice_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSz.LastPrice)
}

// double TotalAmount = 6;
inline void PbIndexSz::clear_totalamount() {
  totalamount_ = 0;
}
inline double PbIndexSz::totalamount() const {
  // @@protoc_insertion_point(field_get:PbIndexSz.TotalAmount)
  return totalamount_;
}
inline void PbIndexSz::set_totalamount(double value) {
  
  totalamount_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSz.TotalAmount)
}

// uint64 TotalNo = 7;
inline void PbIndexSz::clear_totalno() {
  totalno_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PbIndexSz::totalno() const {
  // @@protoc_insertion_point(field_get:PbIndexSz.TotalNo)
  return totalno_;
}
inline void PbIndexSz::set_totalno(::google::protobuf::uint64 value) {
  
  totalno_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSz.TotalNo)
}

// double TotalVolume = 8;
inline void PbIndexSz::clear_totalvolume() {
  totalvolume_ = 0;
}
inline double PbIndexSz::totalvolume() const {
  // @@protoc_insertion_point(field_get:PbIndexSz.TotalVolume)
  return totalvolume_;
}
inline void PbIndexSz::set_totalvolume(double value) {
  
  totalvolume_ = value;
  // @@protoc_insertion_point(field_set:PbIndexSz.TotalVolume)
}

// -------------------------------------------------------------------

// PbCodesSub

// bool add_red = 1;
inline void PbCodesSub::clear_add_red() {
  add_red_ = false;
}
inline bool PbCodesSub::add_red() const {
  // @@protoc_insertion_point(field_get:PbCodesSub.add_red)
  return add_red_;
}
inline void PbCodesSub::set_add_red(bool value) {
  
  add_red_ = value;
  // @@protoc_insertion_point(field_set:PbCodesSub.add_red)
}

// repeated uint32 codes = 2;
inline int PbCodesSub::codes_size() const {
  return codes_.size();
}
inline void PbCodesSub::clear_codes() {
  codes_.Clear();
}
inline ::google::protobuf::uint32 PbCodesSub::codes(int index) const {
  // @@protoc_insertion_point(field_get:PbCodesSub.codes)
  return codes_.Get(index);
}
inline void PbCodesSub::set_codes(int index, ::google::protobuf::uint32 value) {
  codes_.Set(index, value);
  // @@protoc_insertion_point(field_set:PbCodesSub.codes)
}
inline void PbCodesSub::add_codes(::google::protobuf::uint32 value) {
  codes_.Add(value);
  // @@protoc_insertion_point(field_add:PbCodesSub.codes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PbCodesSub::codes() const {
  // @@protoc_insertion_point(field_list:PbCodesSub.codes)
  return codes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PbCodesSub::mutable_codes() {
  // @@protoc_insertion_point(field_mutable_list:PbCodesSub.codes)
  return &codes_;
}

// -------------------------------------------------------------------

// PbCodesBroadcast

// repeated uint32 codes = 1;
inline int PbCodesBroadcast::codes_size() const {
  return codes_.size();
}
inline void PbCodesBroadcast::clear_codes() {
  codes_.Clear();
}
inline ::google::protobuf::uint32 PbCodesBroadcast::codes(int index) const {
  // @@protoc_insertion_point(field_get:PbCodesBroadcast.codes)
  return codes_.Get(index);
}
inline void PbCodesBroadcast::set_codes(int index, ::google::protobuf::uint32 value) {
  codes_.Set(index, value);
  // @@protoc_insertion_point(field_set:PbCodesBroadcast.codes)
}
inline void PbCodesBroadcast::add_codes(::google::protobuf::uint32 value) {
  codes_.Add(value);
  // @@protoc_insertion_point(field_add:PbCodesBroadcast.codes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PbCodesBroadcast::codes() const {
  // @@protoc_insertion_point(field_list:PbCodesBroadcast.codes)
  return codes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PbCodesBroadcast::mutable_codes() {
  // @@protoc_insertion_point(field_mutable_list:PbCodesBroadcast.codes)
  return &codes_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ErrCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ErrCode>() {
  return ::ErrCode_descriptor();
}
template <> struct is_proto_enum< ::SubscribeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SubscribeType>() {
  return ::SubscribeType_descriptor();
}
template <> struct is_proto_enum< ::BizCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BizCode>() {
  return ::BizCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mktdata_2eproto__INCLUDED
